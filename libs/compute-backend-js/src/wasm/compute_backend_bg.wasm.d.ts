/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function greet(): void;
export function parse_csv(a: number, b: number, c: number): number;
export function __wbg_computebackend_free(a: number): void;
export function computebackend_insert_number_column_float(a: number, b: number, c: number, d: number): void;
export function computebackend_insert_number_column_frac(a: number, b: number, c: number, d: number, e: number): void;
export function computebackend_new(): number;
export function computebackend_get_slice(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function computebackend_get_slice_string(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function computebackend_sum(a: number, b: number, c: number): number;
export function computebackend_sum_from_js(a: number, b: number): number;
export function computebackend_sum_from_js_frac(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function computebackend_sum_result_fraction_column(a: number, b: number): number;
export function computebackend_min_result_fraction_column(a: number, b: number): number;
export function computebackend_max_result_fraction_column(a: number, b: number): number;
export function computebackend_mean_result_fraction_column(a: number, b: number): number;
export function computebackend_test_deserialization(a: number, b: number): number;
export function computebackend_gt_mask(a: number, b: number, c: number, d: number, e: number): number;
export function computebackend_ge_mask(a: number, b: number, c: number, d: number, e: number): number;
export function computebackend_lt_mask(a: number, b: number, c: number, d: number, e: number): number;
export function computebackend_le_mask(a: number, b: number, c: number, d: number, e: number): number;
export function computebackend_eq_mask(a: number, b: number, c: number, d: number, e: number): number;
export function __wbg_serializedresult_free(a: number): void;
export function serializedresult_new(a: number, b: number): number;
export function serializedresult_type_array(a: number): number;
export function serializedresult_data(a: number): number;
export function __wbg_wasmbindgentestcontext_free(a: number): void;
export function wasmbindgentestcontext_new(): number;
export function wasmbindgentestcontext_args(a: number, b: number, c: number): void;
export function wasmbindgentestcontext_run(a: number, b: number, c: number): number;
export function __wbgtest_console_log(a: number): void;
export function __wbgtest_console_debug(a: number): void;
export function __wbgtest_console_info(a: number): void;
export function __wbgtest_console_warn(a: number): void;
export function __wbgtest_console_error(a: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function wasm_bindgen__convert__closures__invoke1_mut__h4b3a04c8df7f702e(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function wasm_bindgen__convert__closures__invoke3_mut__h40b53801679ddd3c(a: number, b: number, c: number, d: number, e: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h8f032e75c673b5b8(a: number, b: number, c: number, d: number): void;
