input RoleInput {
  name: String!
  workspaceId: ID!
}

type Role {
  id: ID!
  name: String!
  # Helps with resolvers
  workspaceId: String!
  workspace: Workspace!
  users: [User!]!
  createdAt: DateTime
}

type RoleInvitation {
  id: ID!
  role: Role!
  user: User!
  expires_at: DateTime
}

type RoleAccess {
  roleId: ID!
  resourceId: ID

  role: Role!
  permission: PermissionType!
  canComment: Boolean!
}

extend type Mutation {
  createRole(role: RoleInput!): Role!

  removeRole(roleId: ID!): Boolean

  inviteUserToRole(
    roleId: ID!
    userId: ID!
    permission: PermissionType!
  ): [RoleInvitation!]!

  removeUserFromRole(roleId: ID!, userId: ID!): Boolean

  removeSelfFromRole(roleId: ID!): Boolean
}
