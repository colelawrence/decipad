import type { BaseQuantity } from '@decipad/language-interfaces';

const baseQuantityToBaseUnit: Readonly<Record<BaseQuantity, string>> = {
  length: 'meter',
  area: 'squaremeter',
  volume: 'cubicmeter',
  pressure: 'atmosphere',
  force: 'newton',
  energy: 'joule',
  mass: 'gram',
  temperature: 'kelvin',
  second: 'second',
  month: 'month',
  year: 'year',
  substance: 'mole',
  'electric current': 'ampere',
  'electric charge': 'coulomb',
  voltage: 'volt',
  power: 'watt',
  'electrical capacitance': 'farad',
  'electrical resistance': 'ohm',
  'electrical conductance': 'siemens',
  frequency: 'hertz',
  information: 'bit',
  'luminous intensity': 'candela',
  'luminous flow': 'lumen',
  'solid angle': 'steradian',
  angle: 'radian',
  speed: 'kph',
  EUR: 'EUR',
  USD: 'USD',
  GBP: 'GBP',
  SEK: 'SEK',
  XXX: 'XXX',
  NOK: 'NOK',
  JPY: 'JPY',
  CNY: 'CNY',
  PHP: 'PHP',
  INR: 'INR',
  RUB: 'RUB',
  TRY: 'TRY',
  KRW: 'KRW',
  THB: 'THB',
  PLN: 'PLN',
  ILS: 'ILS',
  AED: 'AED',
  SAR: 'SAR',
  AUD: 'AUD',
  CAD: 'CAD',
  CHF: 'CHF',
  HKD: 'HKD',
  NZD: 'NZD',
  SGD: 'SGD',
  ZAR: 'ZAR',
  BRL: 'BRL',
  TWD: 'TWD',
  DKK: 'DKK',
  IDR: 'IDR',
  HUF: 'HUF',
  CZK: 'CZK',
  CLP: 'CLP',
  COP: 'COP',
  MYR: 'MYR',
  RON: 'RON',
  BTC: 'BTC',
  ETH: 'ETH',
  UAH: 'UAH',
};

export function baseUnitForBaseQuantity(baseQuantity: BaseQuantity): string {
  return baseQuantityToBaseUnit[baseQuantity];
}
