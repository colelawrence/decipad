{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Exported by architect/package@6.2.0 on 2021-04-30T13:05:23.177Z",
  "Resources": {
    "HTTP": {
      "Type": "AWS::Serverless::HttpApi",
      "Properties": {
        "StageName": "$default",
        "DefinitionBody": {
          "openapi": "3.0.1",
          "info": {
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/{proxy+}": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCatchallHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/test": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostTestHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/test/{id}": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTestIdHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/graphql": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetGraphqlHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              },
              "post": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostGraphqlHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/signin": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthSigninHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/signin/{provider}": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostApiAuthSigninProviderHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/callback/{provider}": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthCallbackProviderHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/signout": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthSignoutHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              },
              "post": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostApiAuthSignoutHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/session": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthSessionHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/csrf": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthCsrfHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/providers": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthProvidersHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/error": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthErrorHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/auth/token": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiAuthTokenHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/workspaces": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiWorkspacesHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              },
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiWorkspacesHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/workspaces/changes": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiWorkspacesChangesHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/workspaces/{workspaceid}": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiWorkspacesWorkspaceidHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              },
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiWorkspacesWorkspaceidHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/workspaces/{workspaceid}/changes": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiWorkspacesWorkspaceidChangesHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/workspaces/{workspaceid}/pads": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiWorkspacesWorkspaceidPadsHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              },
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiWorkspacesWorkspaceidPadsHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/workspaces/{workspaceid}/pads/changes": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiWorkspacesWorkspaceidPadsChangesHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/pads/{padid}": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiPadsPadidHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              },
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiPadsPadidHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/pads/{padid}/changes": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiPadsPadidChangesHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/pads/{padid}/content": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApiPadsPadidContentHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              },
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiPadsPadidContentHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/api/pads/{padid}/content/changes": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutApiPadsPadidContentChangesHTTPLambda.Arn}/invocations"
                  },
                  "connectionType": "INTERNET"
                }
              }
            },
            "/_static/{proxy+}": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "payloadFormatVersion": "1.0",
                  "type": "http_proxy",
                  "httpMethod": "GET",
                  "uri": {
                    "Fn::Sub": [
                      "http://${bukkit}.s3.${AWS::Region}.amazonaws.com/{proxy}",
                      {
                        "bukkit": {
                          "Ref": "StaticBucket"
                        }
                      }
                    ]
                  },
                  "connectionType": "INTERNET",
                  "timeoutInMillis": 30000
                }
              }
            }
          }
        }
      }
    },
    "GetCatchallHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/node_modules/@architect/asap/dist",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetCatchallHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/{proxy+}",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PostTestHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/post-test",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PostTestHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/test",
              "Method": "POST",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetTestIdHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-test-000id",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetTestIdHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/test/{id}",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetGraphqlHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-graphql",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetGraphqlHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/graphql",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PostGraphqlHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/post-graphql",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PostGraphqlHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/graphql",
              "Method": "POST",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthSigninHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-signin",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthSigninHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/signin",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PostApiAuthSigninProviderHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/post-api-auth-signin-000provider",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PostApiAuthSigninProviderHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/signin/{provider}",
              "Method": "POST",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthCallbackProviderHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-callback-000provider",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthCallbackProviderHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/callback/{provider}",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthSignoutHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-signout",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthSignoutHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/signout",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PostApiAuthSignoutHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/post-api-auth-signout",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PostApiAuthSignoutHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/signout",
              "Method": "POST",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthSessionHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-session",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthSessionHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/session",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthCsrfHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-csrf",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthCsrfHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/csrf",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthProvidersHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-providers",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthProvidersHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/providers",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthErrorHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-error",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthErrorHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/error",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiAuthTokenHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-auth-token",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiAuthTokenHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/auth/token",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiWorkspacesHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-workspaces",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiWorkspacesHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiWorkspacesHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-workspaces",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiWorkspacesHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiWorkspacesChangesHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-workspaces-changes",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiWorkspacesChangesHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces/changes",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiWorkspacesWorkspaceidHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-workspaces-000workspaceid",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiWorkspacesWorkspaceidHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces/{workspaceid}",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiWorkspacesWorkspaceidHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-workspaces-000workspaceid",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiWorkspacesWorkspaceidHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces/{workspaceid}",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiWorkspacesWorkspaceidChangesHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-workspaces-000workspaceid-changes",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiWorkspacesWorkspaceidChangesHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces/{workspaceid}/changes",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiWorkspacesWorkspaceidPadsHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-workspaces-000workspaceid-pads",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiWorkspacesWorkspaceidPadsHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces/{workspaceid}/pads",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiWorkspacesWorkspaceidPadsHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-workspaces-000workspaceid-pads",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiWorkspacesWorkspaceidPadsHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces/{workspaceid}/pads",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiWorkspacesWorkspaceidPadsChangesHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-workspaces-000workspaceid-pads-changes",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiWorkspacesWorkspaceidPadsChangesHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/workspaces/{workspaceid}/pads/changes",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiPadsPadidHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-pads-000padid",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiPadsPadidHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/pads/{padid}",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiPadsPadidHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-pads-000padid",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiPadsPadidHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/pads/{padid}",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiPadsPadidChangesHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-pads-000padid-changes",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiPadsPadidChangesHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/pads/{padid}/changes",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "GetApiPadsPadidContentHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/get-api-pads-000padid-content",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "GetApiPadsPadidContentHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/pads/{padid}/content",
              "Method": "GET",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiPadsPadidContentHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-pads-000padid-content",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiPadsPadidContentHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/pads/{padid}/content",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "PutApiPadsPadidContentChangesHTTPLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/http/put-api-pads-000padid-content-changes",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {
          "PutApiPadsPadidContentChangesHTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/api/pads/{padid}/content/changes",
              "Method": "PUT",
              "ApiId": {
                "Ref": "HTTP"
              }
            }
          }
        }
      }
    },
    "TestTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "key",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "key",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "UsersTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": true
        }
      }
    },
    "UserprofilesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "user_id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "user_id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": true
        }
      }
    },
    "UserkeysTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": true
        }
      }
    },
    "SyncdocTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": true
        }
      }
    },
    "ConnectionsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": true
        }
      }
    },
    "CollabsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "room",
            "AttributeType": "S"
          },
          {
            "AttributeName": "conn",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": true
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "room-index",
            "KeySchema": [
              {
                "AttributeName": "room",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          },
          {
            "IndexName": "conn-index",
            "KeySchema": [
              {
                "AttributeName": "conn",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      }
    },
    "StaticBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "404.html"
        }
      }
    },
    "WS": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "DecipadBackendWebsocketStaging",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.message"
      }
    },
    "WebsocketDeployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "ConnectWSRoute",
        "DefaultWSRoute",
        "DisconnectWSRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "WS"
        }
      }
    },
    "WebsocketStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "StageName": "staging",
        "DeploymentId": {
          "Ref": "WebsocketDeployment"
        },
        "ApiId": {
          "Ref": "WS"
        }
      }
    },
    "WebSocketPolicy": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": "Role",
      "Properties": {
        "PolicyName": "ArcWebSocketPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "execute-api:Invoke",
                "execute-api:ManageConnections"
              ],
              "Resource": [
                {
                  "Fn::Sub": [
                    "arn:aws:execute-api:${AWS::Region}:*:${api}/*",
                    {
                      "api": {
                        "Ref": "WS"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      }
    },
    "ConnectWSLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/ws/connect",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {}
      }
    },
    "ConnectWSRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WS"
        },
        "RouteKey": "$connect",
        "OperationName": "ConnectWSRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectWSIntegration"
              }
            ]
          ]
        }
      }
    },
    "ConnectWSIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WS"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConnectWSLambda.Arn}/invocations",
            {}
          ]
        }
      }
    },
    "ConnectWSPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WS",
        "ConnectWSLambda"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ConnectWSLambda"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DefaultWSLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/ws/default",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {}
      }
    },
    "DefaultWSRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WS"
        },
        "RouteKey": "$default",
        "OperationName": "DefaultWSRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DefaultWSIntegration"
              }
            ]
          ]
        }
      }
    },
    "DefaultWSIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WS"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DefaultWSLambda.Arn}/invocations",
            {}
          ]
        }
      }
    },
    "DefaultWSPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WS",
        "DefaultWSLambda"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "DefaultWSLambda"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DisconnectWSLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "CodeUri": "/home/runner/work/decipad/decipad/apps/backend/src/ws/disconnect",
        "Runtime": "nodejs12.x",
        "MemorySize": 1152,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "ARC_APP_NAME": "decipad-backend",
            "ARC_CLOUDFORMATION": {
              "Ref": "AWS::StackName"
            },
            "ARC_ENV": "staging",
            "ARC_HTTP": "aws_proxy",
            "ARC_ROLE": {
              "Ref": "Role"
            },
            "NODE_ENV": "staging",
            "SESSION_TABLE_NAME": "jwe",
            "ARC_STATIC_BUCKET": {
              "Ref": "StaticBucket"
            },
            "ARC_WSS_URL": {
              "Fn::Sub": [
                "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
                {}
              ]
            },
            "GITHUB_CLIENT_ID": "9527494e09d1bd1db3c3",
            "GITHUB_CLIENT_SECRET": "a278e99b6111d1b0df0d24fc146794be22f81d00",
            "JWT_SECRET": "catwalklrjqwr92309endasjkdn023eqhjdskajhaskj",
            "JWT_SIGNING_PRIVATE_KEY": "{\"kty\":\"oct\",\"kid\":\"ZOZrs3wZ9G2ANQMc2H74fvZK9g50dBdFuCrECQwbznM\",\"alg\":\"HS512\",\"k\":\"JbdHYPsSYiiHDabJZTo1VUJd8HF56eCM_4LTbncw8Wg\"}",
            "NEXTAUTH_URL": "https://pwjc27kjr1.execute-api.eu-west-2.amazonaws.com/api/auth"
          }
        },
        "Role": {
          "Fn::Sub": [
            "arn:aws:iam::${AWS::AccountId}:role/${roleName}",
            {
              "roleName": {
                "Ref": "Role"
              }
            }
          ]
        },
        "Events": {}
      }
    },
    "DisconnectWSRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WS"
        },
        "RouteKey": "$disconnect",
        "OperationName": "DisconnectWSRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectWSIntegration"
              }
            ]
          ]
        }
      }
    },
    "DisconnectWSIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WS"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DisconnectWSLambda.Arn}/invocations",
            {}
          ]
        }
      }
    },
    "DisconnectWSPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WS",
        "DisconnectWSLambda"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "DisconnectWSLambda"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ArcGlobalPolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "ArcStaticBucketPolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:PutObjectAcl",
                    "s3:DeleteObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:aws:s3:::${bukkit}",
                        {
                          "bukkit": {
                            "Ref": "StaticBucket"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:s3:::${bukkit}/*",
                        {
                          "bukkit": {
                            "Ref": "StaticBucket"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "ArcDynamoPolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator",
                    "dynamodb:DescribeStream",
                    "dynamodb:ListStreams"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Ref": "TestTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Ref": "TestTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*",
                        {
                          "tablename": {
                            "Ref": "TestTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Ref": "UsersTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Ref": "UsersTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*",
                        {
                          "tablename": {
                            "Ref": "UsersTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Ref": "UserprofilesTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Ref": "UserprofilesTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*",
                        {
                          "tablename": {
                            "Ref": "UserprofilesTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Ref": "UserkeysTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Ref": "UserkeysTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*",
                        {
                          "tablename": {
                            "Ref": "UserkeysTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Ref": "SyncdocTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Ref": "SyncdocTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*",
                        {
                          "tablename": {
                            "Ref": "SyncdocTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Ref": "ConnectionsTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Ref": "ConnectionsTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*",
                        {
                          "tablename": {
                            "Ref": "ConnectionsTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Ref": "CollabsTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Ref": "CollabsTable"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*",
                        {
                          "tablename": {
                            "Ref": "CollabsTable"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "TestParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/tables/${tablename}",
            {
              "tablename": "test"
            }
          ]
        },
        "Value": {
          "Ref": "TestTable"
        }
      }
    },
    "UsersParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/tables/${tablename}",
            {
              "tablename": "users"
            }
          ]
        },
        "Value": {
          "Ref": "UsersTable"
        }
      }
    },
    "UserprofilesParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/tables/${tablename}",
            {
              "tablename": "userprofiles"
            }
          ]
        },
        "Value": {
          "Ref": "UserprofilesTable"
        }
      }
    },
    "UserkeysParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/tables/${tablename}",
            {
              "tablename": "userkeys"
            }
          ]
        },
        "Value": {
          "Ref": "UserkeysTable"
        }
      }
    },
    "SyncdocParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/tables/${tablename}",
            {
              "tablename": "syncdoc"
            }
          ]
        },
        "Value": {
          "Ref": "SyncdocTable"
        }
      }
    },
    "ConnectionsParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/tables/${tablename}",
            {
              "tablename": "connections"
            }
          ]
        },
        "Value": {
          "Ref": "ConnectionsTable"
        }
      }
    },
    "CollabsParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/tables/${tablename}",
            {
              "tablename": "collabs"
            }
          ]
        },
        "Value": {
          "Ref": "CollabsTable"
        }
      }
    },
    "StaticBucketParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/static/${key}",
            {
              "key": "bucket"
            }
          ]
        },
        "Value": {
          "Ref": "StaticBucket"
        }
      }
    },
    "StaticFingerprintParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Name": {
          "Fn::Sub": [
            "/${AWS::StackName}/static/${key}",
            {
              "key": "fingerprint"
            }
          ]
        },
        "Value": "false"
      }
    },
    "ParameterStorePolicy": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": "Role",
      "Properties": {
        "PolicyName": "ArcParameterStorePolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "ssm:GetParametersByPath",
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}",
                  {}
                ]
              }
            }
          ]
        },
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      }
    }
  },
  "Outputs": {
    "API": {
      "Description": "API Gateway (HTTP)",
      "Value": {
        "Fn::Sub": [
          "https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com",
          {
            "ApiId": {
              "Ref": "HTTP"
            }
          }
        ]
      }
    },
    "ApiId": {
      "Description": "API ID (ApiId)",
      "Value": {
        "Ref": "HTTP"
      }
    },
    "BucketURL": {
      "Description": "Bucket URL",
      "Value": {
        "Fn::Sub": [
          "http://${bukkit}.s3-website.${AWS::Region}.amazonaws.com",
          {
            "bukkit": {
              "Ref": "StaticBucket"
            }
          }
        ]
      }
    },
    "WSS": {
      "Description": "WebSocket Endpoint",
      "Value": {
        "Fn::Sub": [
          "wss://${WS}.execute-api.${AWS::Region}.amazonaws.com/staging",
          {}
        ]
      }
    }
  }
}