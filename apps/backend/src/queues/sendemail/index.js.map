{
  "version": 3,
  "sources": ["../../../lib/architect/queues/sendemail/index.ts", "../../../lib/email-templates/team-invite.ts", "../../../lib/email-templates/email-validation.ts", "../../../lib/email-templates/auth-magiclink.ts", "../../../lib/email-templates/utils/salutation.ts", "../../../lib/email-templates/workspace-invite.ts", "../../../lib/email-templates/generic-invite.ts", "../../../lib/email-templates/index.ts", "../../../lib/services/send-email.ts", "../../../lib/config.ts", "../../../lib/queues/handler.ts"],
  "sourcesContent": ["import templates from '../../../email-templates';\nimport sendEmail from '../../../services/send-email';\nimport handle from '../../../queues/handler';\n\ntype SendEmailArgs = {\n  template: keyof typeof templates;\n} & Record<string, any>;\n\nexport const handler = handle(handleSendEmail);\n\nconst inTesting = !!process.env.JEST_WORKER_ID;\n\nasync function handleSendEmail({\n  template: templateName,\n  ...params\n}: SendEmailArgs) {\n  if (inTesting) {\n    return;\n  }\n\n  const template = templates[templateName];\n  if (!template) {\n    throw new Error(`Could not find template with name ${templateName}`);\n  }\n\n  const { subject, body } = template(params);\n\n  await sendEmail({\n    to: params.email || params.to.email,\n    body,\n    subject,\n  });\n}\n", "export default ({ from, to, team, inviteAcceptLink }: Record<string, any>) => ({\n  subject: `${from.name} invites you to team ${team.name}`,\n  body: `Dear ${to.name},\n\n${from.name} has invited you to join the team ${team.name}.\n\nYou can accept it by clicking on the following link:\n\n${inviteAcceptLink}\n\nIf you don't want to accept this invitation you can safely ignore this email.\n\nSincerely,\n\nThe Deci team.\n`,\n});\n", "export default ({ name, validationLink }: Record<string, any>) => ({\n  subject: `Validate your e-mail address`,\n  body: `${name ? `Dear ${name}` : 'Hi'},\n\nYou have recently created an account in Deci.\n\nTo activate it you need to validate your email address by clicking in this link:\n\n${validationLink}\n\nIf it wasn't you that created the account, you can safely ignore this e-mail.\n\nSincerely,\n\nThe Deci team.\n`,\n});\n", "export default ({ url }: Record<string, any>) => ({\n  subject: `Deci: Sign in`,\n  body: `Hello,\n\nYou have recently asked to sign into Deci.\n\nTo be able to do that, you can click on this link:\n\n${url}\n\nIf it wasn't you that initiated this, you can safely ignore this e-mail.\n\nWhatever you do, please don't forward this e-mail to anyone.\n\nSincerely,\n\nThe Deci team.\n`,\n});\n", "export default function salutation(user: User) {\n  if (!user.name) {\n    return 'Hi,';\n  }\n  return `Dear ${user.name}`;\n};\n", "import salutation from './utils/salutation';\n\nexport default ({ from, to, workspace, inviteAcceptLink }: Record<string, any>) => ({\n  subject: `${from.name} invites you to workspace \"${workspace.name}\"`,\n  body: `${salutation(to)},\n\n${from.name} has invited you to join the workspace \"${workspace.name}\".\n\nYou can accept it by clicking on the following link:\n\n${inviteAcceptLink}\n\nIf you don't want to accept this invitation you can safely ignore this email.\n\nSincerely,\n\nThe Deci team.\n`,\n});\n", "import salutation from './utils/salutation';\n\nexport default ({ from, to, resource, resourceName, inviteAcceptLink }: Record<string, any>) => ({\n  subject: `${from.name} invites you to a ${resource.type}`,\n  body: `${salutation(to)},\n\n${from.name} has shared a ${resource.type} named \"${resourceName}\".\n\nYou can accept it by clicking on the following link:\n\n${inviteAcceptLink}\n\nIf you don't want to accept this invitation you can safely ignore this email.\n\nSincerely,\n\nThe Deci team.\n`,\n});\n", "import teamInvite from './team-invite';\nimport emailValidation from './email-validation';\nimport authMagiclink from './auth-magiclink';\nimport workspaceInvite from './workspace-invite';\nimport genericInvite from './generic-invite';\n\nexport default {\n  'team-invite': teamInvite,\n  'email-validation': emailValidation,\n  'auth-magiclink': authMagiclink,\n  'workspace-invite': workspaceInvite,\n  'generic-invite': genericInvite,\n};", "import { SESV2 } from 'aws-sdk';\nimport { email as emailConfig } from '../config';\n\nconst { ses: sesConfig, senderEmailAddress } = emailConfig();\n\ntype SendEmailParams = {\n  to: string;\n  body: string;\n  subject: string;\n};\n\nconst serviceOptions = {\n  ...sesConfig,\n  apiVersion: '2019-09-27',\n};\n\nconst service = new SESV2(serviceOptions);\n\nexport default function sendEmail({\n  to,\n  body,\n  subject,\n}: SendEmailParams): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const params = {\n      Content: {\n        Simple: {\n          Body: {\n            Text: {\n              Data: body,\n              Charset: 'UTF-8',\n            },\n          },\n          Subject: {\n            Data: subject,\n            Charset: 'UTF-8',\n          },\n        },\n      },\n      Destination: {\n        ToAddresses: [to],\n      },\n      FromEmailAddress: senderEmailAddress!,\n      ReplyToAddresses: [senderEmailAddress!],\n    };\n\n    service.sendEmail(params, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve();\n    });\n  });\n}\n", "import assert from 'assert';\n\nexport function s3() {\n  return {\n    endpoint: env('DECI_S3_ENDPOINT', 'localhost:4568'),\n    accessKeyId: env('DECI_S3_ACCESS_KEY_ID'),\n    secretAccessKey: env('DECI_S3_SECRET_ACCESS_KEY'),\n    buckets: {\n      pads: env('DECI_S3_PADS_BUCKET'),\n    },\n  };\n}\n\nexport function app() {\n  return {\n    urlBase: env('DECI_APP_URL_BASE', 'http://localhost:4200'),\n  };\n}\n\nexport function auth() {\n  return {\n    userKeyValidationExpirationSeconds: Number(\n      env('DECI_KEY_VALIDATION_EXPIRATION_SECONDS', '2592000')\n    ),\n    inviteExpirationSeconds: Number(\n      env('DECI_INVITE_EXPIRATION_SECONDS', '86400')\n    ),\n    jwt: {\n      secret: env('JWT_SECRET'),\n      signingKey: Buffer.from(\n        env('JWT_SIGNING_PRIVATE_KEY'),\n        'base64'\n      ).toString(),\n      maxAge: Number(env('JWT_MAX_AGE', '2592000')),\n    },\n    providers: {\n      github: {\n        clientId: env('GITHUB_CLIENT_ID'),\n        clientSecret: env('GITHUB_CLIENT_SECRET'),\n      },\n    },\n  };\n}\n\nexport function email() {\n  return {\n    ses: {\n      accessKeyId: env('DECI_SES_ACCESS_KEY_ID'),\n      secretAccessKey: env('DECI_SES_SECRET_ACCESS_KEY'),\n      region: env('AWS_REGION', 'eu-west-2'),\n    },\n    senderEmailAddress: env('DECI_FROM_EMAIL_ADDRESS'),\n  };\n}\n\nfunction env(\n  name: string,\n  defaultValue: string | undefined = undefined\n): string {\n  let value = process.env[name];\n  if (value == null) {\n    if (defaultValue !== undefined) {\n      value = defaultValue;\n    } else {\n      assert.fail(`${name} env var must be defined`);\n    }\n  }\n  return value;\n}\n", "type Handler = (payload: any) => Promise<void>;\n\ntype Event = {\n  Records: Array<{\n    body: string;\n  }>;\n};\n\nexport default function queueHandler(handler: Handler) {\n  return async (event: Event) => {\n    for (const record of event.Records) {\n      const message = JSON.parse(record.body);\n      try {\n        await handler(message);\n      } catch (err) {\n        console.error('Error processing queue element: %j', message);\n        console.error(err);\n        // do not throw\n      }\n    }\n    return { statusCode: 200 };\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
