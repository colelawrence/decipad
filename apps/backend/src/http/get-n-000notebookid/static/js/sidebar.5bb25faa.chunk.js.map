{"version":3,"file":"static/js/sidebar.5bb25faa.chunk.js","mappings":"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","sources":["../../ui/src/atoms/ThemePicker/ThemePicker.tsx","../../ui/src/molecules/AccountAvatar/AccountAvatar.tsx","../../ui/src/organisms/WorkspaceSelector/WorkspaceSelectorButton.tsx","../../ui/src/organisms/WorkspaceSelector/WorkspaceSelector.tsx","../../ui/src/atoms/NavigationItem/NavigationItem.tsx","../../ui/src/molecules/WorkspaceItem/WorkspaceItem.tsx","../../ui/src/molecules/NavigationList/NavigationList.tsx","../../ui/src/organisms/AccountMenu/AccountMenu.tsx","../../ui/src/atoms/ExternalHrefIcon/ExternalHrefIcon.tsx","../../ui/src/templates/CreateOrEditSectionModal/CreateOrEditSectionModal.tsx","../../ui/src/organisms/WorkspaceNavigation/WorkspaceNavigation.tsx","../../ui/src/organisms/WorkspaceOptions/WorkspaceOptions.tsx","../../ui/src/templates/DashboardSidebar/DashboardSidebar.tsx","../../../apps/frontend/src/workspaces/workspace/Sidebar.tsx","../../ui/src/atoms/ColorPicker/ColorPicker.tsx","../../ui/src/atoms/IconButton/IconButton.tsx","../../ui/src/styles/buttons.ts","../../ui/src/styles/dashboard.ts","../../ui/src/utils/dnd.ts","../../../node_modules/fast-deep-equal/index.js","../../../node_modules/@react-dnd/shallowequal/src/index.ts","../../../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../../../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../../../node_modules/react-dnd/src/hooks/useCollector.ts","../../../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../../../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../../../node_modules/react-dnd/src/internals/TargetConnector.ts","../../../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../../../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../../../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../../../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../../../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../../../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../../../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../../../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../../../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../../../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../../../node_modules/react-dnd/src/internals/isRef.ts","../../../node_modules/react-dnd/src/internals/registration.ts","../../../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\nimport * as icons from '../../icons';\nimport { cssVar, shortAnimationDuration } from '../../primitives';\n\nexport interface ToggleProps {\n  active?: boolean;\n  onChange?: (newActive: boolean) => void;\n  ariaRoleDescription?: string;\n}\n\nexport const ThemePicker = ({\n  active,\n  onChange = noop,\n  ariaRoleDescription,\n}: ToggleProps): ReturnType<FC> => {\n  return (\n    <button\n      aria-roledescription={ariaRoleDescription}\n      css={[themePickerStyles, active && activeThemePickerStyles]}\n      onClick={() => {\n        onChange(!active);\n      }}\n    >\n      <span\n        role=\"checkbox\"\n        aria-checked={active}\n        css={[toggleThemeSwitchStyles, active && activeThemeSwitchStyles]}\n      />\n      <span css={[themeIconStyles, { top: 8, left: 8 }]}>\n        <icons.Sun />\n      </span>\n      <span css={[themeIconStyles, { bottom: 8, left: 8 }]}>\n        <icons.MoonTheme />\n      </span>\n    </button>\n  );\n};\n\nconst themeIconStyles = css({\n  position: 'absolute',\n  height: '16px',\n  width: '16px',\n});\n\nconst themePickerStyles = css({\n  backgroundColor: cssVar('strongHighlightColor'),\n  width: '32px',\n  height: '64px',\n  borderRadius: '8px',\n  display: 'flex',\n  alignItems: 'center',\n  padding: '2px',\n  transition: `background-color ${shortAnimationDuration} ease-in-out`,\n  position: 'relative',\n});\n\nconst activeThemePickerStyles = css({\n  backgroundColor: cssVar('strongHighlightColor'),\n});\n\nconst toggleThemeSwitchStyles = css({\n  backgroundColor: cssVar('backgroundColor'),\n  width: '28px',\n  height: '28px',\n  borderRadius: '6px',\n  position: 'absolute',\n  top: '2px',\n  transition: `top ${shortAnimationDuration} ease-out`,\n});\n\nconst activeThemeSwitchStyles = css({\n  top: 'calc(100% - 30px)',\n});\n","import { css } from '@emotion/react';\nimport { nanoid } from 'nanoid';\nimport { ComponentProps, useState } from 'react';\n\nimport { noop } from '@decipad/utils';\nimport { Avatar } from '../../atoms';\nimport { Chevron } from '../../icons';\nimport {\n  cssVar,\n  p12Medium,\n  setCssVar,\n  shortAnimationDuration,\n} from '../../primitives';\nimport { useEventNoEffect } from '../../utils/useEventNoEffect';\n\nconst avatarGridStyles = css(p12Medium, {\n  display: 'grid',\n  alignItems: 'center',\n  gridTemplateColumns: '28px',\n  columnGap: '6px',\n});\n\nconst chevronStyles = (hoverSelector: string) =>\n  css(setCssVar('currentTextColor', cssVar('weakTextColor')), {\n    width: '8px',\n    transition: `padding-top ease-in-out ${shortAnimationDuration}`,\n    [`${hoverSelector} &`]: {\n      paddingTop: '4px',\n    },\n  });\n\ntype AccountAvatarProps = Pick<\n  ComponentProps<typeof Avatar>,\n  'name' | 'email'\n> & {\n  readonly menuOpen: boolean;\n  readonly variant?: boolean;\n  readonly onClick?: () => void;\n};\n\nexport const AccountAvatar = ({\n  menuOpen,\n  onClick = noop,\n  variant = false,\n  ...props\n}: AccountAvatarProps): ReturnType<React.FC> => {\n  const [hoverTargetClassName] = useState(`account-avatar-${nanoid()}`);\n  const hoverSelector = menuOpen ? '' : `.${hoverTargetClassName}:hover`;\n  const onAccountAvatarClick = useEventNoEffect(onClick);\n  return (\n    <button\n      onClick={onAccountAvatarClick}\n      className={hoverTargetClassName}\n      css={avatarGridStyles}\n    >\n      <Avatar hoverSelector={hoverSelector} {...props} />\n\n      {variant && (\n        <div css={chevronStyles(hoverSelector)}>\n          <Chevron type={menuOpen ? 'collapse' : 'expand'} />\n        </div>\n      )}\n    </button>\n  );\n};\n","import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { ComponentProps, FC, useCallback } from 'react';\nimport { Avatar } from '../../atoms';\nimport { WorkspaceItem } from '../../molecules';\nimport { purple300, smallScreenQuery } from '../../primitives';\nimport { useEventNoEffect } from '../../utils/useEventNoEffect';\n\ninterface WorkspaceSelectorButtonProps {\n  readonly activeWorkspace: ComponentProps<typeof WorkspaceItem>;\n  readonly thisWorkspace: ComponentProps<typeof WorkspaceItem>;\n  readonly onClickWorkspace?: (id: string) => void;\n}\n\nexport const WorkspaceButtonSelector = ({\n  activeWorkspace,\n  thisWorkspace,\n  onClickWorkspace = noop,\n}: WorkspaceSelectorButtonProps): ReturnType<FC> => {\n  return (\n    <div css={workspaceButtonWrapperStyles}>\n      <button\n        onClick={useEventNoEffect(\n          useCallback(() => {\n            // Doing navigation programatically instead of using an <Anchor> component because <a>\n            // inside of an <a> is semantically forbidden.\n            onClickWorkspace(thisWorkspace.id);\n          }, [thisWorkspace.id, onClickWorkspace])\n        )}\n      >\n        <Avatar\n          name={thisWorkspace.name}\n          title={`Workspace \"${thisWorkspace.name}\"`}\n          variant\n          roundedSquare\n        />\n      </button>\n      <span\n        css={\n          thisWorkspace.id === activeWorkspace.id && workspaceIsSelectedStyles\n        }\n      />\n    </div>\n  );\n};\n\nconst workspaceIsSelectedStyles = css({\n  position: 'absolute',\n  left: '0px',\n  width: '4px',\n  height: '24px',\n  borderTopRightRadius: '4px',\n  borderBottomRightRadius: '4px',\n  backgroundColor: purple300.rgb,\n  [smallScreenQuery]: {\n    left: 'unset',\n    borderTopRightRadius: 0,\n    borderBottomLeftRadius: '4px',\n    top: 0,\n    height: '4px',\n    width: '24px',\n  },\n});\n\nconst workspaceButtonWrapperStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minWidth: '16px',\n  minHeight: '16px',\n  maxWidth: '32px',\n  maxHeight: '32px',\n});\n","import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { ComponentProps, FC } from 'react';\nimport { IconButton, Tooltip } from '../../atoms';\nimport { Create } from '../../icons';\nimport { WorkspaceItem } from '../../molecules';\nimport { smallScreenQuery } from '../../primitives';\nimport { WorkspaceButtonSelector } from './WorkspaceSelectorButton';\n\ninterface WorkspaceSelectorProps {\n  readonly activeWorkspace: ComponentProps<typeof WorkspaceItem>;\n  readonly allWorkspaces: ReadonlyArray<ComponentProps<typeof WorkspaceItem>>;\n  readonly onCreateWorkspace?: () => void;\n  readonly onClickWorkspace?: (id: string) => void;\n}\n\nexport const WorkspaceSelector = ({\n  activeWorkspace,\n  allWorkspaces,\n  onCreateWorkspace = noop,\n  onClickWorkspace = noop,\n}: WorkspaceSelectorProps): ReturnType<FC> => {\n  return (\n    <div css={workspaceSelectorStyles}>\n      <div\n        css={{\n          margin: '20px 10.5px',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '8px',\n          [smallScreenQuery]: {\n            flexDirection: 'row',\n            margin: '10.5px 20px',\n            width: '100%',\n          },\n        }}\n      >\n        {allWorkspaces.map((thisWorkspace, i) => (\n          <div key={i} css={workspaceAvatars}>\n            <Tooltip\n              side=\"right\"\n              variant=\"small\"\n              hoverOnly\n              trigger={\n                <WorkspaceButtonSelector\n                  activeWorkspace={activeWorkspace}\n                  thisWorkspace={thisWorkspace}\n                  onClickWorkspace={onClickWorkspace}\n                ></WorkspaceButtonSelector>\n              }\n            >\n              {thisWorkspace.name}\n            </Tooltip>\n          </div>\n        ))}\n        <Tooltip\n          side=\"right\"\n          variant=\"small\"\n          trigger={\n            <div css={createWorkspaceButton}>\n              <IconButton roundedSquare onClick={onCreateWorkspace}>\n                <Create />\n              </IconButton>\n            </div>\n          }\n        >\n          Create a new workspace\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nconst workspaceSelectorStyles = css({\n  width: '55px',\n  overflowX: 'hidden',\n  display: 'inline-flex',\n  flexShrink: 0,\n  flexDirection: 'column',\n  [smallScreenQuery]: {\n    width: '100%',\n    flexDirection: 'row',\n    height: '55px',\n  },\n});\n\nconst workspaceAvatars = css({\n  cursor: 'pointer',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nconst createWorkspaceButton = css({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& button': {\n    width: '32px',\n    height: '32px',\n  },\n});\n","import { noop } from '@decipad/utils';\nimport { css, SerializedStyles } from '@emotion/react';\nimport { FC, ReactNode, useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { IconButton } from '..';\nimport { Ellipsis } from '../../icons';\nimport { MenuList } from '../../molecules';\nimport {\n  cssVar,\n  normalOpacity,\n  OpaqueColor,\n  p14Regular,\n  setCssVar,\n  transparency,\n  weakOpacity,\n} from '../../primitives';\nimport { Anchor, DNDItemTypes } from '../../utils';\nimport { useEventNoEffect } from '../../utils/useEventNoEffect';\n\ntype DNDType = {\n  target: string;\n  id: string;\n};\n\nexport type NavigationItemProps = {\n  readonly children: ReactNode;\n  readonly backgroundColor?: OpaqueColor | string;\n  readonly icon?: React.ReactNode;\n  readonly iconStyles?: SerializedStyles;\n  readonly wrapperStyles?: SerializedStyles;\n  readonly menuItems?: ReactNode[];\n  readonly dndInfo?: DNDType;\n  readonly isActive?: boolean;\n} & (\n  | {\n      readonly href?: string;\n      readonly exact?: boolean;\n      readonly onClick?: undefined;\n    }\n  | {\n      readonly href?: string;\n      readonly onClick?: () => void;\n      readonly exact?: boolean;\n    }\n  | {\n      readonly onClick: () => void;\n      readonly href?: undefined;\n      readonly exact?: undefined;\n    }\n);\n\nexport const NavigationItem = ({\n  children,\n  icon,\n\n  href,\n  exact,\n  dndInfo,\n  menuItems,\n  iconStyles = css({ height: 18, width: 18 }),\n  wrapperStyles = css({}),\n  isActive = false,\n  backgroundColor = cssVar('highlightColor'),\n\n  onClick,\n}: NavigationItemProps): ReturnType<FC> => {\n  const styledIcon = icon && <span css={[iconStylez, iconStyles]}>{icon}</span>;\n  const onButtonClick = useEventNoEffect(onClick);\n  const [open, setOpen] = useState(false);\n  const [{ isOver, canDrop }, drop] = useDrop(\n    () => ({\n      accept: DNDItemTypes.ICON,\n      drop: () => ({ id: dndInfo?.id }),\n      canDrop: () => {\n        return !!dndInfo && dndInfo.target === DNDItemTypes.ICON;\n      },\n      collect: (monitor) => ({\n        isOver: !!monitor.isOver(),\n        canDrop: !!monitor.canDrop(),\n      }),\n    }),\n    [dndInfo]\n  );\n  const maybeRightSide =\n    isActive && menuItems ? (\n      <MenuList\n        root\n        dropdown\n        align=\"start\"\n        side=\"bottom\"\n        open={open}\n        onChangeOpen={setOpen}\n        trigger={\n          <div css={workspaceColorActionsStyles}>\n            <IconButton\n              onClick={noop}\n              roleDescription=\"open menu\"\n              roundedSquare\n              transparent\n            >\n              <Ellipsis />\n            </IconButton>\n          </div>\n        }\n      >\n        {menuItems}\n      </MenuList>\n    ) : null;\n  const leftSide = (\n    <div aria-label=\"lefty\" css={leftSideStyles}>\n      {styledIcon}\n      {children}\n    </div>\n  );\n  const weakColor =\n    typeof backgroundColor === 'string'\n      ? backgroundColor\n      : transparency(backgroundColor, weakOpacity).rgba;\n  const weakColor2 =\n    typeof backgroundColor === 'string'\n      ? backgroundColor\n      : transparency(backgroundColor, 0.06).rgba;\n  const strongColor =\n    typeof backgroundColor === 'string'\n      ? backgroundColor\n      : transparency(backgroundColor, normalOpacity).rgba;\n  return (\n    <div\n      ref={drop}\n      css={[\n        containerStyles,\n        wrapperStyles,\n        canDrop &&\n          css({\n            borderRadius: 5,\n            background: `repeating-linear-gradient(\n              45deg,\n              ${weakColor},\n              ${weakColor} 10px,\n              ${weakColor2} 10px,\n              ${weakColor2} 20px\n            )`,\n          }),\n        canDrop &&\n          isOver &&\n          css({\n            backgroundColor: strongColor,\n          }),\n      ]}\n    >\n      {onClick ? (\n        <span css={isActive && css({ button: activeStyles(backgroundColor) })}>\n          <button\n            css={[\n              navigationItemButtonStyles(backgroundColor),\n              { justifyContent: 'space-between' },\n            ]}\n            onClick={onButtonClick}\n          >\n            {leftSide}\n            {maybeRightSide}\n          </button>\n        </span>\n      ) : (\n        <Anchor\n          css={[\n            navigationItemButtonStyles(backgroundColor),\n            { justifyContent: 'space-between' },\n          ]}\n          activeStyles={css([isActive && activeStyles(backgroundColor)])}\n          href={href}\n          exact={exact}\n        >\n          {leftSide}\n          {maybeRightSide}\n        </Anchor>\n      )}\n    </div>\n  );\n};\n\nconst containerStyles = css({\n  display: 'grid',\n  gridTemplateRows: 'minmax(32px, min-content)',\n  gridTemplateColumns: 'minmax(150px, 100%)',\n});\n\nconst activeStyles = (backgroundColor: OpaqueColor | string) =>\n  css({\n    backgroundColor:\n      typeof backgroundColor === 'string'\n        ? backgroundColor\n        : transparency(backgroundColor, 0.3).rgba,\n    boxShadow: `0px 0px 0px 8px ${\n      typeof backgroundColor === 'string'\n        ? backgroundColor\n        : transparency(backgroundColor, 0.3).rgba\n    }`,\n  });\n\nconst navigationItemButtonStyles = (backgroundColor: OpaqueColor | string) =>\n  css(p14Regular, {\n    ...setCssVar('currentTextColor', cssVar('normalTextColor')),\n\n    cursor: 'pointer',\n\n    display: 'flex',\n    alignItems: 'center',\n    columnGap: '4px',\n\n    margin: '0 8px',\n    width: 'calc(100% - 16px)',\n    clipPath: 'inset(0 -8px 0 -8px round 8px)',\n    ':hover, :focus': activeStyles(backgroundColor),\n  });\n\nconst leftSideStyles = css(p14Regular, {\n  display: 'inline-flex',\n  overflow: 'hidden',\n\n  whiteSpace: 'nowrap',\n  alignItems: 'center',\n  gap: '10px',\n});\n\nconst iconStylez = css(\n  setCssVar('currentTextColor', cssVar('normalTextColor')),\n  {\n    minHeight: '50%',\n    position: 'relative',\n\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    // essentially 50% padding-right\n    aspectRatio: '1.5 / 1',\n    alignItems: 'start',\n\n    '@supports not (aspect-ratio: 1.5 / 1)': {\n      minWidth: '24px',\n      paddingRight: '8px',\n    },\n  }\n);\n\nconst workspaceColorActionsStyles = css({\n  position: 'relative',\n});\n","import { workspaces } from '@decipad/routing';\nimport { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { FC, useCallback } from 'react';\nimport { Avatar, NavigationItem } from '../../atoms';\nimport { Edit } from '../../icons';\nimport { cssVar, p12Regular, p14Medium, setCssVar } from '../../primitives';\nimport { useEventNoEffect } from '../../utils/useEventNoEffect';\n\nconst maxWidth = '176px';\nconst iconSize = '24px';\nconst padding = '8px';\n\nconst gridStyles = css({\n  display: 'grid',\n  gridTemplateColumns: '1fr auto',\n  gap: '12px',\n\n  width: '100%',\n  maxWidth,\n});\n\nconst styles = css({\n  padding: `${padding} 0`,\n\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  rowGap: '4px',\n  maxWidth: `calc(${maxWidth} - ${iconSize} - (${padding} * 2))`,\n});\n\nconst iconStyles = css({\n  alignSelf: 'center',\n  height: '24px',\n  width: '24px',\n\n  ':hover': {\n    backgroundColor: cssVar('strongerHighlightColor'),\n    borderRadius: '6px',\n  },\n});\n\nexport interface WorkspaceItemProps {\n  readonly id: string;\n  readonly name: string;\n  readonly numberOfMembers: number;\n  readonly onClickEdit?: (id: string) => void;\n}\n\nexport const WorkspaceItem = ({\n  id,\n  name,\n  numberOfMembers,\n  onClickEdit = noop,\n}: WorkspaceItemProps): ReturnType<FC> => {\n  const workspacePath = workspaces({}).workspace({ workspaceId: id });\n  return (\n    <NavigationItem\n      href={workspacePath.$}\n      icon={<Avatar name={name} roundedSquare />}\n    >\n      <span css={gridStyles}>\n        <span css={styles}>\n          <strong\n            css={css(\n              p14Medium,\n              setCssVar('currentTextColor', cssVar('strongTextColor')),\n              {\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n              }\n            )}\n          >\n            {name}\n          </strong>\n          <span css={css(p12Regular)}>\n            {numberOfMembers} member{numberOfMembers === 1 ? '' : 's'}\n          </span>\n        </span>\n        <button\n          css={iconStyles}\n          onClick={useEventNoEffect(\n            useCallback(() => {\n              // Doing navigation programatically instead of using an <Anchor> component because <a>\n              // inside of an <a> is semantically forbidden.\n              onClickEdit(id);\n            }, [id, onClickEdit])\n          )}\n        >\n          <Edit />\n        </button>\n      </span>\n    </NavigationItem>\n  );\n};\n","import { css, SerializedStyles } from '@emotion/react';\nimport { Children, FC, ReactNode } from 'react';\nimport { isElement } from 'react-is';\nimport { WorkspaceItem } from '..';\nimport { NavigationItem } from '../../atoms';\n\nconst styles = css({\n  display: 'grid',\n  rowGap: '2px',\n});\n\ninterface NavigationListProps {\n  readonly children: ReactNode;\n  readonly wrapperStyles?: SerializedStyles;\n}\n\nexport const NavigationList = ({\n  children,\n  wrapperStyles,\n}: NavigationListProps): ReturnType<FC> => {\n  return (\n    <ul css={[styles, wrapperStyles]}>\n      {Children.map(children, (child) => {\n        if (child == null) {\n          return null;\n        }\n        if (\n          isElement(child) &&\n          (child.type === NavigationItem || child.type === WorkspaceItem)\n        ) {\n          return <li>{child}</li>;\n        }\n        console.error('Received child that is not a navigation item', child);\n        throw new Error('Expected all children to be navigation items');\n      })}\n    </ul>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\n\nimport { noop } from '@decipad/utils';\nimport { Divider, NavigationItem } from '../../atoms';\nimport { Logout, Settings } from '../../icons';\nimport { NavigationList } from '../../molecules';\nimport { cssVar, p12Regular, p14Medium } from '../../primitives';\n\nconst styles = css({\n  display: 'grid',\n  rowGap: '4px',\n\n  padding: '16px',\n  paddingBottom: '8px',\n\n  backgroundColor: cssVar('backgroundColor'),\n  border: `1px solid ${cssVar('borderColor')}`,\n  borderRadius: '8px',\n  boxShadow: `3px 3px 24px ${cssVar('highlightColor')}`,\n\n  zIndex: '2',\n});\n\nconst textStyles = css({\n  overflow: 'hidden',\n});\n\nexport interface AccountMenuProps {\n  readonly onLogout?: () => void;\n  readonly name: string;\n  readonly email: string;\n  readonly onOpenSettings: (a: boolean) => void;\n}\n\nexport const AccountMenu = ({\n  name,\n  email,\n  onOpenSettings,\n  onLogout = noop,\n}: AccountMenuProps): ReturnType<FC> => {\n  return (\n    <nav css={styles}>\n      <strong css={css(p14Medium, textStyles)}>{name}</strong>\n      <address css={css(p12Regular, textStyles)}>{email}</address>\n      <div css={{ paddingTop: '12px', paddingBottom: '4px' }}>\n        <Divider />\n      </div>\n      <NavigationList>\n        <NavigationItem\n          icon={<Settings />}\n          onClick={() => onOpenSettings(true)}\n        >\n          Account Settings\n        </NavigationItem>\n        <NavigationItem icon={<Logout />} onClick={onLogout}>\n          <span data-test-id=\"log out\">Log out</span>\n        </NavigationItem>\n      </NavigationList>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport { ArrowDiagonalTopRight } from '../../icons';\n\nexport const ExternalHrefIcon = (): ReturnType<FC> => {\n  return (\n    <span\n      css={{\n        float: 'right',\n        paddingLeft: 4,\n        height: 12,\n        width: 12,\n        transform: 'translateY(4px)',\n      }}\n    >\n      <ArrowDiagonalTopRight />\n    </span>\n  );\n};\n","import { useThemeFromStore } from '@decipad/react-contexts';\nimport { useSafeState } from '@decipad/react-utils';\nimport { css } from '@emotion/react';\nimport { useState } from 'react';\nimport { Button, ColorPicker, InputField } from '../../atoms';\nimport { ClosableModal } from '../../organisms';\nimport { OpaqueColor, p13Regular } from '../../primitives';\nimport { AvailableSwatchColor, swatchesThemed, swatchNames } from '../../utils';\n\ntype CreateSectionModalProps = {\n  readonly onClose: () => void;\n  readonly onSubmit: (name: string, color: OpaqueColor) => void | Promise<void>;\n  readonly op?: 'create' | 'edit';\n  readonly placeholderName?: string;\n  readonly placeholderColor?: string;\n};\n\nexport const CreateOrEditSectionModal = ({\n  onClose,\n  onSubmit,\n  op = 'create',\n  placeholderName,\n  placeholderColor = 'Catskill' as AvailableSwatchColor,\n  ...props\n}: CreateSectionModalProps): ReturnType<React.FC> => {\n  const [name, setName] = useState(placeholderName || '');\n  const [isSubmitting, setIsSubmitting] = useSafeState(false);\n  const [color, setColor] = useState(placeholderColor);\n  const term = op === 'create' ? 'Create' : 'Edit';\n  const [darkTheme] = useThemeFromStore();\n  const baseSwatches = swatchesThemed(darkTheme);\n\n  return (\n    <ClosableModal\n      {...props}\n      Heading=\"h1\"\n      title={`${term} section`}\n      closeAction={onClose}\n    >\n      <form\n        css={{ display: 'grid', rowGap: '12px' }}\n        onSubmit={async (event) => {\n          event.preventDefault();\n          setIsSubmitting(true);\n          try {\n            await onSubmit(name, baseSwatches[color as AvailableSwatchColor]);\n          } finally {\n            setIsSubmitting(false);\n            onClose();\n          }\n        }}\n      >\n        {op === 'create' && (\n          <p css={css(p13Regular)}>\n            Sections are how you can organize your documents within a workspace.\n            For instance, you can create a <em>personal</em> and a <em>work</em>{' '}\n            section in your default workspace.\n          </p>\n        )}\n        <InputField\n          required\n          placeholder=\"My section\"\n          value={name}\n          onChange={setName}\n        />\n        <div\n          css={{\n            display: 'inline-flex',\n            flexDirection: 'row',\n            gap: 5,\n            flexWrap: 'nowrap',\n          }}\n        >\n          {swatchNames.map((key) => {\n            return (\n              <div\n                key={key}\n                aria-label={key}\n                onClick={(ev) => {\n                  ev.preventDefault();\n                  setColor(key);\n                }}\n              >\n                <ColorPicker\n                  color={baseSwatches[key]}\n                  selected={key === color}\n                />\n              </div>\n            );\n          })}\n        </div>\n        <Button type=\"secondary\" submit disabled={!name || isSubmitting}>\n          {term} Section\n        </Button>\n      </form>\n    </ClosableModal>\n  );\n};\n","import { ClientEventsContext } from '@decipad/client-events';\nimport { isFlagEnabled } from '@decipad/feature-flags';\nimport { useActiveElement } from '@decipad/react-utils';\nimport { docs, workspaces } from '@decipad/routing';\nimport { css } from '@emotion/react';\nimport { FC, useContext, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport {\n  Divider,\n  Dot,\n  ExternalHrefIcon,\n  MenuItem,\n  NavigationItem,\n  Tooltip,\n} from '../../atoms';\nimport { Archive, Chat, Docs, Home, People, Plus, Sparkles } from '../../icons';\nimport { NavigationList } from '../../molecules';\nimport {\n  cssVar,\n  hexToOpaqueColor,\n  OpaqueColor,\n  opaqueColorToHex,\n} from '../../primitives';\nimport { CreateOrEditSectionModal } from '../../templates';\nimport {\n  AvailableSwatchColor,\n  colorSwatches,\n  DNDItemTypes,\n  hexBaseSwatches,\n  swatchNames,\n} from '../../utils';\n\nconst workspaceNavContainerStyles = (flagEnabled: boolean) =>\n  css({\n    display: 'grid',\n    gridTemplateRows: `auto ${\n      flagEnabled ? 'auto auto' : ''\n    } auto 1fr auto auto auto`,\n    gap: '2px',\n  });\n\nconst itemTextStyles = css({ padding: '8px 0' });\nconst hrStyles = css({\n  padding: '12px 0',\n  textOverflow: 'ellipsis',\n  transform: 'translateX(-15px)',\n  width: 'calc(100% + 30px)',\n  hr: {\n    boxShadow: `0 0 0 0.5px ${cssVar('borderColor')}`,\n  },\n});\n\nexport interface Section {\n  id: string;\n  color: string;\n  name: string;\n}\n\ninterface SectionRecord {\n  name: string;\n  color: string;\n  workspaceId: string;\n}\n\ninterface WorkspaceNavigationProps {\n  readonly onDeleteSection: (sectionId: string) => void;\n  readonly onCreateSection: (record: SectionRecord) => Promise<any>;\n  readonly onUpdateSection: (\n    record: SectionRecord & { sectionId: string }\n  ) => Promise<any>;\n  readonly activeWorkspace: {\n    id: string;\n    sections: Section[];\n  };\n  readonly showFeedback?: () => void;\n}\nexport const WorkspaceNavigation = ({\n  activeWorkspace,\n  onDeleteSection,\n  onCreateSection,\n  onUpdateSection,\n  showFeedback,\n}: WorkspaceNavigationProps): ReturnType<FC> => {\n  const activeWorkspaceRoute = workspaces({}).workspace({\n    workspaceId: activeWorkspace.id,\n  });\n  const { sections } = activeWorkspace;\n\n  const navigate = useNavigate();\n  const { '*': maybeWorkspaceFolder } = useParams();\n  const isArchivePage = maybeWorkspaceFolder === 'archived';\n  const isSharedPage = maybeWorkspaceFolder === 'shared';\n\n  const isHomePage = !isArchivePage && !isSharedPage;\n\n  const sectionsEnabled = !isArchivePage && isFlagEnabled('COLOR_SIDEBAR');\n\n  const [sectionStore, setSectionStore] = useState({\n    name: 'My Section',\n    color: 'Malibu' as AvailableSwatchColor,\n    id: '',\n  } as Section);\n\n  const [openMenu, setOpenMenu] = useState(false);\n  const [openRenameMenu, setOpenRenameMenu] = useState(false);\n  const ref = useActiveElement(() => {\n    setOpenMenu(false);\n  });\n\n  const location = useLocation();\n  const clientEvent = useContext(ClientEventsContext);\n\n  const isSharedSectionEnabled = isFlagEnabled('SHARE_PAD_WITH_EMAIL');\n\n  return (\n    <nav css={workspaceNavContainerStyles(sectionsEnabled)}>\n      <NavigationList key={'workspace-nav-0'}>\n        <NavigationItem\n          key={'folder-0'}\n          href={activeWorkspaceRoute.$}\n          isActive={isHomePage}\n          icon={<Home />}\n        >\n          <span css={itemTextStyles}>My Notebooks</span>\n        </NavigationItem>\n      </NavigationList>\n      {sectionsEnabled\n        ? [\n            <NavigationList\n              wrapperStyles={\n                // see why below\n                css([\n                  { paddingTop: 6 },\n                  sections.length > 5 && {\n                    overflow: 'hidden',\n                    overflowY: 'auto',\n                    height: '185px', // about five items\n                  },\n                ])\n              }\n              key={'sections-list'}\n            >\n              {sections.map((section) => {\n                const selected =\n                  location.pathname ===\n                  activeWorkspaceRoute.section({\n                    sectionId: section.id,\n                  }).$;\n                return (\n                  <NavigationItem\n                    key={`section-${section.id}`}\n                    dndInfo={{ target: DNDItemTypes.ICON, id: section.id }}\n                    href={\n                      selected\n                        ? activeWorkspaceRoute.$\n                        : activeWorkspaceRoute.section({\n                            sectionId: section.id,\n                          }).$\n                    }\n                    iconStyles={css({ width: 12, height: 12 })}\n                    wrapperStyles={css({\n                      'div[aria-label=\"lefty\"]': { paddingLeft: 16 },\n                    })}\n                    isActive={selected}\n                    icon={\n                      selected ? (\n                        <Dot\n                          color={\n                            hexToOpaqueColor(section.color) ||\n                            colorSwatches.Catskill.base\n                          }\n                          size={12}\n                          variant\n                          square\n                          drunkMode\n                        />\n                      ) : (\n                        <Dot\n                          color={\n                            hexToOpaqueColor(section.color) ||\n                            colorSwatches.Catskill.base\n                          }\n                          size={12}\n                          variant\n                          square\n                        />\n                      )\n                    }\n                    backgroundColor={\n                      hexToOpaqueColor(section.color) ||\n                      colorSwatches.Catskill.base\n                    }\n                    menuItems={[\n                      <MenuItem\n                        key={`menu-item-rename-${section.id}`}\n                        onSelect={() => {\n                          const updateStore = {\n                            name: section.name,\n                            id: section.id,\n                            color: 'Malibu' as AvailableSwatchColor,\n                          };\n                          const colorName = hexBaseSwatches[section.color];\n                          if (swatchNames.includes(colorName))\n                            updateStore.color = colorName;\n                          setSectionStore(updateStore);\n                          setOpenRenameMenu(!openRenameMenu);\n                        }}\n                      >\n                        <div css={{ minWidth: '132px' }}>Edit</div>\n                      </MenuItem>,\n                      <MenuItem\n                        key={`menu-item-delete-${section.id}`}\n                        onSelect={() => onDeleteSection(section.id)}\n                      >\n                        <div css={{ minWidth: '132px' }}>Delete</div>\n                      </MenuItem>,\n                    ]}\n                  >\n                    <span css={itemTextStyles}>{section.name}</span>\n                  </NavigationItem>\n                );\n              })}\n            </NavigationList>,\n            <div role=\"presentation\" key=\"sections-part-0\">\n              <Tooltip\n                side=\"right\"\n                variant=\"small\"\n                trigger={\n                  <span ref={ref}>\n                    <NavigationList key={'sections-new'}>\n                      <NavigationItem\n                        key={'section-new'}\n                        wrapperStyles={css({\n                          'div[aria-label=\"lefty\"]': { paddingLeft: 16 },\n                          'button div': {\n                            color: cssVar('weakerTextColor'),\n                          },\n                          'button div span svg path': {\n                            stroke: cssVar('weakerTextColor'),\n                          },\n                        })}\n                        iconStyles={css({ width: 12, height: 12 })}\n                        onClick={() => setOpenMenu(!openMenu)}\n                        icon={<Plus />}\n                      >\n                        <span css={itemTextStyles}>New Section</span>\n                      </NavigationItem>\n                    </NavigationList>\n\n                    {openMenu && (\n                      <CreateOrEditSectionModal\n                        onClose={() => setOpenMenu(!openMenu)}\n                        onSubmit={(sectionName: string, color: OpaqueColor) => {\n                          onCreateSection({\n                            workspaceId: activeWorkspace.id,\n                            name: sectionName,\n                            color: opaqueColorToHex(color),\n                          })\n                            .then((res) => {\n                              if (res.data) {\n                                if (res.data.addSectionToWorkspace?.id) {\n                                  navigate(\n                                    activeWorkspaceRoute.section({\n                                      sectionId:\n                                        res.data.addSectionToWorkspace.id,\n                                    }).$\n                                  );\n                                }\n                              } else {\n                                console.error('Failed to create section.', res);\n                              }\n                            })\n                            .catch((err) => {\n                              console.error(\n                                'Failed to create section. Error:',\n                                err\n                              );\n                            });\n                        }}\n                      />\n                    )}\n                  </span>\n                }\n              >\n                Create a new section\n              </Tooltip>\n            </div>,\n          ]\n        : null}\n\n      {isSharedSectionEnabled && (\n        <NavigationList key={'workspace-nav-S'}>\n          <NavigationItem\n            key={'folder-0'}\n            href={activeWorkspaceRoute.shared({}).$}\n            isActive={isSharedPage}\n            icon={<People />}\n          >\n            <span css={itemTextStyles}>Shared with me</span>\n          </NavigationItem>\n        </NavigationList>\n      )}\n\n      <NavigationList key={'workspace-nav-01'}>\n        <NavigationItem\n          key={'archive-3'}\n          icon={<Archive />}\n          href={activeWorkspaceRoute.archived({}).$}\n          isActive={isArchivePage}\n        >\n          <span css={itemTextStyles}>Archived</span>\n        </NavigationItem>\n      </NavigationList>\n\n      <div key=\"div-empty-grid-spaces\" role=\"presentation\" />\n      <NavigationList key={'navigation-footer-0'}>\n        <NavigationItem\n          href={docs({}).page({ name: 'gallery' }).$}\n          key={'navfoot-docs-0'}\n          icon={<Sparkles />}\n        >\n          <span css={itemTextStyles}>\n            Templates <ExternalHrefIcon />\n          </span>\n        </NavigationItem>\n      </NavigationList>\n      <div key=\"div-1\" role=\"presentation\" css={hrStyles}>\n        <Divider />\n      </div>\n      <NavigationList key={'settings-0'}>\n        <NavigationItem\n          href={docs({}).$}\n          key={'navfoot-docs-0'}\n          icon={<Docs />}\n        >\n          <span css={itemTextStyles}>\n            Docs & Examples <ExternalHrefIcon />\n          </span>\n        </NavigationItem>\n        <NavigationItem\n          key={'navfoot-feedback-1'}\n          icon={<Chat />}\n          onClick={() => {\n            clientEvent({\n              type: 'action',\n              action: 'send feedback',\n            });\n            showFeedback?.();\n          }}\n        >\n          <span css={itemTextStyles}>Feedback</span>\n        </NavigationItem>\n      </NavigationList>\n      {openRenameMenu && (\n        <div key=\"div-section-modal\" role=\"presentation\">\n          <CreateOrEditSectionModal\n            onClose={() => setOpenRenameMenu(!openRenameMenu)}\n            op=\"edit\"\n            placeholderName={sectionStore.name}\n            placeholderColor={sectionStore.color}\n            onSubmit={(sectionName: string, color: OpaqueColor) => {\n              onUpdateSection({\n                workspaceId: activeWorkspace.id,\n                name: sectionName,\n                sectionId: sectionStore.id,\n                color: opaqueColorToHex(color),\n              })\n                .then((res) => {\n                  if (res.data) {\n                    navigate(\n                      activeWorkspaceRoute.section({\n                        sectionId: sectionStore.id,\n                      }).$\n                    );\n                  } else {\n                    console.error('Failed to rename section.', res);\n                  }\n                })\n                .catch((err) => {\n                  console.error('Failed to rename section. Error:', err);\n                });\n            }}\n          />\n        </div>\n      )}\n    </nav>\n  );\n};\n","import { workspaces } from '@decipad/routing';\nimport { css } from '@emotion/react';\nimport { ComponentProps, FC } from 'react';\nimport { WorkspaceMenu } from '..';\nimport { Settings } from '../../icons';\nimport { p15Medium } from '../../primitives';\nimport { Anchor } from '../../utils';\n\nconst nameStyles = css(p15Medium, {\n  maxWidth: '200px',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n});\n\ntype WorkspaceOptionsProps = ComponentProps<typeof WorkspaceMenu>;\n\nexport const WorkspaceOptions = (\n  props: WorkspaceOptionsProps\n): ReturnType<FC> => {\n  const activeWorkspaceRoute = workspaces({}).workspace({\n    workspaceId: props.activeWorkspace.id,\n  });\n  return (\n    <div\n      css={{\n        position: 'relative',\n        display: 'flex',\n        padding: '8px',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        justifyContent: 'space-between',\n      }}\n    >\n      <strong css={nameStyles}>{props.activeWorkspace.name}</strong>\n      <Anchor\n        href={activeWorkspaceRoute.edit({}).$}\n        css={css({ float: 'right', width: 16, height: 16 })}\n      >\n        <Settings />\n      </Anchor>\n    </div>\n  );\n};\n","import { useThemeFromStore } from '@decipad/react-contexts';\nimport { useActiveElement } from '@decipad/react-utils';\nimport { css } from '@emotion/react';\nimport { ComponentProps, FC, useState } from 'react';\nimport { ThemePicker } from '../../atoms';\nimport { AccountAvatar } from '../../molecules';\n\nimport {\n  AccountMenu,\n  WorkspaceNavigation,\n  WorkspaceOptions,\n  WorkspaceSelector,\n} from '../../organisms';\nimport { cssVar, smallScreenQuery } from '../../primitives';\nimport { dashboard } from '../../styles';\n\ntype DashboardSidebarProps = ComponentProps<typeof WorkspaceOptions> &\n  Pick<ComponentProps<typeof AccountAvatar>, 'name'> &\n  ComponentProps<typeof AccountMenu> &\n  Pick<\n    ComponentProps<typeof WorkspaceNavigation>,\n    'onDeleteSection' | 'onCreateSection' | 'onUpdateSection' | 'showFeedback'\n  > & {\n    readonly onPointerEnter?: () => void;\n  };\n\nexport const DashboardSidebar = ({\n  onPointerEnter,\n  name,\n  email,\n  onLogout,\n  onOpenSettings,\n  ...props\n}: DashboardSidebarProps): ReturnType<FC> => {\n  const [darkTheme, setDarkTheme] = useThemeFromStore();\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const ref = useActiveElement(() => {\n    setOpenMenu(false);\n  });\n\n  return (\n    <div css={dashboardMainSidebarStyles} onPointerEnter={onPointerEnter}>\n      <div css={workspaceSwitcherStyles}>\n        <div css={workspaceSwitcherFlexyStyles}>\n          <WorkspaceSelector {...props}></WorkspaceSelector>\n          <div css={themeSwitcherAndConfigStyles}>\n            <div\n              css={{\n                display: 'flex',\n                flexDirection: 'column',\n                flexWrap: 'nowrap',\n                alignItems: 'center',\n                gap: 32,\n              }}\n            >\n              <ThemePicker\n                active={darkTheme}\n                onChange={setDarkTheme}\n                ariaRoleDescription={'theme picker'}\n              ></ThemePicker>\n              <div ref={ref}>\n                <AccountAvatar\n                  menuOpen={openMenu}\n                  name={name}\n                  email={email}\n                  onClick={() => setOpenMenu(!openMenu)}\n                />\n                {openMenu && (\n                  <div\n                    css={{\n                      position: 'absolute',\n                      minWidth: '240px',\n                      width: 'max-content',\n                      maxWidth: '50vw',\n                      bottom: 20,\n                      left: '60px',\n                      zIndex: 2,\n                    }}\n                  >\n                    <AccountMenu\n                      onOpenSettings={onOpenSettings}\n                      name={name}\n                      email={email}\n                      onLogout={onLogout}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        css={[\n          {\n            gridColumn: 'action',\n            display: 'grid',\n          },\n          dashboardSidebarStyles,\n          dashboardPartHideOnMobile,\n          { padding: '12px 16px' },\n        ]}\n      >\n        <div css={{ gridRow: 'navigation', display: 'grid' }}>\n          <WorkspaceNavigation {...props} />\n        </div>\n        <div\n          css={{\n            gridRow: 'switcher',\n            display: 'grid',\n            gridTemplateColumns: 'minmax(150px, 100%)',\n          }}\n        >\n          <WorkspaceOptions {...props} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst workspaceSwitcherFlexyStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'nowrap',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n});\n\nconst dashboardSidebarStyles = css({\n  padding: dashboard.topPadding,\n\n  display: 'grid',\n  gridTemplateRows: '[switcher] auto [navigation] 1fr',\n  rowGap: '20px',\n  borderLeft: `1px solid ${cssVar('borderColor')}`,\n  borderTopLeftRadius: '20px',\n  borderBottomLeftRadius: '20px',\n  backgroundColor: cssVar('backgroundColor'),\n  [smallScreenQuery]: {\n    padding: `${dashboard.topPadding} 24px 0px`,\n  },\n});\n\nconst dashboardPartHideOnMobile = css({\n  [smallScreenQuery]: {\n    display: 'none',\n  },\n});\n\nconst dashboardMainSidebarStyles = css({\n  display: 'grid',\n  backgroundColor: cssVar('highlightColor'),\n\n  gridTemplateColumns: '[workspaceselector] auto [action] 1fr',\n  [smallScreenQuery]: {\n    display: 'flex',\n    gap: '20px',\n  },\n});\n\nconst workspaceSwitcherStyles = css({\n  gridColumn: 'workspaceselector',\n\n  display: 'grid',\n  [smallScreenQuery]: {\n    display: 'inline-flex',\n    gridColumn: 'initial',\n    width: '100%',\n  },\n});\n\nconst themeSwitcherAndConfigStyles = css({\n  marginBottom: '22px',\n  [smallScreenQuery]: {\n    display: 'none',\n    marginBottom: '0px',\n  },\n});\n","import { DashboardSidebar } from '@decipad/ui';\n\nexport default DashboardSidebar;\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { Check } from '../../icons';\nimport {\n  cssVar,\n  normalOpacity,\n  offBlack,\n  OpaqueColor,\n  transparency,\n  weakOpacity,\n} from '../../primitives';\n\nconst styles = css({\n  width: '27px', // 3px of border\n  height: '27px',\n  borderRadius: '50%',\n  position: 'relative',\n});\n\nconst iconWrapperStyles = css({\n  display: 'grid',\n  placeItems: 'center',\n  padding: '7px',\n});\n\ntype ColorPickerProps = {\n  readonly color: OpaqueColor;\n  readonly selected: boolean;\n};\n\nexport const ColorPicker = ({\n  color,\n  selected,\n}: ColorPickerProps): ReturnType<FC> => {\n  return (\n    <div\n      role=\"option\"\n      aria-selected={selected}\n      css={[\n        styles,\n        {\n          backgroundColor: color.hex,\n          border: `1px solid ${cssVar('backgroundColor')}`,\n          boxShadow: `inset 0 0 0 1px ${\n            transparency(offBlack, weakOpacity).rgba\n          }`,\n          ':hover, :focus': {\n            boxShadow: `inset 0 0 0 1px ${\n              transparency(offBlack, weakOpacity).rgba\n            },  0 0 0 1px ${transparency(color, normalOpacity).rgba}`,\n          },\n        },\n        selected\n          ? {\n              boxShadow: `inset 0 0 0 1px ${\n                transparency(offBlack, weakOpacity).rgba\n              },  0 0 0 1px ${transparency(color, normalOpacity).rgba}`,\n            }\n          : {},\n      ]}\n    >\n      <span css={iconWrapperStyles}>{selected ? <Check /> : ''}</span>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC, ReactNode } from 'react';\nimport {\n  mainIconButtonStyles,\n  roundedSquareStyles,\n} from '../../styles/buttons';\nimport { Anchor } from '../../utils';\nimport { useEventNoEffect } from '../../utils/useEventNoEffect';\n\ntype IconButtonProps = {\n  readonly children: ReactNode;\n  readonly roundedSquare?: boolean;\n  readonly roleDescription?: string;\n  readonly transparent?: boolean;\n} & (\n  | {\n      readonly href: string;\n      readonly onClick?: undefined;\n    }\n  | {\n      readonly onClick: () => void;\n      readonly href?: undefined;\n    }\n);\n\nexport const IconButton = ({\n  children,\n  roundedSquare = false,\n  roleDescription = 'button',\n  transparent = false,\n\n  onClick,\n  href,\n}: IconButtonProps): ReturnType<FC> => {\n  const onButtonClick = useEventNoEffect(onClick);\n  return onClick ? (\n    <button\n      aria-roledescription={roleDescription}\n      css={[\n        mainIconButtonStyles,\n        roundedSquare && roundedSquareStyles,\n        transparent && { backgroundColor: 'transparent' },\n      ]}\n      onClick={onButtonClick}\n    >\n      <span css={iconStyles}>{children}</span>\n    </button>\n  ) : (\n    <Anchor\n      href={href}\n      css={css([\n        mainIconButtonStyles,\n        roundedSquare && roundedSquareStyles,\n        transparent && { backgroundColor: 'transparent' },\n      ])}\n    >\n      <span css={iconStyles}>{children}</span>\n    </Anchor>\n  );\n};\n\nconst iconStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n\n  minWidth: '16px',\n  minHeight: '16px',\n  maxWidth: '32px',\n  maxHeight: '32px',\n\n  padding: `20%`,\n});\n","import { css } from '@emotion/react';\nimport {\n  black,\n  cssVar,\n  hexToOpaqueColor,\n  transparency,\n  weakOpacity,\n} from '../primitives';\n\nexport const mainIconButtonStyles = css({\n  display: 'inline-block',\n  borderRadius: '100vmax',\n\n  ':hover, :focus': {\n    backgroundColor: transparency(\n      hexToOpaqueColor(cssVar('strongerHighlightColor')) || black,\n      weakOpacity\n    ).rgba,\n  },\n});\n\nexport const roundedSquareStyles = css({\n  borderRadius: '6px',\n});\n","import { smallestDesktop, smallestMobile } from '../primitives';\nimport { viewportCalc } from '../utils';\n\nexport const topPadding = viewportCalc(\n  smallestMobile,\n  12,\n  smallestDesktop,\n  16,\n  'px',\n  'vmax'\n);\n\nexport const CTAHeight = 210;\n","export const DNDItemTypes = {\n  ICON: 'section',\n};\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["ThemePicker","active","onChange","noop","ariaRoleDescription","css","themePickerStyles","activeThemePickerStyles","onClick","role","toggleThemeSwitchStyles","activeThemeSwitchStyles","themeIconStyles","backgroundColor","cssVar","width","height","borderRadius","display","alignItems","padding","transition","shortAnimationDuration","position","top","avatarGridStyles","p12Medium","chevronStyles","hoverSelector","setCssVar","paddingTop","AccountAvatar","menuOpen","variant","props","hoverTargetClassName","useState","nanoid","onAccountAvatarClick","useEventNoEffect","className","Avatar","Chevron","type","WorkspaceButtonSelector","activeWorkspace","thisWorkspace","onClickWorkspace","workspaceButtonWrapperStyles","useCallback","id","name","title","roundedSquare","workspaceIsSelectedStyles","left","borderTopRightRadius","borderBottomRightRadius","purple300","smallScreenQuery","borderBottomLeftRadius","WorkspaceSelector","allWorkspaces","onCreateWorkspace","workspaceSelectorStyles","margin","flexDirection","gap","map","i","workspaceAvatars","Tooltip","side","hoverOnly","trigger","createWorkspaceButton","IconButton","Create","overflowX","flexShrink","NavigationItem","children","icon","href","exact","dndInfo","menuItems","iconStyles","wrapperStyles","isActive","styledIcon","iconStylez","onButtonClick","open","setOpen","isOver","canDrop","drop","useDrop","accept","DNDItemTypes","target","collect","monitor","maybeRightSide","MenuList","root","dropdown","align","onChangeOpen","workspaceColorActionsStyles","roleDescription","transparent","Ellipsis","leftSide","leftSideStyles","weakColor","transparency","weakOpacity","rgba","weakColor2","strongColor","normalOpacity","ref","containerStyles","background","button","activeStyles","navigationItemButtonStyles","boxShadow","p14Regular","cursor","columnGap","clipPath","maxWidth","gridStyles","gridTemplateColumns","styles","justifyContent","rowGap","alignSelf","WorkspaceItem","numberOfMembers","onClickEdit","workspacePath","workspaces","workspace","workspaceId","$","p14Medium","p12Regular","Edit","NavigationList","Children","child","isElement","console","error","Error","paddingBottom","border","zIndex","textStyles","AccountMenu","email","onOpenSettings","onLogout","Divider","Settings","Logout","ExternalHrefIcon","ArrowDiagonalTopRight","CreateOrEditSectionModal","onClose","onSubmit","op","placeholderName","placeholderColor","setName","isSubmitting","setIsSubmitting","useSafeState","color","setColor","term","darkTheme","useThemeFromStore","baseSwatches","swatchesThemed","ClosableModal","Heading","closeAction","async","event","preventDefault","p13Regular","InputField","required","placeholder","value","swatchNames","key","ev","ColorPicker","selected","Button","submit","disabled","itemTextStyles","hrStyles","textOverflow","transform","hr","WorkspaceNavigation","onDeleteSection","onCreateSection","onUpdateSection","showFeedback","activeWorkspaceRoute","sections","navigate","useNavigate","maybeWorkspaceFolder","useParams","isArchivePage","isSharedPage","isHomePage","sectionsEnabled","isFlagEnabled","sectionStore","setSectionStore","openMenu","setOpenMenu","openRenameMenu","setOpenRenameMenu","useActiveElement","location","useLocation","clientEvent","useContext","ClientEventsContext","isSharedSectionEnabled","flagEnabled","gridTemplateRows","Home","length","overflow","overflowY","section","pathname","sectionId","Dot","hexToOpaqueColor","colorSwatches","size","square","drunkMode","MenuItem","onSelect","updateStore","colorName","hexBaseSwatches","paddingLeft","stroke","Plus","sectionName","opaqueColorToHex","then","res","data","addSectionToWorkspace","catch","err","shared","People","Archive","archived","docs","page","Sparkles","Docs","Chat","action","nameStyles","p15Medium","WorkspaceOptions","edit","workspaceSwitcherFlexyStyles","dashboardSidebarStyles","dashboard","borderLeft","borderTopLeftRadius","dashboardPartHideOnMobile","dashboardMainSidebarStyles","workspaceSwitcherStyles","gridColumn","themeSwitcherAndConfigStyles","marginBottom","onPointerEnter","setDarkTheme","iconWrapperStyles","hex","offBlack","mainIconButtonStyles","roundedSquareStyles","minWidth","minHeight","maxHeight","black","topPadding","viewportCalc","smallestMobile","smallestDesktop","CTAHeight","ICON","module","exports","equal","a","b","constructor","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","useCollectedProps","collector","connector","onCollect","collected","updateCollected","useCollector","useIsomorphicLayoutEffect","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useMonitorOutput","reconnect","onUpdate","setCollected","nextValue","useDragDropManager","dragDropManager","DndContext","invariant","useConnectDropTarget","useMemo","hooks","dropTarget","TargetConnector","connectTarget","this","didChange","didHandlerIdChange","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedHandlerId","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","backend","connectDropTarget","receiveHandlerId","newHandlerId","dropTargetOptionsInternal","options","undefined","dropTargetNode","dropTargetRef","current","clearDropTarget","wrapConnectorHooks","node","isRef","isCallingCanDrop","DropTargetMonitorImpl","targetId","listener","internalMonitor","canDropOnTarget","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","manager","getMonitor","DropTargetImpl","spec","hover","useRegisteredDropTarget","useEffect","useDropTarget","useAccept","unregister","registerTarget","join","specArg","deps","useOptionalFactory","useDropTargetMonitor","getBackend","useDropTargetConnector","window","useLayoutEffect","arg","memoDeps","push","obj","registry","getRegistry","addTarget","removeTarget","registerSource","sourceId","addSource","removeSource","throwIfCompositeComponentElement","element","displayName","wrappedHooks","forEach","hook","endsWith","wrappedHook","elementOrNode","isValidElement","cloneWithRef","wrapHookToRecognizeElement","setRef","newRef","previousRef","cloneElement"],"sourceRoot":""}