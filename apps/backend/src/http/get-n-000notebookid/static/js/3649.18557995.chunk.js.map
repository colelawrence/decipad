{"version":3,"file":"static/js/3649.18557995.chunk.js","mappings":"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","sources":["../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-id/dist/packages/react/id/src/id.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-presence/dist/packages/react/presence/src/Presence.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-presence/dist/packages/react/presence/src/useStateMachine.tsx","../../../node_modules/@radix-ui/react-focus-guards/dist/packages/react/focus-guards/src/FocusGuards.tsx","../../../node_modules/@radix-ui/react-portal/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx","../../../node_modules/@radix-ui/react-portal/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx","../../../node_modules/@radix-ui/react-portal/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx","../../../node_modules/@radix-ui/react-portal/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx","../../../node_modules/@radix-ui/react-portal/dist/packages/react/portal/src/Portal.tsx","../../../node_modules/@radix-ui/react-focus-scope/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx","../../../node_modules/@radix-ui/react-focus-scope/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx","../../../node_modules/@radix-ui/react-focus-scope/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx","../../../node_modules/@radix-ui/react-focus-scope/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx","../../../node_modules/@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/FocusScope.tsx","../../../node_modules/@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/useEscapeKeydown.tsx","../../../node_modules/@radix-ui/react-use-escape-keydown/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx","../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx","../../../node_modules/@radix-ui/react-use-body-pointer-events/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx","../../../node_modules/@radix-ui/react-use-body-pointer-events/dist/packages/react/use-body-pointer-events/src/useBodyPointerEvents.tsx","../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx","../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx","../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx","../../../node_modules/@radix-ui/react-dismissable-layer/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/primitive.tsx","../../../node_modules/@radix-ui/react-dismissable-layer/dist/packages/react/dismissable-layer/src/DismissableLayer.tsx","../../../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx","../../../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx","../../../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx","../../../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-use-size/dist/packages/react/use-size/src/useSize.tsx","../../../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/rect/dist/packages/core/rect/src/observeElementRect.ts","../../../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-use-rect/dist/packages/react/use-rect/src/useRect.tsx","../../../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx","../../../node_modules/@radix-ui/popper/dist/packages/core/popper/src/popper.ts","../../../node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/primitive.tsx","../../../node_modules/@radix-ui/react-popover/dist/packages/react/popover/src/Popover.tsx","../../../node_modules/@radix-ui/react-popover/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/useControllableState.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n","import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\n// DEPRECATED\nfunction IdProvider({ children }: { children: React.ReactNode }) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(ID_PROVIDER_DEPRECATED);\n    }\n  }, []);\n  return <>{children}</>;\n}\n\nconst ID_PROVIDER_DEPRECATED = `Warning: The \\`IdProvider\\` has been deprecated. For details, see https://radix-ui.com/docs/primitives/utilities/id-provider`;\n\nexport { IdProvider, useId };\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n","import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.Children.toArray(children).some(isSlottable)) {\n    return (\n      <>\n        {React.Children.map(children, (child) => {\n          return isSlottable(child) ? (\n            <SlotClone {...slotProps} ref={forwardedRef}>\n              {child.props.children}\n            </SlotClone>\n          ) : (\n            child\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = (...args: unknown[]) => {\n        childPropValue?.(...args);\n        slotPropValue?.(...args);\n      };\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      // DEPRECATED\n      if (process.env.NODE_ENV === 'development' && (props as any).as) {\n        console.warn(AS_ERROR);\n      }\n\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  present: boolean;\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          send('ANIMATION_END');\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n","import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n","import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.Children.toArray(children).some(isSlottable)) {\n    return (\n      <>\n        {React.Children.map(children, (child) => {\n          return isSlottable(child) ? (\n            <SlotClone {...slotProps} ref={forwardedRef}>\n              {child.props.children}\n            </SlotClone>\n          ) : (\n            child\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = (...args: unknown[]) => {\n        childPropValue?.(...args);\n        slotPropValue?.(...args);\n      };\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      // DEPRECATED\n      if (process.env.NODE_ENV === 'development' && (props as any).as) {\n        console.warn(AS_ERROR);\n      }\n\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n","import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst MAX_Z_INDEX = 2147483647;\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  containerRef?: React.RefObject<HTMLElement>;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { containerRef, style, ...portalProps } = props;\n  const hostElement = containerRef?.current ?? globalThis?.document?.body;\n  const [, forceUpdate] = React.useState({});\n\n  /**\n   * containerRef.current won't be set on first render, so we force a re-render.\n   * Because we do this in `useLayoutEffect`, we still avoid a flash.\n   */\n  useLayoutEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  if (hostElement) {\n    return ReactDOM.createPortal(\n      <Primitive.div\n        data-radix-portal=\"\"\n        {...portalProps}\n        ref={forwardedRef}\n        style={\n          /**\n           * If the Portal is injected in `body`, we assume we want whatever is portalled\n           * to appear on top of everything. Ideally this would be handled by making sure the\n           * app root creates a new stacking context, however this is quite hard to automate.\n           * For this reason, we have opted for setting the max z-index on the portal itself.\n           */\n          hostElement === document.body\n            ? {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                zIndex: MAX_Z_INDEX,\n                ...style,\n              }\n            : undefined\n        }\n      />,\n      hostElement\n    );\n  }\n\n  // bail out of ssr\n  return null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * UnstablePortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst UNSTABLE_PORTAL_NAME = 'Portal';\n\ntype UnstablePortalElement = React.ElementRef<typeof Primitive.div>;\ninterface UnstablePortalProps extends PrimitiveDivProps {\n  container?: HTMLElement | null;\n}\n\nconst UnstablePortal = React.forwardRef<UnstablePortalElement, UnstablePortalProps>(\n  (props, forwardedRef) => {\n    const { container = globalThis?.document?.body, ...portalProps } = props;\n    return container\n      ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n      : null;\n  }\n);\n\nUnstablePortal.displayName = UNSTABLE_PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  UnstablePortal,\n  //\n  Root,\n};\nexport type { PortalProps, UnstablePortalProps };\n","import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n","import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.Children.toArray(children).some(isSlottable)) {\n    return (\n      <>\n        {React.Children.map(children, (child) => {\n          return isSlottable(child) ? (\n            <SlotClone {...slotProps} ref={forwardedRef}>\n              {child.props.children}\n            </SlotClone>\n          ) : (\n            child\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = (...args: unknown[]) => {\n        childPropValue?.(...args);\n        slotPropValue?.(...args);\n      };\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      // DEPRECATED\n      if (process.env.NODE_ENV === 'development' && (props as any).as) {\n        console.warn(AS_ERROR);\n      }\n\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        if (!container.contains(event.relatedTarget as HTMLElement | null)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new Event(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new Event(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(onEscapeKeyDownProp?: (event: KeyboardEvent) => void) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown]);\n}\n\nexport { useEscapeKeydown };\n","import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n","import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n","import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n","import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nlet changeCount = 0;\nlet originalBodyPointerEvents: string;\n\nfunction useBodyPointerEvents({ disabled }: { disabled: boolean }) {\n  const isTouchOrPenPressedRef = React.useRef(false);\n\n  useLayoutEffect(() => {\n    if (disabled) {\n      if (changeCount === 0) {\n        originalBodyPointerEvents = document.body.style.pointerEvents;\n      }\n\n      function resetPointerEvents() {\n        changeCount--;\n        if (changeCount === 0) {\n          document.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      }\n\n      document.body.style.pointerEvents = 'none';\n      changeCount++;\n\n      function handlePointerUp(event: PointerEvent) {\n        isTouchOrPenPressedRef.current = event.pointerType !== 'mouse';\n      }\n\n      document.addEventListener('pointerup', handlePointerUp);\n\n      return () => {\n        if (isTouchOrPenPressedRef.current) {\n          /**\n           * We force pointer-events to remain disabled until `click` fires on touch devices\n           * because browsers implement a ~350ms delay between the time the user stops\n           * touching the display and when the browser executes events. We need to ensure we\n           * don't reactivate pointer-events within this timeframe otherwise the browser may\n           * execute events that should have been prevented.\n           *\n           * We are aware that `touch-action: manipulation` shortens this delay for events,\n           * but it isn't enough to cover all cases.\n           *\n           * When there is an input on screen:\n           * - if a click event is bound to it, it will fire after a `pointerdown` which may\n           * have re-enabled pointer-events (regardless of `touch-action: manipulation`).\n           * - if clicking it causes the page to zoom, the events will wait for the zoom to\n           * finish before executing on the input.\n           * - if long pressing it, the events will execute after the longpress delay.\n           */\n          document.addEventListener('click', resetPointerEvents, { once: true });\n        } else {\n          resetPointerEvents();\n        }\n\n        document.removeEventListener('pointerup', handlePointerUp);\n      };\n    }\n  }, [disabled]);\n}\n\nexport { useBodyPointerEvents };\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n","import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.Children.toArray(children).some(isSlottable)) {\n    return (\n      <>\n        {React.Children.map(children, (child) => {\n          return isSlottable(child) ? (\n            <SlotClone {...slotProps} ref={forwardedRef}>\n              {child.props.children}\n            </SlotClone>\n          ) : (\n            child\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = (...args: unknown[]) => {\n        childPropValue?.(...args);\n        slotPropValue?.(...args);\n      };\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      // DEPRECATED\n      if (process.env.NODE_ENV === 'development' && (props as any).as) {\n        console.warn(AS_ERROR);\n      }\n\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n","function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useBodyPointerEvents } from '@radix-ui/react-use-body-pointer-events';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    });\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    });\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    });\n\n    useBodyPointerEvents({ disabled: disableOutsidePointerEvents });\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) context.layersWithOutsidePointerEventsDisabled.add(node);\n      context.layers.add(node);\n      dispatchUpdate();\n    }, [node, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(onPointerDownOutside?: (event: PointerDownOutsideEvent) => void) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        dispatchCustomEvent(POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      document.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      document.removeEventListener('pointerdown', handlePointerDown);\n    };\n  }, [handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(onFocusOutside?: (event: FocusOutsideEvent) => void) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        dispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail);\n      }\n    };\n    document.addEventListener('focusin', handleFocus);\n    return () => document.removeEventListener('focusin', handleFocus);\n  }, [handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new Event(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction dispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never)\n) {\n  const target = detail.originalEvent.target as HTMLElement;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n  return !target.dispatchEvent(event);\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n","import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.Children.toArray(children).some(isSlottable)) {\n    return (\n      <>\n        {React.Children.map(children, (child) => {\n          return isSlottable(child) ? (\n            <SlotClone {...slotProps} ref={forwardedRef}>\n              {child.props.children}\n            </SlotClone>\n          ) : (\n            child\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = (...args: unknown[]) => {\n        childPropValue?.(...args);\n        slotPropValue?.(...args);\n      };\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      // DEPRECATED\n      if (process.env.NODE_ENV === 'development' && (props as any).as) {\n        console.warn(AS_ERROR);\n      }\n\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n","/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\n\nfunction useSize(element: HTMLElement | SVGElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  React.useEffect(() => {\n    if (element) {\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate a rect ourselves to get the correct border box.\n          const rect = element.getBoundingClientRect();\n          width = rect.width;\n          height = rect.height;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n","type Measurable = { getBoundingClientRect(): ClientRect };\n\n/**\n * Observes an element's rectangle on screen (getBoundingClientRect)\n * This is useful to track elements on the screen and attach other elements\n * that might be in different layers, etc.\n */\nfunction observeElementRect(\n  /** The element whose rect to observe */\n  elementToObserve: Measurable,\n  /** The callback which will be called when the rect changes */\n  callback: CallbackFn\n) {\n  const observedData = observedElements.get(elementToObserve);\n\n  if (observedData === undefined) {\n    // add the element to the map of observed elements with its first callback\n    // because this is the first time this element is observed\n    observedElements.set(elementToObserve, { rect: {} as ClientRect, callbacks: [callback] });\n\n    if (observedElements.size === 1) {\n      // start the internal loop once at least 1 element is observed\n      rafId = requestAnimationFrame(runLoop);\n    }\n  } else {\n    // only add a callback for this element as it's already observed\n    observedData.callbacks.push(callback);\n    callback(elementToObserve.getBoundingClientRect());\n  }\n\n  return () => {\n    const observedData = observedElements.get(elementToObserve);\n    if (observedData === undefined) return;\n\n    // start by removing the callback\n    const index = observedData.callbacks.indexOf(callback);\n    if (index > -1) {\n      observedData.callbacks.splice(index, 1);\n    }\n\n    if (observedData.callbacks.length === 0) {\n      // stop observing this element because there are no\n      // callbacks registered for it anymore\n      observedElements.delete(elementToObserve);\n\n      if (observedElements.size === 0) {\n        // stop the internal loop once no elements are observed anymore\n        cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\n// ========================================================================\n// module internals\n\ntype CallbackFn = (rect: ClientRect) => void;\n\ntype ObservedData = {\n  rect: ClientRect;\n  callbacks: Array<CallbackFn>;\n};\n\nlet rafId: number;\nconst observedElements: Map<Measurable, ObservedData> = new Map();\n\nfunction runLoop() {\n  const changedRectsData: Array<ObservedData> = [];\n\n  // process all DOM reads first (getBoundingClientRect)\n  observedElements.forEach((data, element) => {\n    const newRect = element.getBoundingClientRect();\n\n    // gather all the data for elements whose rects have changed\n    if (!rectEquals(data.rect, newRect)) {\n      data.rect = newRect;\n      changedRectsData.push(data);\n    }\n  });\n\n  // group DOM writes here after the DOM reads (getBoundingClientRect)\n  // as DOM writes will most likely happen with the callbacks\n  changedRectsData.forEach((data) => {\n    data.callbacks.forEach((callback) => callback(data.rect));\n  });\n\n  rafId = requestAnimationFrame(runLoop);\n}\n// ========================================================================\n\n/**\n * Returns whether 2 rects are equal in values\n */\nfunction rectEquals(rect1: ClientRect, rect2: ClientRect) {\n  return (\n    rect1.width === rect2.width &&\n    rect1.height === rect2.height &&\n    rect1.top === rect2.top &&\n    rect1.right === rect2.right &&\n    rect1.bottom === rect2.bottom &&\n    rect1.left === rect2.left\n  );\n}\n\nexport { observeElementRect };\nexport type { Measurable };\n","import * as React from 'react';\nimport { observeElementRect } from '@radix-ui/rect';\n\nimport type { Measurable } from '@radix-ui/rect';\n\n/**\n * Use this custom hook to get access to an element's rect (getBoundingClientRect)\n * and observe it along time.\n */\nfunction useRect(measurable: Measurable | null) {\n  const [rect, setRect] = React.useState<ClientRect>();\n  React.useEffect(() => {\n    if (measurable) {\n      const unobserve = observeElementRect(measurable, setRect);\n      return () => {\n        setRect(undefined);\n        unobserve();\n      };\n    }\n    return;\n  }, [measurable]);\n  return rect;\n}\n\nexport { useRect };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import * as CSS from 'csstype';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Axis = 'x' | 'y';\ntype Side = typeof SIDE_OPTIONS[number];\ntype Align = typeof ALIGN_OPTIONS[number];\ntype Point = { x: number; y: number };\ntype Size = { width: number; height: number };\n\ntype GetPlacementDataOptions = {\n  /** The rect of the anchor we are placing around */\n  anchorRect?: ClientRect;\n  /** The size of the popper to place */\n  popperSize?: Size;\n  /** An optional arrow size */\n  arrowSize?: Size;\n  /** An optional arrow offset (along the side, default: 0) */\n  arrowOffset?: number;\n  /** The desired side */\n  side: Side;\n  /** An optional side offset (distance from the side, default: 0)  */\n  sideOffset?: number;\n  /** The desired alignment */\n  align: Align;\n  /** An optional alignment offset (distance along the side, default: 0) */\n  alignOffset?: number;\n  /** An option to turn on/off the collision handling (default: true) */\n  shouldAvoidCollisions?: boolean;\n  /** The rect which represents the boundaries for collision checks */\n  collisionBoundariesRect?: ClientRect;\n  /** The tolerance used for collisions, ie. if we want them to trigger a bit earlier (default: 0) */\n  collisionTolerance?: number;\n};\n\ntype PlacementData = {\n  popperStyles: CSS.Properties;\n  arrowStyles: CSS.Properties;\n  placedSide?: Side;\n  placedAlign?: Align;\n};\n\n/**\n * Given all the information necessary to compute it,\n * this function calculates all the necessary placement data.\n *\n * It will return:\n *\n * - the styles to apply to the popper (including a custom property that is useful to set the transform origin in the right place)\n * - the styles to apply to the arrow\n * - the placed side (because it might have changed because of collisions)\n * - the placed align (because it might have changed because of collisions)\n */\nfunction getPlacementData({\n  anchorRect,\n  popperSize,\n  arrowSize,\n  arrowOffset = 0,\n  side,\n  sideOffset = 0,\n  align,\n  alignOffset = 0,\n  shouldAvoidCollisions = true,\n  collisionBoundariesRect,\n  collisionTolerance = 0,\n}: GetPlacementDataOptions): PlacementData {\n  // if we're not ready to do all the measurements yet,\n  // we return some good default styles\n  if (!anchorRect || !popperSize || !collisionBoundariesRect) {\n    return {\n      popperStyles: UNMEASURED_POPPER_STYLES,\n      arrowStyles: UNMEASURED_ARROW_STYLES,\n    };\n  }\n\n  // pre-compute points for all potential placements\n  const allPlacementPoints = getAllPlacementPoints(\n    popperSize,\n    anchorRect,\n    sideOffset,\n    alignOffset,\n    arrowSize\n  );\n\n  // get point based on side / align\n  const popperPoint = allPlacementPoints[side][align];\n\n  // if we don't need to avoid collisions, we can stop here\n  if (shouldAvoidCollisions === false) {\n    const popperStyles = getPlacementStylesForPoint(popperPoint);\n\n    let arrowStyles = UNMEASURED_ARROW_STYLES;\n    if (arrowSize) {\n      arrowStyles = getPopperArrowStyles({ popperSize, arrowSize, arrowOffset, side, align });\n    }\n\n    const transformOrigin = getTransformOrigin(popperSize, side, align, arrowOffset, arrowSize);\n\n    return {\n      popperStyles: {\n        ...popperStyles,\n        ['--radix-popper-transform-origin' as any]: transformOrigin,\n      },\n      arrowStyles,\n      placedSide: side,\n      placedAlign: align,\n    };\n  }\n\n  // create a new rect as if element had been moved to new placement\n  const popperRect = DOMRect.fromRect({ ...popperSize, ...popperPoint });\n\n  // create a new rect representing the collision boundaries but taking into account any added tolerance\n  const collisionBoundariesRectWithTolerance = getContractedRect(\n    collisionBoundariesRect,\n    collisionTolerance\n  );\n\n  // check for any collisions in new placement\n  const popperCollisions = getCollisions(popperRect, collisionBoundariesRectWithTolerance);\n\n  // do all the same calculations for the opposite side\n  // this is because we need to check for potential collisions if we were to swap side\n  const oppositeSide = getOppositeSide(side);\n  const oppositeSidePopperPoint = allPlacementPoints[oppositeSide][align];\n  const updatedOppositeSidePopperPoint = DOMRect.fromRect({\n    ...popperSize,\n    ...oppositeSidePopperPoint,\n  });\n  const oppositeSidePopperCollisions = getCollisions(\n    updatedOppositeSidePopperPoint,\n    collisionBoundariesRectWithTolerance\n  );\n\n  // adjust side accounting for collisions / opposite side collisions\n  const placedSide = getSideAccountingForCollisions(\n    side,\n    popperCollisions,\n    oppositeSidePopperCollisions\n  );\n\n  // adjust alignnment accounting for collisions\n  const placedAlign = getAlignAccountingForCollisions(\n    popperSize,\n    anchorRect,\n    side,\n    align,\n    popperCollisions\n  );\n\n  const placedPopperPoint = allPlacementPoints[placedSide][placedAlign];\n\n  // compute adjusted popper / arrow styles\n  const popperStyles = getPlacementStylesForPoint(placedPopperPoint);\n\n  let arrowStyles = UNMEASURED_ARROW_STYLES;\n  if (arrowSize) {\n    arrowStyles = getPopperArrowStyles({\n      popperSize,\n      arrowSize,\n      arrowOffset,\n      side: placedSide,\n      align: placedAlign,\n    });\n  }\n\n  const transformOrigin = getTransformOrigin(\n    popperSize,\n    placedSide,\n    placedAlign,\n    arrowOffset,\n    arrowSize\n  );\n\n  return {\n    popperStyles: {\n      ...popperStyles,\n      ['--radix-popper-transform-origin' as any]: transformOrigin,\n    },\n    arrowStyles,\n    placedSide,\n    placedAlign,\n  };\n}\n\ntype AllPlacementPoints = Record<Side, Record<Align, Point>>;\n\nfunction getAllPlacementPoints(\n  popperSize: Size,\n  anchorRect: ClientRect,\n  sideOffset: number = 0,\n  alignOffset: number = 0,\n  arrowSize?: Size\n): AllPlacementPoints {\n  const arrowBaseToTipLength = arrowSize ? arrowSize.height : 0;\n\n  const x = getPopperSlotsForAxis(anchorRect, popperSize, 'x');\n  const y = getPopperSlotsForAxis(anchorRect, popperSize, 'y');\n\n  const topY    = y.before - sideOffset - arrowBaseToTipLength; // prettier-ignore\n  const bottomY = y.after  + sideOffset + arrowBaseToTipLength; // prettier-ignore\n  const leftX   = x.before - sideOffset - arrowBaseToTipLength; // prettier-ignore\n  const rightX  = x.after  + sideOffset + arrowBaseToTipLength; // prettier-ignore\n\n  // prettier-ignore\n  const map: AllPlacementPoints = {\n    top: {\n      start:  { x: x.start + alignOffset, y: topY },\n      center: { x: x.center,              y: topY },\n      end:    { x: x.end - alignOffset,   y: topY },\n    },\n    right: {\n      start:  { x: rightX, y: y.start + alignOffset },\n      center: { x: rightX, y: y.center },\n      end:    { x: rightX, y: y.end - alignOffset },\n    },\n    bottom: {\n      start:  { x: x.start + alignOffset, y: bottomY },\n      center: { x: x.center,              y: bottomY },\n      end:    { x: x.end - alignOffset,   y: bottomY },\n    },\n    left: {\n      start:  { x: leftX, y: y.start + alignOffset },\n      center: { x: leftX, y: y.center },\n      end:    { x: leftX, y: y.end - alignOffset },\n    },\n  };\n\n  return map;\n}\n\nfunction getPopperSlotsForAxis(anchorRect: ClientRect, popperSize: Size, axis: Axis) {\n  const startSide = axis === 'x' ? 'left' : 'top';\n  const anchorStart = anchorRect[startSide];\n\n  const dimension = axis === 'x' ? 'width' : 'height';\n  const anchorDimension = anchorRect[dimension];\n  const popperDimension = popperSize[dimension];\n\n  // prettier-ignore\n  return {\n    before: anchorStart - popperDimension,\n    start:  anchorStart,\n    center: anchorStart + (anchorDimension - popperDimension) / 2,\n    end:    anchorStart + anchorDimension - popperDimension,\n    after:  anchorStart + anchorDimension,\n  };\n}\n\n/**\n * Gets an adjusted side based on collision information\n */\nfunction getSideAccountingForCollisions(\n  /** The side we want to ideally position to */\n  side: Side,\n  /** The collisions for this given side */\n  collisions: Collisions,\n  /** The collisions for the opposite side (if we were to swap side) */\n  oppositeSideCollisions: Collisions\n): Side {\n  const oppositeSide = getOppositeSide(side);\n  // in order to prevent premature jumps\n  // we only swap side if there's enough space to fit on the opposite side\n  return collisions[side] && !oppositeSideCollisions[oppositeSide] ? oppositeSide : side;\n}\n\n/**\n * Gets an adjusted alignment based on collision information\n */\nfunction getAlignAccountingForCollisions(\n  /** The size of the popper to place */\n  popperSize: Size,\n  /** The size of the anchor we are placing around */\n  anchorSize: Size,\n  /** The final side */\n  side: Side,\n  /** The desired align */\n  align: Align,\n  /** The collisions */\n  collisions: Collisions\n): Align {\n  const isHorizontalSide = side === 'top' || side === 'bottom';\n  const startBound = isHorizontalSide ? 'left' : 'top';\n  const endBound = isHorizontalSide ? 'right' : 'bottom';\n  const dimension = isHorizontalSide ? 'width' : 'height';\n  const isAnchorBigger = anchorSize[dimension] > popperSize[dimension];\n\n  if (align === 'start' || align === 'center') {\n    if ((collisions[startBound] && isAnchorBigger) || (collisions[endBound] && !isAnchorBigger)) {\n      return 'end';\n    }\n  }\n\n  if (align === 'end' || align === 'center') {\n    if ((collisions[endBound] && isAnchorBigger) || (collisions[startBound] && !isAnchorBigger)) {\n      return 'start';\n    }\n  }\n\n  return align;\n}\n\nfunction getPlacementStylesForPoint(point: Point): CSS.Properties {\n  const x = Math.round(point.x + window.scrollX);\n  const y = Math.round(point.y + window.scrollY);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    minWidth: 'max-content',\n    willChange: 'transform',\n    transform: `translate3d(${x}px, ${y}px, 0)`,\n  };\n}\n\nfunction getTransformOrigin(\n  popperSize: Size,\n  side: Side,\n  align: Align,\n  arrowOffset: number,\n  arrowSize?: Size\n): CSS.Properties['transformOrigin'] {\n  const isHorizontalSide = side === 'top' || side === 'bottom';\n\n  const arrowBaseLength = arrowSize ? arrowSize.width : 0;\n  const arrowBaseToTipLength = arrowSize ? arrowSize.height : 0;\n  const sideOffset = arrowBaseToTipLength;\n  const alignOffset = arrowBaseLength / 2 + arrowOffset;\n\n  let x = '';\n  let y = '';\n\n  if (isHorizontalSide) {\n    x = {\n      start: `${alignOffset}px`,\n      center: 'center',\n      end: `${popperSize.width - alignOffset}px`,\n    }[align];\n\n    y = side === 'top' ? `${popperSize.height + sideOffset}px` : `${-sideOffset}px`;\n  } else {\n    x = side === 'left' ? `${popperSize.width + sideOffset}px` : `${-sideOffset}px`;\n\n    y = {\n      start: `${alignOffset}px`,\n      center: 'center',\n      end: `${popperSize.height - alignOffset}px`,\n    }[align];\n  }\n\n  return `${x} ${y}`;\n}\n\nconst UNMEASURED_POPPER_STYLES: CSS.Properties = {\n  // position: 'fixed' here is important because it will take the popper\n  // out of the flow so it does not disturb the position of the anchor\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  opacity: 0,\n  transform: 'translate3d(0, -200%, 0)',\n};\n\nconst UNMEASURED_ARROW_STYLES: CSS.Properties = {\n  // given the arrow is nested inside the popper,\n  // make sure that it is out of the flow and doesn't hinder then popper's measurement\n  position: 'absolute',\n  opacity: 0,\n};\n\ntype GetArrowStylesOptions = {\n  /** The size of the popper to place */\n  popperSize: Size;\n  /** The size of the arrow itself */\n  arrowSize: Size;\n  /** An offset for the arrow along the align axis */\n  arrowOffset: number;\n  /** The side where the arrow points to */\n  side: Side;\n  /** The alignment of the arrow along the side */\n  align: Align;\n};\n\n/**\n * Computes the styles necessary to position, rotate and align the arrow correctly.\n * It can adjust itself based on anchor/popper size, side/align and an optional offset.\n */\nfunction getPopperArrowStyles({\n  popperSize,\n  arrowSize,\n  arrowOffset,\n  side,\n  align,\n}: GetArrowStylesOptions): CSS.Properties {\n  const popperCenterX = (popperSize.width - arrowSize.width) / 2;\n  const popperCenterY = (popperSize.height - arrowSize.width) / 2;\n\n  const rotationMap = { top: 0, right: 90, bottom: 180, left: -90 };\n  const rotation = rotationMap[side];\n  const arrowMaxDimension = Math.max(arrowSize.width, arrowSize.height);\n\n  const styles: CSS.Properties = {\n    // we make sure we put the arrow inside a 1:1 ratio container\n    // this is to make the rotation handling simpler\n    // as we do no need to worry about changing the transform-origin\n    width: `${arrowMaxDimension}px`,\n    height: `${arrowMaxDimension}px`,\n\n    // rotate the arrow appropriately\n    transform: `rotate(${rotation}deg)`,\n    willChange: 'transform',\n\n    // position the arrow appropriately\n    position: 'absolute',\n    [side]: '100%',\n\n    // Because the arrow gets rotated (see `transform above`)\n    // and we are putting it inside a 1:1 ratio container\n    // we need to adjust the CSS direction from `ltr` to `rtl`\n    // in some circumstances\n    direction: getArrowCssDirection(side, align),\n  };\n\n  if (side === 'top' || side === 'bottom') {\n    if (align === 'start') {\n      styles.left = `${arrowOffset}px`;\n    }\n    if (align === 'center') {\n      styles.left = `${popperCenterX}px`;\n    }\n    if (align === 'end') {\n      styles.right = `${arrowOffset}px`;\n    }\n  }\n\n  if (side === 'left' || side === 'right') {\n    if (align === 'start') {\n      styles.top = `${arrowOffset}px`;\n    }\n    if (align === 'center') {\n      styles.top = `${popperCenterY}px`;\n    }\n    if (align === 'end') {\n      styles.bottom = `${arrowOffset}px`;\n    }\n  }\n\n  return styles;\n}\n\n/**\n * Adjusts the arrow's CSS direction (`ltr` / `rtl`)\n */\nfunction getArrowCssDirection(side: Side, align: Align): CSS.Property.Direction {\n  if ((side === 'top' || side === 'right') && align === 'end') {\n    return 'rtl';\n  }\n\n  if ((side === 'bottom' || side === 'left') && align !== 'end') {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\n/**\n * Gets the opposite side of a given side (ie. top => bottom, left => right, …)\n */\nfunction getOppositeSide(side: Side): Side {\n  const oppositeSides: Record<Side, Side> = {\n    top: 'bottom',\n    right: 'left',\n    bottom: 'top',\n    left: 'right',\n  };\n  return oppositeSides[side];\n}\n\n/**\n * Creates a new rect (`ClientRect`) based on a given one but contracted by\n * a given amout on each side.\n */\nfunction getContractedRect(rect: ClientRect, amount: number) {\n  return DOMRect.fromRect({\n    width: rect.width - amount * 2,\n    height: rect.height - amount * 2,\n    x: rect.left + amount,\n    y: rect.top + amount,\n  });\n}\n\n/**\n * Gets collisions for each side of a rect (top, right, bottom, left)\n */\nfunction getCollisions(\n  /** The rect to test collisions against */\n  rect: ClientRect,\n  /** The rect which represents the boundaries for collision checks */\n  collisionBoundariesRect: ClientRect\n) {\n  return {\n    top: rect.top < collisionBoundariesRect.top,\n    right: rect.right > collisionBoundariesRect.right,\n    bottom: rect.bottom > collisionBoundariesRect.bottom,\n    left: rect.left < collisionBoundariesRect.left,\n  };\n}\n\ntype Collisions = ReturnType<typeof getCollisions>;\n\nexport { getPlacementData, SIDE_OPTIONS, ALIGN_OPTIONS };\nexport type { Side, Align };\n","import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  arrowStyles: React.CSSProperties;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  onArrowOffsetChange(offset?: number): void;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  collisionTolerance?: number;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset,\n      align = 'center',\n      alignOffset,\n      collisionTolerance,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [arrowOffset, setArrowOffset] = React.useState<number>();\n    const anchorRect = useRect(context.anchor);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const contentSize = useSize(content);\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const windowSize = useWindowSize();\n    const collisionBoundariesRect = windowSize\n      ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n      : undefined;\n\n    const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n      anchorRect,\n      popperSize: contentSize,\n      arrowSize,\n\n      // config\n      arrowOffset,\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      shouldAvoidCollisions: avoidCollisions,\n      collisionBoundariesRect,\n      collisionTolerance,\n    });\n    const isPlaced = placedSide !== undefined;\n\n    return (\n      <div style={popperStyles} data-radix-popper-content-wrapper=\"\">\n        <PopperContentProvider\n          scope={__scopePopper}\n          arrowStyles={arrowStyles}\n          onArrowChange={setArrow}\n          onArrowOffsetChange={setArrowOffset}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPlaced ? 'none' : undefined,\n            }}\n            ref={composedRefs}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {\n  offset?: number;\n}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, offset, ...arrowProps } = props;\n  const context = useContentContext(ARROW_NAME, __scopePopper);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.onArrowChange}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n","import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal } from '@radix-ui/react-portal';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useId } from '@radix-ui/react-id';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n  children?: React.ReactNode;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RemoveScrollProps = React.ComponentProps<typeof RemoveScroll>;\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {\n  /**\n   * @see https://github.com/theKashey/react-remove-scroll#usage\n   */\n  allowPinchZoom?: RemoveScrollProps['allowPinchZoom'];\n  /**\n   * Whether the `Popover` should render in a `Portal`\n   * (default: `true`)\n   */\n  portalled?: boolean;\n}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const { allowPinchZoom, portalled = true, ...contentModalProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    const PortalWrapper = portalled ? Portal : React.Fragment;\n\n    return (\n      <PortalWrapper>\n        <RemoveScroll allowPinchZoom={allowPinchZoom}>\n          <PopoverContentImpl\n            {...contentModalProps}\n            ref={composedRefs}\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapFocus={context.open}\n            disableOutsidePointerEvents\n            onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n              event.preventDefault();\n              if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n            })}\n            onPointerDownOutside={composeEventHandlers(\n              props.onPointerDownOutside,\n              (event) => {\n                const originalEvent = event.detail.originalEvent;\n                const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n                const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n                isRightClickOutsideRef.current = isRightClick;\n              },\n              { checkForDefaultPrevented: false }\n            )}\n            // When focus is trapped, a `focusout` event may still happen.\n            // We make sure we don't trigger our `onDismiss` in such case.\n            onFocusOutside={composeEventHandlers(\n              props.onFocusOutside,\n              (event) => event.preventDefault(),\n              { checkForDefaultPrevented: false }\n            )}\n          />\n        </RemoveScroll>\n      </PortalWrapper>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const { portalled = true, ...contentNonModalProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    const PortalWrapper = portalled ? Portal : React.Fragment;\n\n    return (\n      <PortalWrapper>\n        <PopoverContentImpl\n          {...contentNonModalProps}\n          ref={forwardedRef}\n          trapFocus={false}\n          disableOutsidePointerEvents={false}\n          onCloseAutoFocus={(event) => {\n            props.onCloseAutoFocus?.(event);\n\n            if (!event.defaultPrevented) {\n              if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n              // Always prevent auto focus because we either focus manually or want user agent focus\n              event.preventDefault();\n            }\n\n            hasInteractedOutsideRef.current = false;\n          }}\n          onInteractOutside={(event) => {\n            props.onInteractOutside?.(event);\n\n            if (!event.defaultPrevented) hasInteractedOutsideRef.current = true;\n\n            // Prevent dismissing when clicking the trigger.\n            // As the trigger is already setup to close, without doing so would\n            // cause it to close and immediately open.\n            //\n            // We use `onInteractOutside` as some browsers also\n            // focus on pointer down, creating the same issue.\n            const target = event.target as HTMLElement;\n            const targetIsTrigger = context.triggerRef.current?.contains(target);\n            if (targetIsTrigger) event.preventDefault();\n          }}\n        />\n      </PortalWrapper>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends PopperContentProps,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom property\n              ['--radix-popover-content-transform-origin' as any]:\n                'var(--radix-popper-transform-origin)',\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n"],"names":["useLayoutEffect","Boolean","globalThis","document","React","useReactId","toString","count","useId","deterministicId","id","setId","reactId","String","composeRefs","refs","node","forEach","ref","value","current","useComposedRefs","Slot","props","forwardedRef","children","slotProps","some","isSlottable","_react","child","$d34e8c328cb3dd19ab7a2f6eafa6ad$var$SlotClone","_babelRuntimeHelpersEsmExtends","displayName","SlotClone","mergeProps","Slottable","type","childProps","overrideProps","propName","slotPropValue","childPropValue","test","filter","join","Primitive","reduce","primitive","asChild","primitiveProps","Comp","window","Symbol","for","Presence","present","presence","setNode","stylesRef","prevPresentRef","prevAnimationNameRef","initialState","state","send","machine","event","nextState","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","display","isAnimating","handleAnimationEnd","isCurrentAnimation","includes","animationName","target","handleAnimationStart","addEventListener","removeEventListener","isPresent","getComputedStyle","useFocusGuards","edgeGuards","querySelectorAll","body","insertAdjacentElement","createFocusGuard","remove","element","createElement","setAttribute","tabIndex","style","cssText","Portal","containerRef","portalProps","hostElement","_globalThis$document","forceUpdate","ReactDOM","position","top","left","zIndex","useCallbackRef","callback","callbackRef","args","_callbackRef$current","EVENT_OPTIONS","bubbles","cancelable","FocusScope","loop","trapped","onMountAutoFocus","onMountAutoFocusProp","onUnmountAutoFocus","onUnmountAutoFocusProp","scopeProps","container","setContainer","lastFocusedElementRef","composedRefs","focusScope","paused","pause","this","resume","handleFocusIn","contains","focus","select","handleFocusOut","relatedTarget","focusScopesStack","add","previouslyFocusedElement","activeElement","mountEvent","Event","dispatchEvent","defaultPrevented","candidates","candidate","getTabbableCandidates","item","tagName","setTimeout","unmountEvent","handleKeyDown","isTabKey","key","altKey","ctrlKey","metaKey","focusedElement","currentTarget","first","last","findVisible","reverse","shiftKey","preventDefault","onKeyDown","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","disabled","hidden","FILTER_SKIP","FILTER_ACCEPT","nextNode","push","currentNode","elements","isHidden","upTo","visibility","parentElement","preventScroll","HTMLInputElement","stack","activeFocusScope","arrayRemove","unshift","array","updatedArray","index","indexOf","splice","useEscapeKeydown","onEscapeKeyDownProp","onEscapeKeyDown","originalBodyPointerEvents","changeCount","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","DismissableLayerContext","layers","Set","layersWithOutsidePointerEventsDisabled","branches","DismissableLayer","disableOutsidePointerEvents","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","context","force","Array","from","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","handlePointerDownOutside","isPointerDownOnBranch","branch","isPointerInsideReactTreeRef","handlePointerDown","dispatchCustomEvent","originalEvent","timerId","clearTimeout","onPointerDownCapture","focusOutside","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","onFocusCapture","onBlurCapture","isTouchOrPenPressedRef","resetPointerEvents","pointerEvents","handlePointerUp","pointerType","once","useBodyPointerEvents","dispatchUpdate","delete","handleUpdate","name","handler","detail","CustomEvent","useSize","setSize","useState","resizeObserver","ResizeObserver","entries","isArray","length","entry","width","height","borderSizeEntry","borderBoxSize","borderSize","inlineSize","blockSize","rect","getBoundingClientRect","observe","box","unobserve","rafId","observedElements","Map","runLoop","changedRectsData","data","newRect","rect1","rect2","right","bottom","callbacks","requestAnimationFrame","useRect","measurable","setRect","elementToObserve","observedData","get","set","cancelAnimationFrame","observeElementRect","composeContextScopes","scopes","baseScope","createScope","scopeHooks","map","useScope","scopeName","overrideScopes","nextScopes","getPopperSlotsForAxis","anchorRect","popperSize","axis","anchorStart","dimension","anchorDimension","popperDimension","before","start","center","end","after","getPlacementStylesForPoint","point","minWidth","willChange","transform","Math","round","x","scrollX","y","scrollY","getTransformOrigin","side","align","arrowOffset","arrowSize","isHorizontalSide","arrowBaseLength","sideOffset","alignOffset","UNMEASURED_POPPER_STYLES","opacity","UNMEASURED_ARROW_STYLES","getPopperArrowStyles","popperCenterX","popperCenterY","rotation","arrowMaxDimension","max","direction","getArrowCssDirection","getOppositeSide","getCollisions","collisionBoundariesRect","createPopperContext","createPopperScope","createContextScopeDeps","defaultContexts","scopeContexts","defaultContext","scope","contexts","rootComponentName","BaseContext","Provider","Context","Object","values","consumerName","Error","createContextScope","PopperProvider","usePopperContext","PopperAnchor","__scopePopper","virtualRef","anchorProps","onAnchorChange","PopperContentProvider","useContentContext","PopperContent","collisionTolerance","avoidCollisions","contentProps","setArrowOffset","anchor","content","setContent","contentSize","arrow","setArrow","windowSize","setWindowSize","debounceTimerId","updateWindowSize","innerWidth","innerHeight","handleResize","DOMRect","fromRect","popperStyles","arrowStyles","placedSide","placedAlign","shouldAvoidCollisions","allPlacementPoints","arrowBaseToTipLength","topY","bottomY","leftX","rightX","popperPoint","popperRect","collisionBoundariesRectWithTolerance","amount","popperCollisions","oppositeSidePopperPoint","collisions","oppositeSideCollisions","oppositeSide","anchorSize","startBound","endBound","isAnchorBigger","getPlacementData","isPlaced","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperContentProvider","onArrowChange","onArrowOffsetChange","animation","Root","setAnchor","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperProvider","Anchor","Content","createPopoverContext","createPopoverScope","usePopperScope","PopoverProvider","usePopoverContext","PopoverTrigger","__scopePopover","triggerProps","popperScope","composedTriggerRef","triggerRef","trigger","button","open","contentId","getState","onClick","onOpenToggle","hasCustomAnchor","_radixUiReactPopper","PopoverContent","forceMount","modal","$f4ab2d44b661a498b6a640a78746e78$var$PopoverContentModal","$f4ab2d44b661a498b6a640a78746e78$var$PopoverContentNonModal","PopoverContentModal","allowPinchZoom","portalled","contentModalProps","contentRef","isRightClickOutsideRef","hideOthers","PortalWrapper","RemoveScroll","$f4ab2d44b661a498b6a640a78746e78$var$PopoverContentImpl","trapFocus","onCloseAutoFocus","ctrlLeftClick","isRightClick","PopoverContentNonModal","contentNonModalProps","hasInteractedOutsideRef","_context$triggerRef$c2","_context$triggerRef$c3","PopoverContentImpl","onOpenAutoFocus","onOpenChange","role","PopoverClose","closeProps","openProp","defaultOpen","setHasCustomAnchor","setOpen","useControllableState","prop","defaultProp","onChange","uncontrolledProp","setUncontrolledProp","uncontrolledState","prevValueRef","handleChange","isControlled","nextValue","setter","$f4ab2d44b661a498b6a640a78746e78$var$PopoverProvider","prevOpen","onCustomAnchorAdd","onCustomAnchorRemove","Trigger","Close"],"sourceRoot":""}