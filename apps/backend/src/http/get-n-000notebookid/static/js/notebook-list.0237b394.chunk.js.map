{"version":3,"file":"static/js/notebook-list.0237b394.chunk.js","mappings":"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","sources":["../../ui/src/organisms/DashboardDialogCTA/DashboardDialogCTA.tsx","../../ui/src/organisms/DragAndDropImportNotebook/DragAndDropImportNotebook.tsx","../../ui/src/molecules/NotebookIcon/NotebookIcon.tsx","../../ui/src/organisms/NotebookListItem/NotebookListItem.tsx","../../ui/src/utils/getEmptyImage.ts","../../ui/src/organisms/EmptyWorkspaceCta/EmptyWorkspaceCta.tsx","../../ui/src/utils/search.ts","../../ui/src/templates/NotebookList/NotebookList.tsx","../../../apps/frontend/src/workspaces/workspace/NotebookList.tsx","../../ui/src/atoms/ColorStatus/ColorStatusCircle.tsx","../../ui/src/molecules/FilterBubbles/FilterBubbles.tsx","../../ui/src/styles/buttons.ts","../../ui/src/styles/dashboard.ts","../../ui/src/utils/dnd.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport { FC, ReactNode } from 'react';\nimport { Button } from '../../atoms';\n\nimport { cssVar, h2, p14Regular, setCssVar } from '../../primitives';\n\nconst dashboardDialogCTAStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '10px',\n  alignItems: 'center',\n});\n\ninterface DashboardDialogCTAProps {\n  readonly icon: ReactNode;\n  readonly primaryText: string;\n  readonly primaryActionLabel?: string;\n  readonly primaryAction?: () => void;\n  readonly primaryActionHref?: string;\n  readonly secondaryText?: string;\n  readonly secondaryActionLabel?: string;\n  readonly secondaryAction?: () => void;\n  readonly secondaryActionHref?: string;\n}\n\nexport const DashboardDialogCTA = ({\n  icon,\n  primaryText,\n  primaryActionLabel,\n  primaryAction,\n  primaryActionHref,\n  secondaryText,\n  secondaryActionLabel,\n  secondaryAction,\n  secondaryActionHref,\n}: DashboardDialogCTAProps): ReturnType<FC> => {\n  return (\n    <div css={dashboardDialogCTAStyles}>\n      <span css={{ width: '40px', height: '40px' }}>{icon}</span>\n      <h1 css={css(h2, { gridRow: 'heading' })}>{primaryText}</h1>\n      {secondaryText && (\n        <p\n          css={css(p14Regular, {\n            ...setCssVar('currentTextColor', cssVar('weakTextColor')),\n            gridRow: 'text',\n          })}\n        >\n          {secondaryText}\n        </p>\n      )}\n      <div css={{ display: 'flex', gap: '10px', marginTop: '20px' }}>\n        {primaryAction && primaryActionLabel && (\n          <div css={{ gridRow: 'button' }}>\n            <Button\n              type=\"primary\"\n              href={primaryActionHref}\n              onClick={primaryAction}\n            >\n              {primaryActionLabel}\n            </Button>\n          </div>\n        )}\n\n        {secondaryAction && secondaryActionLabel && (\n          <div css={{ gridRow: 'button' }}>\n            <Button\n              type=\"secondary\"\n              href={secondaryActionHref}\n              onClick={secondaryAction}\n            >\n              {secondaryActionLabel}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { FC, ReactNode } from 'react';\nimport { DropTargetMonitor, useDrop } from 'react-dnd';\nimport { NativeTypes } from 'react-dnd-html5-backend';\nimport { GenericTable } from '../../icons';\nimport { emptywRapperStyles } from '../../templates/NotebookList/NotebookList';\nimport { DashboardDialogCTA } from '../DashboardDialogCTA/DashboardDialogCTA';\n\nconst acceptableFileTypes = ['application/json'];\nconst maxFileSizeBytes = 1_000_000;\n\nconst validateItemAndGetFile = (item: DataTransferItem) => {\n  const file = item.getAsFile();\n  if (!file) {\n    console.warn('Expected item to be a file but received item', item);\n    throw new Error('Received an item that is not a file');\n  }\n\n  if (!acceptableFileTypes.includes(file.type)) {\n    console.warn(\n      'Expected one of types',\n      acceptableFileTypes,\n      'but received file',\n      file,\n      'with type',\n      file.type\n    );\n    throw new Error(`Cannot import file of type ${file.type}`);\n  }\n\n  if (file.size > maxFileSizeBytes) {\n    console.warn(\n      'Expected only files smaller than',\n      maxFileSizeBytes,\n      'bytes but received file',\n      file,\n      'with size',\n      file.size\n    );\n    throw new Error(\n      `File too big (${file.size} bytes). Will only accept files smaller than ${maxFileSizeBytes} bytes.`\n    );\n  }\n\n  return file;\n};\n\nconst dropStyles = css({\n  zIndex: 2,\n});\n\ninterface DragAndDropImportNotebookProps {\n  readonly enabled?: boolean;\n  readonly onImport?: (source: string) => void;\n  readonly children?: ReactNode;\n}\n\nexport const DragAndDropImportNotebook = ({\n  onImport = noop,\n  enabled = true,\n  children,\n}: DragAndDropImportNotebookProps): ReturnType<FC> => {\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: [NativeTypes.FILE],\n    drop: (data: DataTransfer) => {\n      const items = data?.items || [];\n      Array.from(items).forEach(async (item) => {\n        // Async fire and forget\n        try {\n          const file = validateItemAndGetFile(item);\n          onImport(await file.text());\n        } catch (err) {\n          console.warn('Did not import invalid item', item);\n        }\n      });\n    },\n    canDrop: (data: DataTransfer) => {\n      const items = data?.items || [];\n      return Array.from(items).some((item) => {\n        try {\n          validateItemAndGetFile(item);\n          return true;\n        } catch {\n          return false;\n        }\n      });\n    },\n    collect: (monitor: DropTargetMonitor) => {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop(),\n      };\n    },\n  });\n  return !enabled ? (\n    <div>{children}</div>\n  ) : (\n    <div css={isOver && canDrop && dropStyles} ref={drop}>\n      {isOver ? (\n        <div css={emptywRapperStyles(false)}>\n          <DashboardDialogCTA\n            icon={<GenericTable />}\n            primaryText={'Drag and drop your notebooks here'}\n            secondaryText={\n              'Quickly import decipad notebooks, csv, and other files...'\n            }\n          />\n        </div>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n","import { useThemeFromStore } from '@decipad/react-contexts';\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\nimport * as icons from '../../icons';\nimport { cssVar, offBlack, setCssVar, transparency } from '../../primitives';\nimport { AvailableSwatchColor, swatchesThemed, UserIconKey } from '../../utils';\n\nexport interface NotebookIconProps {\n  readonly icon: UserIconKey;\n  readonly color?: AvailableSwatchColor;\n}\n\nexport const NotebookIcon = ({\n  icon,\n  color = 'Catskill',\n}: NotebookIconProps): ReturnType<FC> => {\n  const [darkTheme] = useThemeFromStore();\n  const baseSwatches = swatchesThemed(darkTheme);\n  const Icon = icons[icon];\n\n  return (\n    <div\n      css={[notebookIconStyles, { backgroundColor: baseSwatches[color].hex }]}\n    >\n      <Icon />\n    </div>\n  );\n};\n\nconst notebookIconStyles = css({\n  gridArea: 'icon',\n  height: '32px',\n  width: '32px',\n  cursor: 'move',\n\n  display: 'grid',\n  placeItems: 'center',\n  justifyContent: 'center',\n  alignContent: 'center',\n  gridTemplateColumns: '18px',\n\n  '> svg': {\n    height: '18px',\n    width: '18px',\n  },\n\n  borderRadius: '4px',\n  backgroundColor: cssVar('backgroundColor'),\n  ...setCssVar('currentTextColor', cssVar('iconColorDark')),\n\n  boxShadow: `0px 2px 24px -4px ${transparency(offBlack, 0.08).rgba}`,\n});\n","import { isFlagEnabled } from '@decipad/feature-flags';\nimport { useThemeFromStore } from '@decipad/react-contexts';\nimport { notebooks } from '@decipad/routing';\nimport { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport format from 'date-fns/format';\nimport { FC, useEffect, useState } from 'react';\nimport { useDrag, useDragLayer, XYCoord } from 'react-dnd';\nimport { ColorStatusCircle, MenuItem, TriggerMenuItem } from '../../atoms';\nimport * as icons from '../../icons';\nimport { FilterBubbles, MenuList, NotebookIcon } from '../../molecules';\nimport {\n  cssVar,\n  p12Medium,\n  p14Medium,\n  setCssVar,\n  shortAnimationDuration,\n  smallestDesktop,\n} from '../../primitives';\nimport { notebookList } from '../../styles';\nimport { mainIconButtonStyles } from '../../styles/buttons';\nimport {\n  Anchor,\n  AvailableColorStatus,\n  AvailableSwatchColor,\n  ColorStatusNames,\n  DNDItemTypes,\n  getEmptyImage,\n  swatchesThemed,\n  TColorStatus,\n  UserIconKey,\n} from '../../utils';\nimport { Section } from '../WorkspaceNavigation/WorkspaceNavigation';\n\ntype PageInfo = {\n  type: 'archived' | 'shared' | 'section' | 'workspace';\n  sections: Section[];\n};\n\nfunction CustomDragLayer() {\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    mousePosition,\n    currentOffset,\n  } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getInitialClientOffset(),\n    mousePosition: monitor.getDifferenceFromInitialOffset(),\n    isDragging: monitor.isDragging(),\n  }));\n  const [darkTheme] = useThemeFromStore();\n  const baseSwatches = swatchesThemed(darkTheme);\n\n  const renderItem = () => {\n    const color = baseSwatches[item.color as AvailableSwatchColor];\n    const Icon = icons[item.icon as UserIconKey];\n\n    switch (itemType) {\n      case DNDItemTypes.ICON:\n        return (\n          <div\n            style={{\n              backgroundColor: color.hex,\n              opacity: 1,\n              color: cssVar('currentTextColor'),\n              padding: 6,\n              borderRadius: 6,\n              display: 'inline-flex',\n              gap: 4,\n              zIndex: 1000,\n              transform: 'rotate(3deg)',\n            }}\n          >\n            <span\n              css={{\n                height: 16,\n                width: 16,\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Icon />\n            </span>\n            <span css={{ alignItems: 'center', justifyContent: 'center' }}>\n              {item.title}\n            </span>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return (\n    <div\n      css={getDragLayerStyles(\n        initialOffset,\n        currentOffset,\n        mousePosition,\n        isDragging\n      )}\n    >\n      {renderItem()}\n    </div>\n  );\n}\n\ntype NotebookListItemProps = {\n  readonly id: string;\n  readonly name: string;\n  readonly creationDate?: Date;\n  readonly page?: PageInfo;\n  readonly isPublic?: boolean;\n  readonly section?: Section;\n  readonly actionsOpen?: boolean;\n  readonly onExport?: () => void;\n  readonly onExportBackups?: () => void;\n  readonly toggleActionsOpen?: () => void;\n  readonly onDuplicate?: () => void;\n  readonly onDelete?: () => void;\n  readonly onMoveToSection?: (padId: string, sectionId: string) => void;\n  readonly onChangeStatus?: (status: TColorStatus) => void;\n  readonly onMoveToWorkspace?: (workspaceId: string) => void;\n  readonly onUnarchive?: () => void;\n  readonly icon: UserIconKey;\n  readonly iconColor: AvailableSwatchColor;\n  readonly status: TColorStatus;\n  readonly otherWorkspaces?: { id: string; name: string }[];\n};\n\ninterface DropResult {\n  id: string;\n  title: string;\n  icon: UserIconKey;\n  color: AvailableSwatchColor;\n}\n\nexport const NotebookListItem = ({\n  id,\n  name,\n  status,\n  creationDate,\n  isPublic,\n  section,\n  actionsOpen = false,\n  toggleActionsOpen = noop,\n  onDuplicate = noop,\n  onMoveToWorkspace = noop,\n  onMoveToSection = noop,\n  onDelete = noop,\n  onExport = noop,\n  onExportBackups = noop,\n  onUnarchive = noop,\n  onChangeStatus = noop,\n  icon = 'Rocket',\n  iconColor = 'Sulu',\n  page,\n  otherWorkspaces,\n}: NotebookListItemProps): ReturnType<FC> => {\n  const href = notebooks({}).notebook({ notebook: { id, name } }).$;\n  const [feStatus, setFeStatus] = useState<TColorStatus>(status);\n  const [statusOpen, setStatusOpen] = useState(false);\n  const [{ isDragging }, drag, preview] = useDrag(() => ({\n    type: DNDItemTypes.ICON,\n    item: { id, title: name, icon, color: iconColor },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult<DropResult>();\n      if (item && dropResult) {\n        onMoveToSection(item.id, dropResult.id);\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n      handlerId: monitor.getHandlerId(),\n    }),\n  }));\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, [preview]);\n\n  return (\n    <>\n      {isDragging ? <CustomDragLayer /> : null}\n      <div\n        ref={drag}\n        className=\"dragitem\"\n        css={[wrapperStyles, isDragging && notebookIconGrabbingStyles]}\n      >\n        <Anchor href={href} css={anchorStyles}>\n          <NotebookIcon color={iconColor} icon={icon} />\n\n          <strong css={[nameStyles, name || noNameNameStyles]}>\n            {name || 'My notebook title'}\n          </strong>\n          <div css={notebookListTagsStyles}>\n            <span css={notebookListInlineTags}>\n              {isFlagEnabled('DASHBOARD_STATUS') ? (\n                <MenuList\n                  root\n                  dropdown\n                  align=\"end\"\n                  side=\"bottom\"\n                  sideOffset={10}\n                  open={statusOpen}\n                  onChangeOpen={setStatusOpen}\n                  trigger={\n                    <div>\n                      <FilterBubbles\n                        description={ColorStatusNames[feStatus]}\n                        iconStyles={css({ transform: 'translateY(1px)' })}\n                        icon={<ColorStatusCircle name={feStatus} />}\n                      />\n                    </div>\n                  }\n                >\n                  {AvailableColorStatus.map((label) => (\n                    <MenuItem\n                      key={label}\n                      icon={<ColorStatusCircle name={label} />}\n                      onSelect={() => {\n                        onChangeStatus(label as TColorStatus);\n                        setFeStatus(label);\n                        setStatusOpen(!statusOpen);\n                      }}\n                      selected={feStatus === label}\n                    >\n                      <span>{ColorStatusNames[label]}</span>\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              ) : null}\n\n              {isPublic ? (\n                <FilterBubbles description=\"Published\" icon={<icons.Globe />} />\n              ) : null}\n\n              {section?.name ? (\n                <FilterBubbles\n                  description={section.name}\n                  icon={<icons.Folder />}\n                />\n              ) : null}\n\n              {page?.type === 'archived' ? (\n                <FilterBubbles description=\"Archive\" icon={<icons.Archive />} />\n              ) : null}\n            </span>\n          </div>\n          <div css={[menuActionsStyles]}>\n            <MenuList\n              root\n              dropdown\n              align=\"end\"\n              side=\"bottom\"\n              sideOffset={10}\n              open={actionsOpen}\n              onChangeOpen={toggleActionsOpen}\n              trigger={\n                <div css={[mainIconButtonStyles, { borderRadius: '6px' }]}>\n                  <span\n                    css={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      minWidth: '16px',\n                      minHeight: '16px',\n                      maxWidth: '32px',\n                      maxHeight: '32px',\n                      padding: '20%',\n                    }}\n                  >\n                    <icons.Ellipsis />\n                  </span>\n                </div>\n              }\n            >\n              <MenuItem\n                icon={<icons.Copy />}\n                onSelect={() => {\n                  onDuplicate();\n                  toggleActionsOpen();\n                }}\n              >\n                <div css={{ minWidth: '132px' }}>Duplicate</div>\n              </MenuItem>\n              {otherWorkspaces?.length !== 0 ? (\n                <MenuList\n                  itemTrigger={\n                    <TriggerMenuItem icon={<icons.Switch />}>\n                      <div css={{ minWidth: '132px' }}>Move to workspace</div>\n                    </TriggerMenuItem>\n                  }\n                >\n                  {otherWorkspaces?.map((workspace) => (\n                    <MenuItem\n                      key={workspace.id}\n                      icon={<icons.AddToWorkspace />}\n                      onSelect={() => onMoveToWorkspace(workspace.id)}\n                    >\n                      {workspace.name}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              ) : null}\n              <MenuItem\n                icon={<icons.Download />}\n                onSelect={() => {\n                  onExport();\n                  toggleActionsOpen();\n                }}\n              >\n                Download\n              </MenuItem>\n              <MenuItem\n                icon={<icons.Download />}\n                onSelect={() => {\n                  onExportBackups();\n                  toggleActionsOpen();\n                }}\n              >\n                Download Backups\n              </MenuItem>\n              {page?.type === 'archived' ? (\n                <MenuItem\n                  icon={<icons.FolderOpen />}\n                  onSelect={() => {\n                    onUnarchive();\n                    toggleActionsOpen();\n                  }}\n                >\n                  Put back\n                </MenuItem>\n              ) : null}\n              <MenuItem\n                icon={\n                  page?.type === 'archived' ? (\n                    <icons.Trash />\n                  ) : (\n                    <icons.Archive />\n                  )\n                }\n                onSelect={() => {\n                  onDelete();\n                  toggleActionsOpen();\n                }}\n              >\n                {page?.type === 'archived' ? 'Delete' : 'Archive'}\n              </MenuItem>\n\n              {creationDate && (\n                <li css={creationDateStyles}>\n                  <span css={calendarIconStyles}>\n                    <icons.Calendar />\n                  </span>\n                  <span> Created: {format(creationDate, 'd MMM Y')}</span>\n                </li>\n              )}\n            </MenuList>\n          </div>\n        </Anchor>\n      </div>\n    </>\n  );\n};\n\nconst { gridStyles } = notebookList;\n\nconst wrapperStyles = css({\n  position: 'relative',\n});\n\nconst anchorStyles = css(gridStyles, {\n  padding: `16px 0`,\n  whiteSpace: 'nowrap',\n\n  clipPath: 'inset(0 -12px 0 -12px round 12px)',\n  transition: `background-color ${shortAnimationDuration} ease-out, box-shadow ${shortAnimationDuration} ease-out`,\n  ':hover, :focus': {\n    backgroundColor: cssVar('highlightColor'),\n    boxShadow: `0px 0px 0px 12px ${cssVar('highlightColor')}`,\n  },\n});\n\nconst nameStyles = css({\n  gridArea: 'title',\n  gridColumnEnd: 'tags',\n  alignSelf: 'center',\n\n  overflowX: 'clip',\n  '@supports not (overflow-x: clip)': {\n    overflowX: 'hidden',\n  },\n  textOverflow: 'ellipsis',\n\n  ...p14Medium,\n  ...setCssVar('currentTextColor', cssVar('strongTextColor')),\n});\n\nconst noNameNameStyles = css({\n  ...setCssVar('currentTextColor', cssVar('weakTextColor')),\n});\n\nconst notebookListInlineTags = css({\n  display: 'flex',\n  gap: 8,\n});\n\nconst notebookListTagsStyles = css({\n  gridArea: 'tags',\n  display: 'grid',\n  paddingLeft: 36,\n  [`@media (max-width: ${smallestDesktop.landscape.width}px)`]: {\n    display: 'none',\n  },\n});\n\nconst menuActionsStyles = css({\n  gridArea: 'actions',\n\n  display: 'grid',\n  gridTemplateRows: '28px',\n\n  transition: `opacity ${shortAnimationDuration} ease-out`,\n\n  ...setCssVar('currentTextColor', cssVar('strongTextColor')),\n\n  position: 'relative',\n  opacity: 1,\n});\n\nconst calendarIconStyles = css({\n  display: 'inline-block',\n  width: '16px',\n  height: '13px',\n  opacity: 0.5,\n});\n\nconst creationDateStyles = css(p12Medium, {\n  paddingTop: '8px',\n  lineHeight: '20px',\n  backgroundColor: cssVar('highlightColor'),\n  border: `1px solid ${cssVar('borderColor')}`,\n  color: cssVar('weakTextColor'),\n  margin: '-7px',\n  borderRadius: '0 0 8px 8px',\n  padding: '4px 8px',\n  listStyle: 'none',\n  marginTop: '4px',\n});\n\nconst notebookIconGrabbingStyles = css({\n  cursor: 'grabbing',\n});\n\nfunction getDragLayerStyles(\n  initialOffset: XYCoord | null,\n  currentOffset: XYCoord | null,\n  mousePosition: XYCoord | null,\n  isDragging: boolean\n) {\n  if (!initialOffset || !currentOffset || !mousePosition) {\n    return {\n      display: 'none',\n    };\n  }\n\n  const { x, y } = mousePosition;\n  const { x: iX, y: iY } = initialOffset;\n  const { x: jX, y: jY } = currentOffset;\n  const xDelta = Math.round(jX - iX + x);\n  const yDelta = Math.round(jY - iY + y);\n  const trailingBy = 5;\n  const transform = `translate3d(${xDelta + trailingBy}px, ${\n    yDelta + trailingBy\n  }px, 0)`;\n  return css({\n    transform,\n    position: 'fixed',\n    opacity: isDragging ? 1 : 0,\n    height: isDragging ? '' : 0,\n    WebkitTransform: transform,\n    zIndex: '10',\n  });\n}\n","export const getEmptyImage = (): HTMLImageElement => {\n  return document.createElement('img');\n};\n","import { ClientEventsContext } from '@decipad/client-events';\nimport { docs } from '@decipad/routing';\nimport { noop } from '@decipad/utils';\nimport { FC, useCallback, useContext } from 'react';\nimport { GenericCursorAdd } from '../../icons';\n\nimport { DashboardDialogCTA } from '../DashboardDialogCTA/DashboardDialogCTA';\n\ninterface EmptyWorkspaceCtaProps {\n  readonly onCreateNotebook?: () => void;\n}\n\nexport const EmptyWorkspaceCta = ({\n  onCreateNotebook = noop,\n}: EmptyWorkspaceCtaProps): ReturnType<FC> => {\n  const clientEvent = useContext(ClientEventsContext);\n\n  const onGalleryClick = useCallback(\n    () =>\n      clientEvent({\n        type: 'action',\n        action: 'notebook templates clicked',\n      }),\n    [clientEvent]\n  );\n  return (\n    <DashboardDialogCTA\n      icon={<GenericCursorAdd />}\n      primaryAction={onCreateNotebook}\n      primaryText={'Create your first document'}\n      primaryActionLabel={'Create new notebook'}\n      secondaryText={'Start modelling your finances, your work, etc'}\n      secondaryActionLabel={'Explore templates'}\n      secondaryAction={onGalleryClick}\n      secondaryActionHref={docs({}).page({ name: 'gallery' }).$}\n    />\n  );\n};\n","import Fuse from 'fuse.js';\nimport searchQuery from 'search-query-parser';\nimport { TColorKeys } from '.';\n\nconst searchQueryOptions = {\n  tokenize: true,\n  keywords: ['status', 'visibility'],\n};\n\nfunction normalizeSearchText(text: string[] | string | undefined) {\n  return text ? (Array.isArray(text) ? text : [text]) : [];\n}\n\nexport function parseSearchInput(\n  query: string\n): [include: string[], exclude?: string[]] {\n  const parsedSearchQS = searchQuery.parse(query, searchQueryOptions);\n  if (typeof parsedSearchQS === 'string') return [[query]];\n  const { text, exclude } = parsedSearchQS;\n  const ExcText = exclude?.text as string;\n  return [normalizeSearchText(text), normalizeSearchText(ExcText)];\n}\n\nexport function acceptableStatus(\n  status: (string | null)[] | never[]\n): Fuse.Expression[] {\n  const noNulls = status.filter((x) => x !== null) as string[];\n  const statuses = noNulls\n    .filter((st) => TColorKeys.includes(st))\n    .map((st) => {\n      return { status: st };\n    });\n  if (statuses.length > 0) return [{ $or: statuses }];\n  return [];\n}\n\nexport function acceptableVisibility(visibility: string): Fuse.Expression[] {\n  if (visibility === 'public') {\n    return [{ isPublic: 'true' }];\n  }\n  if (visibility === 'private') {\n    return [{ $or: [{ isPublic: 'false' }, { isPublic: 'null' }] }];\n  }\n  return [];\n}\n\nexport function buildFuseQuery({\n  include,\n  exclude,\n  params,\n}: {\n  include: string[];\n  exclude: string[];\n  params?: Fuse.Expression[];\n}): Fuse.Expression {\n  /*\n  trick to show all instead of none\n  if (include.length === 0) {\n    return { name: '!1234567890' };\n  }\n  */\n  const textPart: Fuse.Expression = {\n    $or: [{ name: include.join(' ') }],\n  };\n  const paramPart: Fuse.Expression[] = params ? [...params] : [];\n  const excludePart: Fuse.Expression[] = exclude.map((e) => {\n    return { name: `!${e}` };\n  });\n  const fullQuery = {\n    $and: [textPart, ...paramPart, ...excludePart],\n  };\n  return fullQuery as Fuse.Expression;\n}\n","import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport Fuse from 'fuse.js';\nimport { ComponentProps, lazy, Suspense, useMemo, useState } from 'react';\nimport {\n  ArrayParam,\n  StringParam,\n  useQueryParam,\n  withDefault,\n} from 'use-query-params';\nimport { ColorStatus } from '../../atoms';\nimport { Generic, Info } from '../../icons';\nimport {\n  DashboardDialogCTA,\n  DragAndDropImportNotebook,\n  EmptyWorkspaceCta,\n  NotebookListItem,\n} from '../../organisms';\nimport { cssVar, p13Medium, smallScreenQuery } from '../../primitives';\nimport { dashboard, notebookList } from '../../styles';\nimport {\n  acceptableStatus,\n  acceptableVisibility,\n  buildFuseQuery,\n  parseSearchInput,\n} from '../../utils';\n\nconst loadWorkspaceCta = () =>\n  import(/* webpackChunkName: \"workspace-cta\" */ './WorkspaceCTACard');\nconst WorkspaceCta = lazy(loadWorkspaceCta);\n\nconst fuseOptions = {\n  minMatchCharLength: 2,\n  useExtendedSearch: true,\n  keys: ['name', 'isPublic', 'status'],\n};\n\ntype TColorStatus = ComponentProps<typeof ColorStatus>['name'];\n\nconst listItemStyles = css({ position: 'relative' });\n\ntype NotebookListProps = {\n  readonly notebooks: ReadonlyArray<\n    Pick<\n      ComponentProps<typeof NotebookListItem>,\n      | 'id'\n      | 'name'\n      | 'isPublic'\n      | 'onExport'\n      | 'icon'\n      | 'section'\n      | 'iconColor'\n      | 'creationDate'\n      | 'status'\n      | 'onExportBackups'\n    > & {\n      readonly id: string;\n    }\n  >;\n  readonly onDuplicate?: (id: string) => void;\n  readonly onMoveToWorkspace?: (id: string, workspaceId: string) => void;\n  readonly onUnarchive?: (id: string) => void;\n  readonly onDelete?: (id: string) => void;\n  readonly onChangeStatus?: (id: string, status: TColorStatus) => void;\n  readonly onMoveToSection?: (padId: string, sectionId: string) => void;\n  readonly onExport?: (id: string) => void;\n  readonly showCTA?: boolean;\n  readonly onCTADismiss?: () => void;\n  readonly onCreateNotebook?: () => void;\n  readonly otherWorkspaces?: { id: string; name: string }[];\n  readonly onPointerEnter?: () => void;\n  readonly Heading: 'h1';\n  readonly mainWorkspaceRoute?: boolean;\n} & Omit<ComponentProps<typeof DragAndDropImportNotebook>, 'children'> &\n  Pick<ComponentProps<typeof NotebookListItem>, 'page'>;\n\nexport const NotebookList = ({\n  notebooks,\n  onDuplicate = noop,\n  onChangeStatus = noop,\n  onMoveToWorkspace = noop,\n  onMoveToSection = noop,\n  onDelete = noop,\n  onUnarchive = noop,\n  showCTA = false,\n  onCTADismiss = noop,\n  page,\n  mainWorkspaceRoute = false,\n  onImport,\n\n  onCreateNotebook = noop,\n  otherWorkspaces = [],\n  onPointerEnter,\n}: NotebookListProps): ReturnType<React.FC> => {\n  const [search] = useQueryParam('search', withDefault(StringParam, ''));\n  const [status] = useQueryParam('status', withDefault(ArrayParam, []));\n  const [visibility] = useQueryParam(\n    'visibility',\n    withDefault(StringParam, '')\n  );\n  const fuse = useMemo(() => new Fuse(notebooks, fuseOptions), [notebooks]);\n  const searchResults = useMemo(() => {\n    const [include, exclude] = parseSearchInput(search);\n    const params = [\n      ...acceptableStatus(status),\n      ...acceptableVisibility(visibility),\n    ].flat();\n    const query = buildFuseQuery({\n      include,\n      exclude: exclude || [],\n      params: params.filter((a) => a !== undefined),\n    });\n    return fuse.search(query);\n  }, [search, status, visibility, fuse]);\n\n  const noNulls = useMemo(\n    () => status.filter((x) => x !== null) as string[],\n    [status]\n  );\n\n  const displayNotebooks = useMemo(() => {\n    const filteredNotebooks = notebooks.filter(\n      (nt) =>\n        (visibility === 'public' ? nt.isPublic === true : true) &&\n        (visibility === 'private' ? nt.isPublic !== true : true) &&\n        (noNulls.length > 0 && nt.status ? noNulls.includes(nt.status) : true)\n    );\n\n    return searchResults.length > 0\n      ? searchResults\n      : filteredNotebooks.map((n) => {\n          return { item: n };\n        });\n  }, [notebooks, searchResults, visibility, noNulls]);\n\n  const [openActionsId, setOpenActionsId] = useState<string>();\n  return (\n    <div css={notebookListWrapperStyles} onPointerEnter={onPointerEnter}>\n      <DragAndDropImportNotebook\n        enabled={mainWorkspaceRoute}\n        onImport={onImport}\n      >\n        {showCTA && (\n          <Suspense fallback={<></>}>\n            <WorkspaceCta\n              onDismiss={onCTADismiss}\n              canDismiss={displayNotebooks.length > 5}\n              onCreateNewNotebook={onCreateNotebook}\n            />\n          </Suspense>\n        )}\n        {displayNotebooks.length ? (\n          <div\n            css={{\n              alignSelf: 'start',\n              paddingTop: '2px',\n            }}\n          >\n            {searchResults.length === 0 && search !== '' && (\n              <div css={[listItemStyles, noSearchWarningStyles]}>\n                <span css={css({ width: 12, height: 12 })}>\n                  <Info />\n                </span>\n                <span>\n                  None of the {notebooks.length} matches your search, so we are\n                  showing all notebooks that match your filters.\n                </span>\n              </div>\n            )}\n            <ol className=\"notebookList\">\n              {displayNotebooks.map(({ item }, i) => {\n                const { id, ...notebook } = item;\n                return (\n                  <li\n                    key={i}\n                    css={[\n                      listItemStyles,\n                      {\n                        zIndex: openActionsId === id ? 1 : 0,\n                      },\n                    ]}\n                  >\n                    <NotebookListItem\n                      {...notebook}\n                      id={id}\n                      onMoveToSection={onMoveToSection}\n                      actionsOpen={openActionsId === id}\n                      toggleActionsOpen={() =>\n                        setOpenActionsId(openActionsId === id ? undefined : id)\n                      }\n                      otherWorkspaces={otherWorkspaces}\n                      onDuplicate={() => onDuplicate(id)}\n                      onDelete={() => onDelete(id)}\n                      onMoveToWorkspace={(workspaceId) =>\n                        onMoveToWorkspace(id, workspaceId)\n                      }\n                      onUnarchive={() => onUnarchive(id)}\n                      page={page}\n                      onExport={notebook.onExport}\n                      onExportBackups={notebook.onExportBackups}\n                      onChangeStatus={(st: TColorStatus) => {\n                        onChangeStatus(id, st);\n                      }}\n                    />\n                  </li>\n                );\n              })}\n            </ol>\n          </div>\n        ) : showCTA ? null : mainWorkspaceRoute ? (\n          <div css={emptywRapperStyles(showCTA)}>\n            <EmptyWorkspaceCta onCreateNotebook={onCreateNotebook} />\n          </div>\n        ) : (\n          <div css={emptywRapperStyles(showCTA)}>\n            <DashboardDialogCTA\n              icon={<Generic />}\n              primaryText={'No documents to list'}\n              secondaryText={\n                'When you create a document they will show up here'\n              }\n            />\n          </div>\n        )}\n      </DragAndDropImportNotebook>\n    </div>\n  );\n};\n\nexport const emptywRapperStyles = (showCTA: boolean) =>\n  css({\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    alignContent: 'space-around',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    height: showCTA ? `calc(100%-${dashboard.CTAHeight})` : '100%',\n  });\n\nconst notebookListWrapperStyles = css({\n  padding: `2px ${notebookList.horizontalPadding}`,\n  display: 'grid',\n  [smallScreenQuery]: {\n    paddingTop: '16px',\n  },\n});\n\nconst noSearchWarningStyles = css(p13Medium, {\n  padding: 16,\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  backgroundColor: cssVar('highlightColor'),\n  borderRadius: 8,\n  justifyContent: 'center',\n  alignItems: 'center',\n  gap: 8,\n});\n","import { NotebookList } from '@decipad/ui';\n\nexport default NotebookList;\n","import type { FC } from 'react';\nimport { Dot } from '..';\nimport { statusColors } from '../../utils';\nimport { ColorStatusProps } from './ColorStatusProps';\n\nexport const ColorStatusCircle: FC<ColorStatusProps> = ({\n  name = 'draft',\n}: ColorStatusProps) => {\n  return <Dot color={statusColors[name]} variant />;\n};\n","import { css, SerializedStyles } from '@emotion/react';\nimport { FC, ReactNode } from 'react';\nimport { cssVar, p12Medium } from '../../primitives';\n\ninterface FilterBubblesProps {\n  icon: ReactNode;\n  description: string;\n  iconStyles?: SerializedStyles;\n}\n\nexport const FilterBubbles = ({\n  icon,\n  iconStyles,\n  description,\n}: FilterBubblesProps): ReturnType<FC> => {\n  return (\n    <span css={tagStyle}>\n      <span css={[tagInlineStyles, iconStyles]}>{icon}</span>\n      <span css={[tagInlineStyles, tagInlineTextAdjustmentForFont]}>\n        {description}\n      </span>\n    </span>\n  );\n};\n\nconst tagStyle = css(p12Medium, {\n  border: `1px solid ${cssVar('strongerHighlightColor')}`,\n  padding: '2px 6px',\n  borderRadius: '4px',\n  display: 'flex',\n  gap: '4px',\n  maxWidth: 125,\n  alignItems: 'center',\n});\n\nconst tagInlineStyles = css({\n  minHeight: '12px',\n  minWidth: '12px',\n});\n\nconst tagInlineTextAdjustmentForFont = css({\n  transform: 'translateY(1px)',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n});\n","import { css } from '@emotion/react';\nimport {\n  black,\n  cssVar,\n  hexToOpaqueColor,\n  transparency,\n  weakOpacity,\n} from '../primitives';\n\nexport const mainIconButtonStyles = css({\n  display: 'inline-block',\n  borderRadius: '100vmax',\n\n  ':hover, :focus': {\n    backgroundColor: transparency(\n      hexToOpaqueColor(cssVar('strongerHighlightColor')) || black,\n      weakOpacity\n    ).rgba,\n  },\n});\n\nexport const roundedSquareStyles = css({\n  borderRadius: '6px',\n});\n","import { smallestDesktop, smallestMobile } from '../primitives';\nimport { viewportCalc } from '../utils';\n\nexport const topPadding = viewportCalc(\n  smallestMobile,\n  12,\n  smallestDesktop,\n  16,\n  'px',\n  'vmax'\n);\n\nexport const CTAHeight = 210;\n","export const DNDItemTypes = {\n  ICON: 'section',\n};\n"],"names":["dashboardDialogCTAStyles","DashboardDialogCTA","icon","primaryText","primaryActionLabel","primaryAction","primaryActionHref","secondaryText","secondaryActionLabel","secondaryAction","secondaryActionHref","css","h2","p14Regular","setCssVar","cssVar","gridRow","Button","type","href","onClick","acceptableFileTypes","maxFileSizeBytes","validateItemAndGetFile","item","file","getAsFile","console","warn","Error","includes","size","dropStyles","DragAndDropImportNotebook","onImport","noop","enabled","children","canDrop","isOver","drop","useDrop","accept","NativeTypes","FILE","data","items","Array","from","forEach","async","text","err","some","collect","monitor","ref","emptywRapperStyles","GenericTable","NotebookIcon","color","darkTheme","useThemeFromStore","baseSwatches","swatchesThemed","Icon","icons","notebookIconStyles","backgroundColor","hex","gridArea","height","width","cursor","display","placeItems","justifyContent","alignContent","gridTemplateColumns","borderRadius","boxShadow","transparency","offBlack","rgba","CustomDragLayer","itemType","isDragging","initialOffset","mousePosition","currentOffset","useDragLayer","getItem","getItemType","getInitialSourceClientOffset","getInitialClientOffset","getDifferenceFromInitialOffset","getDragLayerStyles","DNDItemTypes","style","opacity","padding","gap","zIndex","transform","title","renderItem","NotebookListItem","id","name","status","creationDate","isPublic","section","actionsOpen","toggleActionsOpen","onDuplicate","onMoveToWorkspace","onMoveToSection","onDelete","onExport","onExportBackups","onUnarchive","onChangeStatus","iconColor","page","otherWorkspaces","notebooks","notebook","$","feStatus","setFeStatus","useState","statusOpen","setStatusOpen","drag","preview","useDrag","end","dropResult","getDropResult","handlerId","getHandlerId","useEffect","document","createElement","captureDraggingState","className","wrapperStyles","notebookIconGrabbingStyles","anchorStyles","nameStyles","noNameNameStyles","notebookListTagsStyles","notebookListInlineTags","isFlagEnabled","MenuList","root","dropdown","align","side","sideOffset","open","onChangeOpen","trigger","FilterBubbles","description","ColorStatusNames","iconStyles","ColorStatusCircle","AvailableColorStatus","label","MenuItem","onSelect","selected","menuActionsStyles","mainIconButtonStyles","length","itemTrigger","TriggerMenuItem","map","workspace","creationDateStyles","calendarIconStyles","format","gridStyles","notebookList","whiteSpace","clipPath","transition","shortAnimationDuration","gridColumnEnd","alignSelf","overflowX","textOverflow","p14Medium","paddingLeft","smallestDesktop","gridTemplateRows","position","p12Medium","paddingTop","lineHeight","border","margin","listStyle","marginTop","x","y","iX","iY","jX","jY","xDelta","Math","round","yDelta","WebkitTransform","EmptyWorkspaceCta","onCreateNotebook","clientEvent","useContext","ClientEventsContext","onGalleryClick","useCallback","action","GenericCursorAdd","docs","searchQueryOptions","tokenize","keywords","normalizeSearchText","isArray","acceptableStatus","statuses","filter","st","TColorKeys","$or","acceptableVisibility","visibility","loadWorkspaceCta","WorkspaceCta","lazy","fuseOptions","minMatchCharLength","useExtendedSearch","keys","listItemStyles","showCTA","flexDirection","flexWrap","alignItems","dashboard","notebookListWrapperStyles","smallScreenQuery","noSearchWarningStyles","p13Medium","onCTADismiss","mainWorkspaceRoute","onPointerEnter","search","useQueryParam","withDefault","StringParam","ArrayParam","fuse","useMemo","Fuse","searchResults","include","exclude","query","parsedSearchQS","searchQuery","ExcText","parseSearchInput","params","$and","join","e","buildFuseQuery","flat","a","undefined","noNulls","displayNotebooks","filteredNotebooks","nt","n","openActionsId","setOpenActionsId","Suspense","fallback","onDismiss","canDismiss","onCreateNewNotebook","Info","i","workspaceId","Generic","statusColors","variant","tagStyle","tagInlineStyles","tagInlineTextAdjustmentForFont","maxWidth","hexToOpaqueColor","black","weakOpacity","roundedSquareStyles","topPadding","viewportCalc","smallestMobile","CTAHeight","ICON"],"sourceRoot":""}