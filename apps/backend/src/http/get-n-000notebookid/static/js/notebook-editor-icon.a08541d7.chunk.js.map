{"version":3,"file":"static/js/notebook-editor-icon.a08541d7.chunk.js","mappings":"+GAEA,Q,SAAyB,G,0JCYzB,MAAMA,GAAcC,EAAAA,EAAAA,KAAI,CACtBC,QAAS,OACTC,iBAAkB,OAClBC,oBAAoB,aAAD,OAAeC,EAAAA,GAA2B,OAC7DC,eAAgB,SAChBC,WAAY,SAEZC,aAAc,OACf,oCAEKC,GAAoBR,EAAAA,EAAAA,KAAI,CAC5BS,MAAO,OACPC,OAAQ,OACRT,QAAS,OACTU,WAAY,SACZJ,aAAc,MACdK,WAAW,oBAAD,OAAsBC,EAAAA,GAAsB,aACtDC,OAAQ,GACT,0CAEKC,GAAaf,EAAAA,EAAAA,KAAIgB,EAAAA,GAAY,KAC9BC,EAAAA,EAAAA,GAAU,mBAAoBC,EAAAA,GAAAA,KACjCT,MAAO,OACPC,OAAQ,OACRS,aAAc,aACdC,QAAS,OACV,mCAUYC,EAAa,IAIc,IAJb,SACzBC,GAAW,EAAK,KAChBC,KACGC,GACa,EAChB,MAAMC,EAAOC,EAAMH,IACZI,IAAaC,EAAAA,EAAAA,MACdC,GAAeC,EAAAA,EAAAA,IAAeH,GAE9BI,GACJ,kBACE,cAAY,gBACZ/B,IAAG,CACDQ,EACA,CACEwB,gBAAiBH,EAAaL,EAAMS,OAAOC,IAC3CC,OAAQb,EAAW,UAAY,WAC/B,oCACF,UAEF,eAAKtB,IAAKe,EAAW,UACnB,QAACU,EAAI,QAIX,OAAIH,GACK,eAAKtB,IAAKD,EAAY,SAAEgC,KAG/B,eAAK/B,IAAKD,EAAY,UACpB,QAAC,IAAW,IAAKyB,EAAOY,QAASL","sources":["../../../apps/frontend/src/notebooks/notebook/EditorIcon.tsx","../../ui/src/templates/EditorIcon/EditorIcon.tsx"],"sourcesContent":["import { EditorIcon } from '@decipad/ui';\n\nexport default EditorIcon;\n","import { useThemeFromStore } from '@decipad/react-contexts';\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\nimport * as icons from '../../icons';\nimport { IconPopover } from '../../molecules';\nimport {\n  black,\n  p14Regular,\n  setCssVar,\n  shortAnimationDuration,\n} from '../../primitives';\nimport { editorLayout } from '../../styles';\nimport { AvailableSwatchColor, swatchesThemed, UserIconKey } from '../../utils';\n\nconst blockStyles = css({\n  display: 'grid',\n  gridTemplateRows: '32px',\n  gridTemplateColumns: `min(100%, ${editorLayout.slimBlockWidth}px)`,\n  justifyContent: 'center',\n  alignItems: 'center',\n\n  borderRadius: '6px',\n});\n\nconst iconWrapperStyles = css({\n  width: '32px',\n  height: '32px',\n  display: 'grid',\n  placeItems: 'center',\n  borderRadius: '8px',\n  transition: `background-color ${shortAnimationDuration} ease-out`,\n  zIndex: 2,\n});\n\nconst iconStyles = css(p14Regular, {\n  ...setCssVar('currentTextColor', black.rgb),\n  width: '24px',\n  height: '24px',\n  mixBlendMode: 'luminosity',\n  opacity: '90%',\n});\n\ntype EditorIconProps = {\n  readonly icon: UserIconKey;\n  readonly color: AvailableSwatchColor;\n  readonly onChangeIcon?: (newIcon: UserIconKey) => void;\n  readonly onChangeColor?: (newColor: AvailableSwatchColor) => void;\n  readonly readOnly?: boolean;\n};\n\nexport const EditorIcon = ({\n  readOnly = false,\n  icon,\n  ...props\n}: EditorIconProps): ReturnType<FC> => {\n  const Icon = icons[icon];\n  const [darkTheme] = useThemeFromStore();\n  const baseSwatches = swatchesThemed(darkTheme);\n\n  const iconElement = (\n    <button\n      data-testid=\"notebook-icon\"\n      css={[\n        iconWrapperStyles,\n        {\n          backgroundColor: baseSwatches[props.color].rgb,\n          cursor: readOnly ? 'default' : 'pointer',\n        },\n      ]}\n    >\n      <div css={iconStyles}>\n        <Icon />\n      </div>\n    </button>\n  );\n  if (readOnly) {\n    return <div css={blockStyles}>{iconElement}</div>;\n  }\n  return (\n    <div css={blockStyles}>\n      <IconPopover {...props} trigger={iconElement} />\n    </div>\n  );\n};\n"],"names":["blockStyles","css","display","gridTemplateRows","gridTemplateColumns","editorLayout","justifyContent","alignItems","borderRadius","iconWrapperStyles","width","height","placeItems","transition","shortAnimationDuration","zIndex","iconStyles","p14Regular","setCssVar","black","mixBlendMode","opacity","EditorIcon","readOnly","icon","props","Icon","icons","darkTheme","useThemeFromStore","baseSwatches","swatchesThemed","iconElement","backgroundColor","color","rgb","cursor","trigger"],"sourceRoot":""}