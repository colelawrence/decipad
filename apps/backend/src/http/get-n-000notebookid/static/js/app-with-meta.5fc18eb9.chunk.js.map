{"version":3,"file":"static/js/app-with-meta.5fc18eb9.chunk.js","mappings":"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","sources":["../../ui/src/molecules/HelpButton/HelpButton.tsx","../../ui/src/organisms/HelpMenu/HelpMenu.tsx","../../ui/src/molecules/FeatureFlagsSwitcher/FeatureFlagsSwitcher.tsx","../../ui/src/templates/AccountSetup/AccountSetup.tsx","../../ui/src/pages/AccountSetupFlow/styles.ts","../../ui/src/pages/AccountSetupFlow/AccountSetupFlow1.tsx","../../ui/src/pages/AccountSetupFlow/useEnterListener.ts","../../ui/src/pages/AccountSetupFlow/AccountSetupFlow2.tsx","../../ui/src/pages/AccountSetupFlow/AccountSetupFlow3.tsx","../../../apps/frontend/src/Onboard/useRequiresOnboarding.ts","../../../apps/frontend/src/Onboard/RequireOnboard.tsx","../../../apps/frontend/src/Onboard/Onboard.tsx","../../../apps/frontend/src/url-compat/index.tsx","../../../apps/frontend/src/App.tsx","../../../apps/frontend/src/AppWithMeta.tsx","../../../apps/frontend/src/graphql/generated.ts","../../../apps/frontend/src/meta/ErrorPage.tsx","../../../apps/frontend/src/meta/ErrorBoundary.tsx","../../../apps/frontend/src/meta/Frame.tsx","../../../apps/frontend/src/meta/LazyRoute.tsx","../../ui/src/atoms/Toast/Toast.tsx","../../ui/src/templates/ToastDisplay/ToastDisplay.tsx","../../../apps/frontend/src/meta/providers/AnalyticsProvider.tsx","../../../apps/frontend/src/meta/providers/IntercomProvider.tsx","../../ui/src/atoms/UpdatePrompt/UpdatePrompt.tsx","../../../apps/frontend/src/meta/providers/UpdatesProvider.tsx","../../../apps/frontend/src/meta/providers/UpdatesHandler.tsx","../../../apps/frontend/src/meta/providers/index.tsx","../../ui/src/molecules/SignupConditionsContent/SignupConditionsContent.tsx","../../ui/src/molecules/AuthContent/AuthContent.tsx","../../ui/src/molecules/SignUpContent/SignUpContent.tsx","../../ui/src/pages/LoginPage/LoginPage.tsx","../../ui/src/pages/VerifyEmail/VerifyEmail.tsx","../../../apps/frontend/src/meta/authentication/Login.tsx","../../../apps/frontend/src/meta/authentication/RequireSession.tsx","../../../apps/frontend/src/meta/RouteEvents.tsx","../../../apps/frontend/src/meta/sentry.ts","../../react-utils/src/event-listener.ts","../../react-utils/src/state.ts","../../react-utils/src/delay-value.ts","../../react-utils/src/selectable-context.ts","../../react-utils/src/useActiveElement.ts","../../react-utils/src/use-behavior-subject.ts","../../react-utils/src/useCanUseDom.ts","../../routing/src/workspaces.ts","../../routing/src/shared/descriptive-id.ts","../../routing/src/shared/secret.ts","../../routing/src/notebooks.ts","../../routing/src/playground.ts","../../routing/src/onboard.ts","../../routing/src/docs.ts","../../routing/src/storybook.ts","../../routing/src/index.ts","../../support/src/isServerSideRendering.ts","../../support/src/isSupportedBrowser.ts","../../support/src/supports.ts","../../toast/src/toast.ts","../../ui/src/atoms/Button/Button.tsx","../../ui/src/atoms/InputField/InputField.tsx","../../ui/src/atoms/Link/Link.tsx","../../ui/src/atoms/MenuItem/MenuItem.tsx","../../ui/src/atoms/MenuSeparator/MenuSeparator.tsx","../../ui/src/atoms/TextareaField/TextareaField.tsx","../../ui/src/atoms/Tooltip/Tooltip.tsx","../../ui/src/atoms/Tooltip/useIsDragging.ts","../../ui/src/atoms/TriggerMenuItem/TriggerMenuItem.tsx","../../ui/src/icons/ArrowDiagonalTopRight/ArrowDiagonalTopRight.tsx","../../ui/src/icons/Caret/Caret.tsx","../../ui/src/icons/Chat/Chat.tsx","../../ui/src/icons/Date/Date.tsx","../../ui/src/icons/Deci/Deci.tsx","../../ui/src/icons/Discord/Discord.tsx","../../ui/src/icons/Docs/Docs.tsx","../../ui/src/icons/DragHandle/DragHandle.tsx","../../ui/src/icons/LightBulb/LightBulb.tsx","../../ui/src/icons/Loading/Loading.tsx","../../ui/src/icons/QuestionMark/QuestionMark.tsx","../../ui/src/icons/Sheet/Sheet.tsx","../../ui/src/icons/Success/Success.tsx","../../ui/src/icons/Warning/Warning.tsx","../../ui/src/molecules/MenuList/MenuList.tsx","../../ui/src/pages/ErrorPage/ErrorPage.tsx","../../ui/src/primitives/animation.ts","../../ui/src/primitives/viewport.ts","../../ui/src/styles/editor-layout.tsx","../../ui/src/utils/svg.ts","../../ui/src/styles/menu.ts","../../ui/src/utils/link.tsx","../../ui/src/utils/routing.ts","../../ui/src/utils/viewport.ts","../../ui/src/images/grid-tile.svg"],"sourcesContent":["import { css } from '@emotion/react';\nimport { useContext } from 'react';\nimport { ClientEventsContext } from '@decipad/client-events';\nimport { Tooltip } from '../../atoms';\nimport { QuestionMark } from '../../icons';\nimport { cssVar, p13Bold } from '../../primitives';\n\nconst styles = css(p13Bold, {\n  boxShadow: `0px 2px 24px -4px rgba(36, 36, 41, 0.06)`,\n  borderRadius: '6px',\n  padding: '0px 8px 0px 10px',\n\n  backgroundColor: cssVar('buttonHoverBackground'),\n  ':hover': {\n    backgroundColor: cssVar('buttonHoverBackgroundHover'),\n  },\n\n  fontWeight: 900,\n});\n\nconst innerStyles = css(p13Bold, {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: cssVar('normalTextColor'),\n\n  borderRadius: '6px',\n  height: '32px',\n  gap: '6px',\n\n  '> svg': {\n    width: '12px',\n    height: '12px',\n  },\n});\n\nexport const HelpButton = (): ReturnType<React.FC> => {\n  const clientEvent = useContext(ClientEventsContext);\n  return (\n    <span id=\"HelpButton\">\n      <Tooltip\n        trigger={\n          <button\n            css={styles}\n            onClick={() => {\n              clientEvent({\n                type: 'action',\n                action: 'help button clicked',\n              });\n            }}\n          >\n            <span css={innerStyles}>\n              <QuestionMark /> <span>Help</span>\n            </span>\n          </button>\n        }\n        align=\"end\"\n      >\n        Help and resources ✨\n      </Tooltip>\n    </span>\n  );\n};\n","import { ClientEventsContext } from '@decipad/client-events';\nimport { css, keyframes } from '@emotion/react';\nimport { ComponentProps, useCallback, useContext } from 'react';\nimport { Link, MenuItem, MenuSeparator } from '../../atoms';\nimport { HelpButton, MenuList } from '../../molecules';\nimport {\n  p12Regular,\n  p14Medium,\n  setCssVar,\n  transparency,\n  weakOpacity,\n  offBlack,\n} from '../../primitives';\nimport { hideOnPrint } from '../../styles/editor-layout';\nimport {\n  ArrowDiagonalTopRight,\n  Docs,\n  Discord,\n  Chat,\n  LightBulb,\n} from '../../icons';\n\nconst menuItemWrapperStyles = css({\n  display: 'flex',\n  flexDirection: 'row',\n  gap: '6px',\n  textDecoration: 'none',\n  minWidth: '170px',\n  padding: '0px',\n  alignItems: 'center',\n});\n\nconst menuItemSmallTextStyles = css(\n  p12Regular,\n  setCssVar('normalTextColor', 'weakerTextColor')\n);\n\nconst helpMenuStyles = css({\n  position: 'fixed',\n  bottom: '16px',\n  right: '16px',\n  zIndex: 2,\n});\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0 0 0 0 rgba(165, 254, 31, 0.6);\n  }\n  70% {\n    box-shadow: 0 0 0 4px rgba(165, 254, 31, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0px rgba(165, 254, 31, 0);\n  }\n`;\n\nconst statusIconStyles = css`\n  display: flex;\n  flex-direction: row;\n  margin-left: 5px;\n  margin-top: 6px;\n  margin-right: 3px;\n  width: 5px;\n  height: 5px;\n  background: #a5fe1f;\n  box-shadow: 0px 0px 0px 3px rgba(165, 254, 31, 0.2);\n  border-radius: 50%;\n  animation: ${pulse} 1.5s ease infinite;\n`;\nconst statusIcon = (\n  <div css={{ alignSelf: 'start', height: '28px' }}>\n    <div css={statusIconStyles}></div>\n  </div>\n);\n\nconst linkStyles = css({\n  textDecoration: 'none',\n});\n\ninterface CustomMenuItemProps\n  extends Omit<ComponentProps<typeof MenuItem>, 'children'> {\n  description?: string;\n  title: string;\n  to?: string;\n  chat?: boolean;\n  external?: boolean;\n  readonly onClick: () => void;\n}\n\nconst CustomMenuItem = ({\n  description,\n  onSelect,\n  title,\n  to,\n  chat,\n  external,\n  onClick,\n  icon,\n}: CustomMenuItemProps) => {\n  const followLink = useCallback(() => {\n    if (to) {\n      window.open(to, '_blank');\n    }\n  }, [to]);\n\n  const children = (\n    <div css={menuItemWrapperStyles}>\n      <span css={{ width: '20px' }}>{icon}</span>\n      <span css={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n        <span css={[p14Medium, { display: 'flex', gap: '8px' }]}>\n          {title}\n\n          {external && (\n            <span\n              css={{\n                display: 'flex',\n                alignItems: 'center',\n                float: 'right',\n                backgroundColor: transparency(offBlack, weakOpacity).rgba,\n                borderRadius: '4px',\n                height: '20px',\n                width: '20px',\n                padding: '5px',\n                marginLeft: 'auto',\n                opacity: '0',\n                '*:hover > &': {\n                  opacity: '1',\n                },\n                svg: {\n                  width: '16px',\n                  height: '16px',\n                },\n              }}\n            >\n              <ArrowDiagonalTopRight />\n            </span>\n          )}\n        </span>\n        {description !== undefined && (\n          <small css={menuItemSmallTextStyles}>{description}</small>\n        )}\n      </span>\n    </div>\n  );\n  return (\n    <div\n      css={\n        chat && {\n          '*:first-child': {\n            paddingTop: '0px',\n            paddingBottom: '0px',\n          },\n        }\n      }\n    >\n      <MenuItem onSelect={onSelect ?? followLink}>\n        {to !== undefined ? (\n          <Link css={linkStyles} href={to} onClick={onClick}>\n            {children}\n          </Link>\n        ) : (\n          children\n        )}\n      </MenuItem>\n    </div>\n  );\n};\n\ninterface HelpMenuProps {\n  readonly discordUrl?: string;\n  readonly docsUrl?: string;\n  readonly releaseUrl?: string;\n  readonly onSelectSupport?: () => void;\n  readonly onSelectFeedback?: () => void;\n}\n\nexport const HelpMenu = ({\n  discordUrl,\n  docsUrl,\n  releaseUrl,\n  onSelectSupport,\n  onSelectFeedback,\n}: HelpMenuProps) => {\n  const clientEvent = useContext(ClientEventsContext);\n  return (\n    <MenuList\n      root\n      dropdown\n      trigger={\n        <div css={[helpMenuStyles, hideOnPrint]}>\n          <HelpButton />\n        </div>\n      }\n      align=\"end\"\n      sideOffset={8}\n    >\n      <CustomMenuItem\n        onSelect={onSelectSupport}\n        title=\"Contact Live Support\"\n        description=\"Chat with our team\"\n        icon={statusIcon}\n        onClick={() => {\n          clientEvent({\n            type: 'action',\n            action: 'contact live support',\n          });\n        }}\n      />\n      <MenuSeparator />\n      <CustomMenuItem\n        to={releaseUrl}\n        external\n        title=\"What's New\"\n        icon={<LightBulb background />}\n        onClick={() =>\n          clientEvent({\n            type: 'action',\n            action: 'visit releases',\n          })\n        }\n      />\n      <CustomMenuItem\n        to={docsUrl}\n        external\n        title=\"Docs & Examples\"\n        icon={<Docs />}\n        onClick={() =>\n          clientEvent({\n            type: 'action',\n            action: 'visit docs',\n          })\n        }\n      />\n      <CustomMenuItem\n        onSelect={onSelectFeedback}\n        title=\"Share Feedback\"\n        icon={<Chat />}\n        onClick={() => {\n          clientEvent({\n            type: 'action',\n            action: 'send feedback',\n          });\n        }}\n      />\n      <CustomMenuItem\n        to={discordUrl}\n        external\n        title=\"Join Discord\"\n        icon={<Discord />}\n        onClick={() =>\n          clientEvent({\n            type: 'action',\n            action: 'join discord',\n          })\n        }\n      />\n    </MenuList>\n  );\n};\n","import {\n  availableFlags,\n  FEATURE_FLAGS_KEY,\n  Flags,\n  getLocalStorageOverrides,\n  isFlagEnabled,\n} from '@decipad/feature-flags';\nimport { useWindowListener } from '@decipad/react-utils';\nimport { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { useState } from 'react';\nimport { Button } from '../../atoms';\nimport { black, cssVar, h2, transparency } from '../../primitives';\n\nconst setItem =\n  'localStorage' in global\n    ? global.localStorage.setItem.bind(global.localStorage)\n    : noop;\n\nconst styles = css({\n  position: 'absolute',\n  zIndex: '9999',\n  display: 'flex',\n  flexDirection: 'column',\n\n  borderRadius: '0 16px 16px',\n  padding: '24px 40px',\n  boxShadow: `2px 2px 16px 0px ${transparency(black, 0.06).rgba}`,\n\n  background: cssVar('backgroundColor'),\n});\n\nconst flagsStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '8px',\n\n  margin: '16px 0 24px 0',\n});\n\nconst flagStyles = css({\n  display: 'flex',\n  gap: '4px',\n});\n\nexport const FeatureFlagsSwitcher = () => {\n  const [flags, setFlags] = useState<Flags>(getLocalStorageOverrides);\n\n  const [show, setShow] = useState<boolean>(false);\n  useWindowListener(\n    'keydown',\n    (event: KeyboardEvent) => {\n      if (\n        (event.metaKey || event.ctrlKey) &&\n        event.shiftKey &&\n        event.key?.toLowerCase() === 'f'\n      ) {\n        setShow((prevShow) => !prevShow);\n      }\n    },\n    true\n  );\n\n  return show ? (\n    <div css={styles}>\n      <h2 css={h2}>Feature Flags</h2>\n      <div css={flagsStyles}>\n        {availableFlags.map((flag) => (\n          <label key={flag} css={flagStyles}>\n            <input\n              type=\"checkbox\"\n              disabled={flag === 'FEATURE_FLAG_SWITCHER'} // So you cannot disable the switcher itself\n              checked={flags[flag] != null ? flags[flag] : isFlagEnabled(flag)}\n              onChange={(e) => {\n                setFlags((prevFlags) => ({\n                  ...prevFlags,\n                  [flag]: Boolean(e.target.checked),\n                }));\n              }}\n            />\n            {flag}\n          </label>\n        ))}\n      </div>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setItem(FEATURE_FLAGS_KEY, JSON.stringify(flags));\n          setFlags({});\n          window.location.reload();\n        }}\n      >\n        Save & Reload\n      </Button>\n    </div>\n  ) : null;\n};\n","import { css } from '@emotion/react';\nimport { ReactNode } from 'react';\nimport { cssVar, smallScreenQuery } from '../../primitives';\n\nconst styles = css({\n  display: 'grid',\n  gridTemplateColumns: '430px 1fr',\n\n  border: `1px solid ${cssVar('strongerHighlightColor')}`,\n  borderRadius: '32px',\n\n  height: '552px',\n  width: '100%',\n  maxWidth: '1020px',\n\n  overflow: 'hidden',\n\n  background: cssVar('highlightColor'),\n\n  [smallScreenQuery]: {\n    gridTemplateColumns: '1fr',\n  },\n});\n\nconst leftSideStyles = css({\n  padding: '82px 64px',\n\n  background: `linear-gradient(to top, ${cssVar(\n    'backgroundColor'\n  )}, transparent)`,\n});\nconst rightSideStyles = css({\n  background: `center right 5% / 90% 50% no-repeat radial-gradient(farthest-side, ${cssVar(\n    'strongHighlightColor'\n  )}, ${cssVar('highlightColor')})`,\n\n  [smallScreenQuery]: {\n    display: 'none',\n  },\n});\n\ninterface AccountSetupProps {\n  left: ReactNode;\n  right: ReactNode;\n}\n\nexport const AccountSetup = ({ left, right }: AccountSetupProps) => {\n  return (\n    <div css={styles}>\n      <div css={leftSideStyles}>{left}</div>\n      <div css={rightSideStyles}>{right}</div>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { gridTile } from '../../images';\nimport { cssVar } from '../../primitives';\n\nexport const backgroundStyles = css({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n\n  height: '100%',\n  width: '100%',\n  background: `repeat url(${gridTile}), ${cssVar('highlightColor')}`,\n});\n","import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport md5 from 'md5';\nimport Gravatar from 'react-gravatar';\nimport { Button } from '../../atoms';\nimport { Deci } from '../../icons';\nimport {\n  brand500,\n  cssVar,\n  h1,\n  p10Medium,\n  p14Medium,\n  p16Regular,\n  setCssVar,\n} from '../../primitives';\nimport { AccountSetup } from '../../templates';\nimport { backgroundStyles } from './styles';\nimport { useEnterListener } from './useEnterListener';\n\nconst groupStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '16px',\n\n  marginBottom: '57px',\n});\n\nconst inlineLogoStyles = css({\n  display: 'inline-flex',\n\n  width: '16px',\n  height: '16px',\n\n  verticalAlign: 'sub',\n});\n\nconst avatarStackStyles = css({\n  display: 'flex',\n\n  marginBottom: '24px',\n});\n\nconst avatarStyles = css({\n  border: `1.5px solid ${brand500.rgb}`,\n  borderRadius: '50%',\n\n  '& + &': {\n    marginLeft: '-6px',\n  },\n\n  height: '28px',\n  width: '28px',\n\n  backgroundColor: cssVar('backgroundColor'),\n});\n\nconst overflowAvatarStyles = css(\n  avatarStyles,\n  p10Medium,\n  setCssVar('currentTextColor', 'strongTextColor'),\n  {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    boxShadow: `-2px 0px 0px 0px ${cssVar('backgroundColor')}`,\n\n    borderColor: cssVar('strongHighlightColor'),\n\n    marginLeft: '-6px',\n  }\n);\n\nconst team = ['giulia@n1n.co', 'nuno@n1n.co', 'kelly@n1n.co', 'simao@n1n.co'];\n\ninterface AccountSetupFlow1Props {\n  next?: () => void;\n}\n\nexport const AccountSetupFlow1 = ({ next = noop }: AccountSetupFlow1Props) => {\n  useEnterListener(next);\n\n  return (\n    <div css={backgroundStyles}>\n      <AccountSetup\n        left={\n          <div>\n            <div css={groupStyles}>\n              <h2 css={h1}>Welcome to Decipad!</h2>\n              <p css={p16Regular}>\n                We’re excited to have you join our journey in building anything\n                you want using numbers.\n              </p>\n              <p css={p16Regular}>\n                This is the idea that brought our small team together and this\n                is just the beginning. We’ll be sharing more with you along the\n                way, hope to see you on Discord 👋\n              </p>\n            </div>\n            <div>\n              <p css={p14Medium}>\n                The Decipad Team{' '}\n                <span css={inlineLogoStyles}>\n                  <Deci />\n                </span>\n              </p>\n              <div css={avatarStackStyles}>\n                {team.map((email, i) => (\n                  <Gravatar\n                    key={i}\n                    css={avatarStyles}\n                    md5={md5(email, { encoding: 'binary' })}\n                    default={'blank'}\n                  />\n                ))}\n                <div css={overflowAvatarStyles}>+12</div>\n              </div>\n              <Button type=\"primaryBrand\" onClick={next}>\n                Get started\n              </Button>\n            </div>\n          </div>\n        }\n        right={<span />}\n      />\n    </div>\n  );\n};\n","/* istanbul ignore next */\nimport { useCallback, useEffect } from 'react';\n\nexport const useEnterListener = (callback: () => void) => {\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        callback();\n      }\n    },\n    [callback]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keypress', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, [handleKeyPress]);\n};\n","import { useThemeFromStore } from '@decipad/react-contexts';\nimport { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { FormEvent, useCallback } from 'react';\nimport { Button, InputField } from '../../atoms';\nimport { h1, p12Medium, p16Regular, cssVar, setCssVar } from '../../primitives';\nimport { AccountSetup } from '../../templates';\nimport modelDark from './model2_dark.png';\nimport modelLight from './model2_light.png';\nimport { backgroundStyles } from './styles';\nimport { Loading } from '../../icons';\n\nconst leftStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '24px',\n});\n\nconst groupStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '16px',\n});\n\nconst inputStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '8px',\n});\n\nconst bottomStyles = css({\n  display: 'flex',\n  gap: '8px',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n});\n\nconst stepStyles = css(\n  p12Medium,\n  setCssVar('currentTextColor', cssVar('weakerTextColor')),\n  {\n    flexGrow: 3,\n    display: 'flex',\n    justifyContent: 'end',\n  }\n);\n\nconst rightBgPosition = 'no-repeat bottom right/80%';\nconst rightStyles = css({\n  height: '100%',\n  width: '100%',\n  background: `${rightBgPosition} url('${modelLight}')`,\n});\n\nconst rightDarkBackgroundImage = css({\n  background: `${rightBgPosition} url('${modelDark}')`,\n});\n\ninterface AccountSetupFlow2Props {\n  name?: string;\n  username?: string;\n  isSubmitting?: boolean;\n  onChangeName?: (newName: string) => void;\n  onChangeUsername?: (newUsername: string) => void;\n  next?: () => void;\n  previous?: () => void;\n}\n\nconst LoadingDots = () => (\n  <Loading width=\"16px\" style={{ marginRight: '6px' }} />\n);\n\nexport const AccountSetupFlow2 = ({\n  name = '',\n  username = '',\n  isSubmitting = false,\n  onChangeName = noop,\n  onChangeUsername = noop,\n  next = noop,\n  previous = noop,\n}: AccountSetupFlow2Props) => {\n  const [isDarkMode] = useThemeFromStore();\n  const handleSubmit = useCallback(\n    (ev: FormEvent) => {\n      if (isSubmitting) return;\n\n      ev.preventDefault();\n      next();\n    },\n    [next, isSubmitting]\n  );\n\n  return (\n    <form css={backgroundStyles} onSubmit={handleSubmit}>\n      <AccountSetup\n        left={\n          <div css={leftStyles}>\n            <div css={groupStyles}>\n              <h2 css={h1}>Create a new Profile</h2>\n              <p css={p16Regular}>\n                This is the info people will see on your public and shared\n                notebooks. At Decipad we focus on modelling, publishing, and\n                also networking. So please tell us about yourself in a few\n                sentences\n              </p>\n            </div>\n            <div css={groupStyles}>\n              <label css={inputStyles}>\n                <span>To start, what's your name?</span>\n                <InputField\n                  autoFocus\n                  onChange={onChangeName}\n                  value={name}\n                  placeholder=\"Enter your full name\"\n                />\n              </label>\n              <label css={inputStyles}>\n                <span>Reserve your username</span>\n                <InputField\n                  tabIndex={0}\n                  onChange={onChangeUsername}\n                  value={username}\n                  placeholder=\"@username\"\n                />\n              </label>\n            </div>\n            <div css={bottomStyles}>\n              <Button submit type=\"primaryBrand\">\n                {isSubmitting ? <LoadingDots /> : null}\n                Continue\n              </Button>\n              <Button type=\"secondary\" onClick={previous} tabIndex={3}>\n                Back\n              </Button>\n              <span css={stepStyles}>01 of 02</span>\n            </div>\n          </div>\n        }\n        right={\n          <div\n            css={[rightStyles, isDarkMode && rightDarkBackgroundImage]}\n          ></div>\n        }\n      />\n    </form>\n  );\n};\n","import { docs } from '@decipad/routing';\nimport { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport md5 from 'md5';\nimport Gravatar from 'react-gravatar';\nimport { isEmpty } from 'lodash';\nimport { useThemeFromStore } from '@decipad/react-contexts';\nimport { FormEvent, useCallback } from 'react';\nimport { Button, TextareaField } from '../../atoms';\nimport {\n  h1,\n  p12Medium,\n  p16Regular,\n  cssVar,\n  setCssVar,\n  blue400,\n  p10Regular,\n  purple300,\n  p14Medium,\n  p14Regular,\n} from '../../primitives';\nimport { AccountSetup } from '../../templates';\nimport modelDark from './model3_dark.png';\nimport model3Light from './model3_light.png';\nimport { Date, Sheet, Loading } from '../../icons';\nimport { backgroundStyles } from './styles';\n\nconst leftStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '24px',\n});\n\nconst groupStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '24px',\n});\n\nconst compactGroupStyles = css(groupStyles, {\n  gap: '8px',\n});\n\nconst linkStyles = css({\n  textDecoration: 'underline',\n});\n\nconst blueLinkStyles = css({\n  color: blue400.rgb,\n});\n\nconst avatarStyles = css({\n  position: 'relative',\n\n  boxShadow: `0px 2px 16px -4px rgba(0, 0, 0, 0.06)`,\n  border: `1px solid ${cssVar('backgroundColor')}`,\n  borderRadius: '8px',\n\n  '& + &': {\n    marginLeft: '-6px',\n  },\n\n  height: '40px',\n  width: '40px',\n\n  overflow: 'hidden',\n\n  backgroundColor: purple300.rgb,\n  '::before': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n\n    fontSize: '16px',\n\n    content: 'attr(data-letter)',\n  },\n});\n\nconst gravatarStyles = css({\n  position: 'absolute',\n  zIndex: 2,\n});\n\nconst inputStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '8px',\n});\n\nconst termsAndPrivacyStyles = css(\n  p10Regular,\n  setCssVar('currentTextColor', cssVar('weakerTextColor')),\n  {}\n);\n\nconst bottomStyles = css({\n  display: 'flex',\n  gap: '8px',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n\n  marginTop: '6px',\n});\n\nconst stepStyles = css(\n  p12Medium,\n  setCssVar('currentTextColor', cssVar('weakerTextColor')),\n  {\n    flexGrow: 100,\n    display: 'flex',\n    justifyContent: 'end',\n  }\n);\n\nconst rightBgPosition = 'no-repeat bottom right/80%';\nconst rightStyles = css({\n  position: 'relative',\n\n  height: '100%',\n  width: '100%',\n  background: `${rightBgPosition} url('${model3Light}')`,\n});\n\nconst rightDarkBackgroundImage = css({\n  background: `${rightBgPosition} url('${modelDark}')`,\n});\n\nconst backCardStyles = css({\n  position: 'absolute',\n  top: '176px',\n  left: '10%',\n\n  borderRadius: '16px',\n  padding: '16px',\n  height: '146px',\n  width: '100%',\n  maxWidth: '375px',\n\n  display: 'flex',\n  flexDirection: 'column',\n\n  background: cssVar('highlightColor'),\n});\n\nconst nameStyles = css(\n  p14Medium,\n  setCssVar('currentTextColor', cssVar('strongTextColor'))\n);\n\nconst usernameStyles = css(\n  p14Regular,\n  setCssVar('currentTextColor', cssVar('weakTextColor'))\n);\n\nconst backCardAvatarStyles = css({\n  flexGrow: 100,\n  display: 'flex',\n  alignItems: 'end',\n});\n\nconst frontCardStyles = css({\n  position: 'absolute',\n  top: '226px',\n  left: '45%',\n\n  borderRadius: '16px',\n  padding: '16px',\n  height: '186px',\n  width: '100%',\n  maxWidth: '269px',\n\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '6px',\n\n  background: cssVar('highlightColor'),\n});\n\nconst descriptionStyles = css(\n  p14Regular,\n  setCssVar('currentTextColor', cssVar('weakTextColor')),\n  {\n    border: `1px dashed ${cssVar('weakerTextColor')}`,\n    borderRadius: '8px',\n    padding: '8px 12px',\n    minHeight: '80px',\n  }\n);\n\nconst placeholderStyles = css(\n  descriptionStyles,\n  setCssVar('currentTextColor', cssVar('weakerTextColor'))\n);\n\nconst frontCardBottomStyles = css(\n  p14Regular,\n  setCssVar('currentTextColor', cssVar('normalTextColor')),\n  {\n    display: 'flex',\n    gap: '8px',\n  }\n);\n\nconst iconWrapperStyles = css({\n  display: 'flex',\n  height: '16px',\n  width: '16px',\n});\n\ninterface AccountSetupFlow2Props {\n  email?: string;\n  name?: string;\n  username?: string;\n  description?: string;\n  isSubmitting?: boolean;\n  onChangeDescription?: (newDescription: string) => void;\n  finish?: () => void;\n  previous?: () => void;\n}\n\nconst LoadingDots = () => (\n  <Loading width=\"16px\" style={{ marginRight: '6px' }} />\n);\n\nexport const AccountSetupFlow3 = ({\n  email = 'decipad@decipad.com',\n  name = 'Your Name',\n  username = '@username',\n  description = '',\n  isSubmitting = false,\n  onChangeDescription = noop,\n  finish = noop,\n  previous = noop,\n}: AccountSetupFlow2Props) => {\n  const [isDarkMode] = useThemeFromStore();\n  const handleSubmit = useCallback(\n    (ev: FormEvent) => {\n      if (isSubmitting) return;\n\n      ev.preventDefault();\n      finish();\n    },\n    [finish, isSubmitting]\n  );\n\n  const placeholder = 'Share something about yourself';\n  const avatar = (\n    <div css={avatarStyles} data-letter={email[0].toUpperCase()}>\n      <Gravatar\n        css={gravatarStyles}\n        md5={md5(email, { encoding: 'binary' })}\n        default={'blank'}\n      />\n    </div>\n  );\n  return (\n    <form css={backgroundStyles} onSubmit={handleSubmit}>\n      <AccountSetup\n        left={\n          <div css={leftStyles}>\n            <div css={groupStyles}>\n              <h2 css={h1}>Create a new Profile</h2>\n              <p css={p16Regular}>\n                Add your account image. If you use{' '}\n                <a\n                  css={blueLinkStyles}\n                  href=\"https://pt.gravatar.com/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  gravatar.com\n                </a>\n                , we'll take your image from there, or you can upload it here\n              </p>\n              {avatar}\n            </div>\n            <div css={compactGroupStyles}>\n              <label css={inputStyles}>\n                <span>Tell us about yourself in a few sentences</span>\n                <TextareaField\n                  autoFocus\n                  onChange={onChangeDescription}\n                  value={description}\n                  placeholder={placeholder}\n                  onKeyDown={(ev) => {\n                    if (ev.key === 'Enter') {\n                      handleSubmit(ev);\n                    }\n                  }}\n                />\n              </label>\n              <p css={termsAndPrivacyStyles}>\n                By continuing, you agreed to our{' '}\n                <a\n                  css={linkStyles}\n                  href={docs({}).page({ name: 'terms' }).$}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  tabIndex={-1}\n                >\n                  Terms of Service\n                </a>{' '}\n                &{' '}\n                <a\n                  css={linkStyles}\n                  href={docs({}).page({ name: 'privacy' }).$}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  tabIndex={-1}\n                >\n                  Privacy policy\n                </a>\n              </p>\n            </div>\n            <div css={bottomStyles}>\n              <Button submit type=\"primaryBrand\">\n                {isSubmitting && <LoadingDots />}\n                Create Profile\n              </Button>\n              <Button type=\"secondary\" onClick={previous}>\n                Back\n              </Button>\n              <span css={stepStyles}>02 of 02</span>\n            </div>\n          </div>\n        }\n        right={\n          <div css={[rightStyles, isDarkMode && rightDarkBackgroundImage]}>\n            <div css={backCardStyles}>\n              <p css={nameStyles}>Data story by: {name}</p>\n              <p css={usernameStyles}>{username}</p>\n              <div css={backCardAvatarStyles}>{avatar}</div>\n            </div>\n            <div css={frontCardStyles}>\n              <p css={nameStyles}>About author</p>\n              <div\n                css={\n                  isEmpty(description) ? placeholderStyles : descriptionStyles\n                }\n              >\n                {isEmpty(description) ? placeholder : description}\n              </div>\n              <div css={frontCardBottomStyles}>\n                <span css={iconWrapperStyles}>\n                  <Sheet />\n                </span>{' '}\n                Your published notebooks\n              </div>\n              <div css={frontCardBottomStyles}>\n                <span css={iconWrapperStyles}>\n                  <Date />\n                </span>{' '}\n                Member since today 🎉\n              </div>\n            </div>\n          </div>\n        }\n      />\n    </form>\n  );\n};\n","import { isFlagEnabled } from '@decipad/feature-flags';\nimport { useSession } from 'next-auth/react';\nimport { useUserQuery } from '../graphql';\n\nexport const useRequiresOnboarding = () => {\n  const session = useSession();\n  const [userResult] = useUserQuery();\n  return (\n    isFlagEnabled('ONBOARDING_ACCOUNT_SETUP') &&\n    session.status === 'authenticated' &&\n    userResult.data &&\n    !userResult.data.self?.onboarded\n  );\n};\n","import { onboard } from '@decipad/routing';\nimport { FC, ReactNode, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { BehaviorSubject } from 'rxjs';\nimport { useRequiresOnboarding } from './useRequiresOnboarding';\n\ninterface RequireOnboardProps {\n  readonly children: ReactNode;\n}\n\nexport const PreOnboardingPath = new BehaviorSubject('/');\n\nexport const RequireOnboard: FC<RequireOnboardProps> = ({ children }) => {\n  const requiresOnboarding = useRequiresOnboarding();\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    PreOnboardingPath.next(pathname);\n  }, [pathname]);\n\n  return requiresOnboarding && !navigator.webdriver ? (\n    <Navigate replace to={onboard({}).$} />\n  ) : (\n    <>{children}</>\n  );\n};\n","import { onboard } from '@decipad/routing';\nimport {\n  AccountSetupFlow1,\n  AccountSetupFlow2,\n  AccountSetupFlow3,\n  ErrorPage,\n} from '@decipad/ui';\nimport { useSession } from 'next-auth/react';\nimport { useCallback, useState } from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { useToast } from '@decipad/toast';\nimport { isEmpty } from 'lodash';\nimport { LazyRoute } from '../meta';\nimport {\n  useUpdateUserMutation,\n  useSetUsernameMutation,\n  useUserQuery,\n} from '../graphql';\nimport { useRequiresOnboarding } from './useRequiresOnboarding';\nimport { PreOnboardingPath } from './RequireOnboard';\n\nexport const Onboard = () => {\n  const navigate = useNavigate();\n  const session = useSession();\n  const toast = useToast();\n\n  const [userResult] = useUserQuery();\n\n  const updateUser = useUpdateUserMutation()[1];\n  const updateUsername = useSetUsernameMutation()[1];\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Keep retrieved values as local state so they can be edited and submitted\n  // only when navigating to the next step.\n  const [name, setName] = useState(() => {\n    const userEmail = session.data?.user.email;\n    const fullName = userResult.data?.self?.name;\n    const hasValidName = fullName && fullName !== userEmail;\n\n    return hasValidName ? fullName : '';\n  });\n  const [username, setUsername] = useState(session.data?.user.username ?? '');\n  const [description, setDescription] = useState(\n    userResult.data?.self?.description ?? ''\n  );\n\n  // Browser navigation between steps.\n  const step = useParams()['*'];\n  const next = useCallback(() => {\n    navigate(onboard({}).step({ step: Number(step) + 1 }).$);\n  }, [navigate, step]);\n  const previous = useCallback(() => {\n    navigate(onboard({}).step({ step: Number(step) - 1 }).$);\n  }, [navigate, step]);\n\n  const requiresOnboarding = useRequiresOnboarding();\n  const redirectPath = PreOnboardingPath.value;\n\n  if (!requiresOnboarding) {\n    return <Navigate replace to={redirectPath} />;\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <LazyRoute>\n            <Navigate replace to={onboard({}).step({ step: 1 }).$} />\n          </LazyRoute>\n        }\n      />\n      <Route\n        path=\"/1\"\n        element={\n          <LazyRoute>\n            <AccountSetupFlow1 next={next} />\n          </LazyRoute>\n        }\n      />\n      <Route\n        path=\"/2\"\n        element={\n          <LazyRoute>\n            <AccountSetupFlow2\n              name={name}\n              username={username}\n              onChangeName={setName}\n              onChangeUsername={setUsername}\n              isSubmitting={isSubmitting}\n              next={() => {\n                setIsSubmitting(true);\n\n                Promise.allSettled([\n                  updateUser({ props: { name } }),\n                  updateUsername({ props: { username } }),\n                ])\n                  .then(([userUpdate, usernameUpdate]) => {\n                    if (\n                      userUpdate.status === 'rejected' ||\n                      (userUpdate.status === 'fulfilled' &&\n                        userUpdate.value.error)\n                    ) {\n                      const error =\n                        userUpdate.status === 'rejected'\n                          ? userUpdate.reason\n                          : userUpdate.value.error;\n                      console.error('Failed to update name. Error:', error);\n                      toast('Could not change your name', 'error');\n                    } else if (\n                      usernameUpdate.status === 'rejected' ||\n                      (usernameUpdate.status === 'fulfilled' &&\n                        usernameUpdate.value.error)\n                    ) {\n                      const error =\n                        usernameUpdate.status === 'rejected'\n                          ? usernameUpdate.reason\n                          : usernameUpdate.value.error;\n                      console.error('Failed to update username. Error:', error);\n                      toast(\n                        usernameUpdate.status === 'rejected' ||\n                          isEmpty(error.graphQLErrors)\n                          ? 'Could not change your username'\n                          : error.graphQLErrors.toString(), // this are created by us, not generic error messages.\n                        'error'\n                      );\n                    } else {\n                      next();\n                    }\n                  })\n                  .finally(() => {\n                    setIsSubmitting(false);\n                  });\n              }}\n              previous={previous}\n            />\n          </LazyRoute>\n        }\n      />\n      <Route\n        path=\"/3\"\n        element={\n          <LazyRoute>\n            <AccountSetupFlow3\n              email={session.data?.user.email}\n              name={name}\n              username={username}\n              description={description}\n              isSubmitting={isSubmitting}\n              onChangeDescription={setDescription}\n              finish={() => {\n                setIsSubmitting(true);\n\n                Promise.allSettled([\n                  updateUser({ props: { description, onboarded: true } }),\n                ])\n                  .then(([result]) => {\n                    if (\n                      result.status === 'rejected' ||\n                      (result.status === 'fulfilled' && result.value.error)\n                    ) {\n                      const error =\n                        result.status === 'rejected'\n                          ? result.reason\n                          : result.value.error;\n                      console.error(\n                        'Failed to onboard the user. Error:',\n                        error\n                      );\n                      toast(\n                        'Could not get you fully onboarded for now',\n                        'error'\n                      );\n                    } else {\n                      navigate(redirectPath);\n                    }\n                  })\n                  .finally(() => {\n                    setIsSubmitting(false);\n                  });\n              }}\n              previous={previous}\n            />\n          </LazyRoute>\n        }\n      />\n      <Route path=\"*\" element={<ErrorPage Heading=\"h1\" wellKnown=\"404\" />} />\n    </Routes>\n  );\n};\n","import { notebooks, workspaces } from '@decipad/routing';\nimport { FC } from 'react';\nimport { Navigate, useParams, useSearchParams } from 'react-router-dom';\n\nexport const NotebookRedirect: FC = () => {\n  const { '*': subpath } = useParams();\n  const [searchParams] = useSearchParams();\n  if (!subpath) {\n    throw new Error('Missing subpath for redirect');\n  }\n  return (\n    <Navigate\n      replace\n      to={`${notebooks({}).$}/${subpath}?${searchParams.toString()}`}\n    />\n  );\n};\n\nexport const WorkspaceRedirect: FC = () => {\n  const { '*': subpath } = useParams();\n  const [searchParams] = useSearchParams();\n  if (!subpath) {\n    throw new Error('Missing subpath for redirect');\n  }\n  return (\n    <Navigate\n      replace\n      to={`${workspaces({}).$}/${subpath}?${searchParams.toString()}`}\n    />\n  );\n};\n","import { isFlagEnabled } from '@decipad/feature-flags';\nimport { useCanUseDom } from '@decipad/react-utils';\nimport {\n  docs,\n  notebooks,\n  onboard,\n  playground,\n  workspaces,\n} from '@decipad/routing';\nimport { FeatureFlagsSwitcher, HelpMenu } from '@decipad/ui';\nimport { useSession } from 'next-auth/react';\nimport { FC, lazy, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { useIntercom } from 'react-use-intercom';\nimport { ErrorPage, LazyRoute, RequireSession, RouteEvents } from './meta';\nimport { Onboard } from './Onboard/Onboard';\nimport { RequireOnboard } from './Onboard/RequireOnboard';\nimport { NotebookRedirect, WorkspaceRedirect } from './url-compat';\n\nexport const loadWorkspaces = () =>\n  import(/* webpackChunkName: \"workspaces\" */ './workspaces/Workspaces');\nconst Workspaces = lazy(loadWorkspaces);\nexport const loadNotebooks = () =>\n  import(/* webpackChunkName: \"notebooks\" */ './notebooks/Notebooks');\nconst Notebooks = lazy(loadNotebooks);\nexport const loadPlayground = () =>\n  import(/* webpackChunkName: \"playground\" */ './playground/Playground');\nconst Playground = lazy(loadPlayground);\n\nexport const App: FC = () => {\n  const { show, showNewMessage } = useIntercom();\n  const session = useSession();\n\n  const showFeedback = useCallback(() => {\n    show();\n    showNewMessage();\n  }, [show, showNewMessage]);\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Navigate replace to={workspaces({}).$} />} />\n        <Route\n          path=\"/workspaces/:workspaceId/pads/*\"\n          element={<NotebookRedirect />}\n        />\n        <Route path=\"/workspaces/*\" element={<WorkspaceRedirect />} />\n        <Route\n          path={`${workspaces.template}/*`}\n          element={\n            <RequireSession>\n              <RouteEvents category=\"workspace\">\n                <LazyRoute>\n                  <RequireOnboard>\n                    <Workspaces />\n                  </RequireOnboard>\n                </LazyRoute>\n              </RouteEvents>\n            </RequireSession>\n          }\n        />\n        <Route\n          path={`${notebooks.template}/*`}\n          element={\n            <LazyRoute>\n              <RequireOnboard>\n                <Notebooks />\n              </RequireOnboard>\n            </LazyRoute>\n          }\n        />\n\n        <Route\n          path={playground.template}\n          element={\n            <RouteEvents category=\"playground\">\n              <LazyRoute>\n                <Playground />\n              </LazyRoute>\n            </RouteEvents>\n          }\n        />\n\n        <Route\n          path={`${onboard.template}/*`}\n          element={\n            <RequireSession>\n              <LazyRoute>\n                <Onboard />\n              </LazyRoute>\n            </RequireSession>\n          }\n        />\n        <Route path=\"*\" element={<ErrorPage Heading=\"h1\" wellKnown=\"404\" />} />\n      </Routes>\n\n      {session.status === 'authenticated' && (\n        <HelpMenu\n          discordUrl=\"https://discord.gg/CUtKEd3rBn\"\n          docsUrl={docs({}).$}\n          releaseUrl={docs({}).page({ name: 'releases' }).$}\n          onSelectSupport={show}\n          onSelectFeedback={showFeedback}\n        />\n      )}\n      {/* Feature flagging the feature flag switcher makes it unreacheable in\n      production, even if you press the shortcut, unless you know how */}\n      {useCanUseDom() &&\n        isFlagEnabled('FEATURE_FLAG_SWITCHER') &&\n        createPortal(<FeatureFlagsSwitcher />, document.body)}\n    </>\n  );\n};\n","import { LoadingLogo } from '@decipad/ui';\nimport { App } from './App';\nimport { Frame, initSentry, Providers } from './meta';\n\ninitSentry();\n\nconst AppWithMeta: React.FC = () => (\n  <Providers>\n    <Frame\n      Heading=\"h1\"\n      title=\"Decipad — Make sense of numbers\"\n      suspenseFallback={<LoadingLogo />}\n    >\n      <App />\n    </Frame>\n  </Providers>\n);\nexport default AppWithMeta;\n","import { Resolver as GraphCacheResolver, UpdateResolver as GraphCacheUpdateResolver, OptimisticMutationResolver as GraphCacheOptimisticMutationResolver, StorageAdapter as GraphCacheStorageAdapter } from '@urql/exchange-graphcache';\nimport { IntrospectionData } from '@urql/exchange-graphcache/dist/types/ast';\nimport gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  DateTime: any;\n};\n\nexport type Attachment = {\n  __typename?: 'Attachment';\n  createdAt?: Maybe<Scalars['DateTime']>;\n  fileName: Scalars['String'];\n  fileSize: Scalars['Int'];\n  fileType: Scalars['String'];\n  id: Scalars['ID'];\n  pad?: Maybe<Pad>;\n  uploadedBy?: Maybe<User>;\n  url: Scalars['String'];\n};\n\nexport type CreateAttachmentForm = {\n  __typename?: 'CreateAttachmentForm';\n  fields: Array<KeyValue>;\n  handle: Scalars['String'];\n  url: Scalars['String'];\n};\n\nexport type ExternalDataSource = {\n  __typename?: 'ExternalDataSource';\n  access: ExternalDataSourceAccess;\n  authUrl: Scalars['String'];\n  dataUrl: Scalars['String'];\n  externalId: Scalars['String'];\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  padId: Scalars['ID'];\n  provider: ExternalProvider;\n};\n\nexport type ExternalDataSourceAccess = {\n  __typename?: 'ExternalDataSourceAccess';\n  roles: Array<RoleAccess>;\n  users: Array<UserAccess>;\n};\n\nexport type ExternalDataSourceCreateInput = {\n  externalId: Scalars['String'];\n  name: Scalars['String'];\n  padId: Scalars['ID'];\n  provider: ExternalProvider;\n};\n\nexport type ExternalDataSourceUpdateInput = {\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type ExternalKey = {\n  __typename?: 'ExternalKey';\n  createdAt: Scalars['DateTime'];\n  expiresAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  lastError?: Maybe<Scalars['String']>;\n  lastUsedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport enum ExternalProvider {\n  Googlesheets = 'googlesheets',\n  Testdatasource = 'testdatasource'\n}\n\nexport type GoalFulfilmentInput = {\n  goalName: Scalars['String'];\n};\n\nexport type KeyValue = {\n  __typename?: 'KeyValue';\n  key: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  addNotebookToSection?: Maybe<Scalars['Boolean']>;\n  addSectionToWorkspace?: Maybe<Section>;\n  addTagToPad?: Maybe<Scalars['Boolean']>;\n  attachFileToPad?: Maybe<Attachment>;\n  createExternalDataSource?: Maybe<ExternalDataSource>;\n  createOrUpdateSnapshot: Scalars['Boolean'];\n  createPad: Pad;\n  createRole: Role;\n  createUserViaMagicLink: User;\n  createWorkspace: Workspace;\n  doNothing?: Maybe<Scalars['Boolean']>;\n  duplicatePad: Pad;\n  fulfilGoal: Scalars['Boolean'];\n  getCreateAttachmentForm: CreateAttachmentForm;\n  importPad: Pad;\n  inviteUserToRole: Array<RoleInvitation>;\n  movePad: Pad;\n  pretendUser?: Maybe<Scalars['Boolean']>;\n  removeAttachmentFromPad?: Maybe<Scalars['Boolean']>;\n  removeExternalDataSource?: Maybe<Scalars['Boolean']>;\n  removePad?: Maybe<Scalars['Boolean']>;\n  removeRole?: Maybe<Scalars['Boolean']>;\n  removeSectionFromWorkspace?: Maybe<Scalars['Boolean']>;\n  removeSelfFromRole?: Maybe<Scalars['Boolean']>;\n  removeTagFromPad?: Maybe<Scalars['Boolean']>;\n  removeUserFromRole?: Maybe<Scalars['Boolean']>;\n  removeWorkspace?: Maybe<Scalars['Boolean']>;\n  resendRegistrationMagicLinkEmail?: Maybe<Scalars['Boolean']>;\n  setPadPublic: Scalars['Boolean'];\n  setUsername: Scalars['Boolean'];\n  shareExternalDataSourceWithEmail?: Maybe<ExternalDataSource>;\n  shareExternalDataSourceWithRole?: Maybe<Scalars['Boolean']>;\n  shareExternalDataSourceWithUser?: Maybe<Scalars['Boolean']>;\n  sharePadWithEmail: Pad;\n  sharePadWithRole?: Maybe<Scalars['Boolean']>;\n  sharePadWithSecret: Scalars['String'];\n  sharePadWithUser?: Maybe<Scalars['Boolean']>;\n  unshareExternalDataSourceWithRole?: Maybe<Scalars['Boolean']>;\n  unshareExternalDataSourceWithUser: ExternalDataSource;\n  unshareNotebookWithSecret?: Maybe<Scalars['Boolean']>;\n  unsharePadWithRole?: Maybe<Scalars['Boolean']>;\n  unsharePadWithUser?: Maybe<Pad>;\n  updateExternalDataSource?: Maybe<ExternalDataSource>;\n  updatePad: Pad;\n  updateSectionInWorkspace?: Maybe<Scalars['Boolean']>;\n  updateSelf: User;\n  updateWorkspace: Workspace;\n};\n\n\nexport type MutationAddNotebookToSectionArgs = {\n  notebookId: Scalars['ID'];\n  sectionId: Scalars['ID'];\n};\n\n\nexport type MutationAddSectionToWorkspaceArgs = {\n  section: SectionInput;\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type MutationAddTagToPadArgs = {\n  padId: Scalars['ID'];\n  tag: Scalars['String'];\n};\n\n\nexport type MutationAttachFileToPadArgs = {\n  handle: Scalars['ID'];\n};\n\n\nexport type MutationCreateExternalDataSourceArgs = {\n  dataSource: ExternalDataSourceCreateInput;\n};\n\n\nexport type MutationCreateOrUpdateSnapshotArgs = {\n  notebookId: Scalars['ID'];\n  snapshotName: Scalars['String'];\n};\n\n\nexport type MutationCreatePadArgs = {\n  pad: PadInput;\n  sectionId?: InputMaybe<Scalars['ID']>;\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type MutationCreateRoleArgs = {\n  role?: InputMaybe<RoleInput>;\n};\n\n\nexport type MutationCreateUserViaMagicLinkArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationCreateWorkspaceArgs = {\n  workspace: WorkspaceInput;\n};\n\n\nexport type MutationDuplicatePadArgs = {\n  document?: InputMaybe<Scalars['String']>;\n  id: Scalars['ID'];\n  targetWorkspace: Scalars['ID'];\n};\n\n\nexport type MutationFulfilGoalArgs = {\n  props: GoalFulfilmentInput;\n};\n\n\nexport type MutationGetCreateAttachmentFormArgs = {\n  fileName: Scalars['String'];\n  fileType: Scalars['String'];\n  padId: Scalars['ID'];\n};\n\n\nexport type MutationImportPadArgs = {\n  source: Scalars['String'];\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type MutationInviteUserToRoleArgs = {\n  permission: PermissionType;\n  roleId: Scalars['ID'];\n  userId: Scalars['ID'];\n};\n\n\nexport type MutationMovePadArgs = {\n  id: Scalars['ID'];\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type MutationPretendUserArgs = {\n  userId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveAttachmentFromPadArgs = {\n  attachmentId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveExternalDataSourceArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationRemovePadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationRemoveRoleArgs = {\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveSectionFromWorkspaceArgs = {\n  sectionId: Scalars['ID'];\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveSelfFromRoleArgs = {\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveTagFromPadArgs = {\n  padId: Scalars['ID'];\n  tag: Scalars['String'];\n};\n\n\nexport type MutationRemoveUserFromRoleArgs = {\n  roleId: Scalars['ID'];\n  userId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveWorkspaceArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationResendRegistrationMagicLinkEmailArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationSetPadPublicArgs = {\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n};\n\n\nexport type MutationSetUsernameArgs = {\n  props: UsernameInput;\n};\n\n\nexport type MutationShareExternalDataSourceWithEmailArgs = {\n  email?: InputMaybe<Scalars['String']>;\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n};\n\n\nexport type MutationShareExternalDataSourceWithRoleArgs = {\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationShareExternalDataSourceWithUserArgs = {\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n  userId: Scalars['ID'];\n};\n\n\nexport type MutationSharePadWithEmailArgs = {\n  canComment: Scalars['Boolean'];\n  email: Scalars['String'];\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n};\n\n\nexport type MutationSharePadWithRoleArgs = {\n  canComment: Scalars['Boolean'];\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationSharePadWithSecretArgs = {\n  canComment: Scalars['Boolean'];\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n};\n\n\nexport type MutationSharePadWithUserArgs = {\n  canComment: Scalars['Boolean'];\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n  userId: Scalars['ID'];\n};\n\n\nexport type MutationUnshareExternalDataSourceWithRoleArgs = {\n  id: Scalars['ID'];\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationUnshareExternalDataSourceWithUserArgs = {\n  id: Scalars['ID'];\n  userId: Scalars['ID'];\n};\n\n\nexport type MutationUnshareNotebookWithSecretArgs = {\n  id: Scalars['ID'];\n  secret: Scalars['String'];\n};\n\n\nexport type MutationUnsharePadWithRoleArgs = {\n  id: Scalars['ID'];\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationUnsharePadWithUserArgs = {\n  id: Scalars['ID'];\n  userId: Scalars['ID'];\n};\n\n\nexport type MutationUpdateExternalDataSourceArgs = {\n  dataSource: ExternalDataSourceUpdateInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdatePadArgs = {\n  id: Scalars['ID'];\n  pad: PadInput;\n};\n\n\nexport type MutationUpdateSectionInWorkspaceArgs = {\n  section: SectionInput;\n  sectionId: Scalars['ID'];\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type MutationUpdateSelfArgs = {\n  props: UserInput;\n};\n\n\nexport type MutationUpdateWorkspaceArgs = {\n  id: Scalars['ID'];\n  workspace: WorkspaceInput;\n};\n\nexport type Pad = {\n  __typename?: 'Pad';\n  access: PadAccess;\n  archived?: Maybe<Scalars['Boolean']>;\n  attachments: Array<Attachment>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  icon?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  initialState?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  myPermissionType?: Maybe<PermissionType>;\n  name: Scalars['String'];\n  padConnectionParams: PadConnectionParams;\n  section?: Maybe<Section>;\n  snapshots: Array<PadSnapshot>;\n  status?: Maybe<Scalars['String']>;\n  tags: Array<Scalars['String']>;\n  workspace?: Maybe<Workspace>;\n};\n\nexport type PadAccess = {\n  __typename?: 'PadAccess';\n  roles?: Maybe<Array<RoleAccess>>;\n  secrets?: Maybe<Array<SecretAccess>>;\n  users?: Maybe<Array<UserAccess>>;\n};\n\nexport type PadChanges = {\n  __typename?: 'PadChanges';\n  added: Array<Pad>;\n  removed: Array<Scalars['ID']>;\n  updated: Array<Pad>;\n};\n\nexport type PadConnectionParams = {\n  __typename?: 'PadConnectionParams';\n  token: Scalars['String'];\n  url: Scalars['String'];\n};\n\nexport type PadInput = {\n  archived?: InputMaybe<Scalars['Boolean']>;\n  icon?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  section_id?: InputMaybe<Scalars['String']>;\n  status?: InputMaybe<Scalars['String']>;\n  tags?: InputMaybe<Array<Scalars['String']>>;\n};\n\nexport type PadSnapshot = {\n  __typename?: 'PadSnapshot';\n  createdAt?: Maybe<Scalars['DateTime']>;\n  data?: Maybe<Scalars['String']>;\n  snapshotName: Scalars['String'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  version?: Maybe<Scalars['String']>;\n};\n\nexport type PageInput = {\n  cursor?: InputMaybe<Scalars['String']>;\n  maxItems: Scalars['Int'];\n};\n\nexport type Pageable = ExternalDataSource | SharedResource;\n\nexport type PagedPadResult = {\n  __typename?: 'PagedPadResult';\n  count: Scalars['Int'];\n  cursor?: Maybe<Scalars['String']>;\n  hasNextPage: Scalars['Boolean'];\n  items: Array<Pad>;\n};\n\nexport type PagedResult = {\n  __typename?: 'PagedResult';\n  count: Scalars['Int'];\n  cursor?: Maybe<Scalars['String']>;\n  hasNextPage: Scalars['Boolean'];\n  items: Array<Pageable>;\n};\n\nexport type Permission = {\n  __typename?: 'Permission';\n  canComment: Scalars['Boolean'];\n  createdAt?: Maybe<Scalars['DateTime']>;\n  givenBy: User;\n  id: Scalars['ID'];\n  resource: Scalars['String'];\n  type: PermissionType;\n  user: User;\n};\n\nexport enum PermissionType {\n  Admin = 'ADMIN',\n  Read = 'READ',\n  Write = 'WRITE'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  getExternalDataSource: ExternalDataSource;\n  getExternalDataSources: PagedResult;\n  getPadById?: Maybe<Pad>;\n  getWorkspaceById?: Maybe<Workspace>;\n  me?: Maybe<User>;\n  pads: PagedPadResult;\n  padsByTag: PagedPadResult;\n  padsSharedWithMe: PagedPadResult;\n  sections: Array<Section>;\n  self?: Maybe<User>;\n  selfFulfilledGoals: Array<Scalars['String']>;\n  tags: Array<Scalars['String']>;\n  version?: Maybe<Scalars['String']>;\n  workspaces: Array<Workspace>;\n};\n\n\nexport type QueryGetExternalDataSourceArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryGetExternalDataSourcesArgs = {\n  page: PageInput;\n};\n\n\nexport type QueryGetPadByIdArgs = {\n  id: Scalars['ID'];\n  snapshotName?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryGetWorkspaceByIdArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPadsArgs = {\n  page: PageInput;\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type QueryPadsByTagArgs = {\n  page: PageInput;\n  tag: Scalars['String'];\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type QueryPadsSharedWithMeArgs = {\n  page: PageInput;\n};\n\n\nexport type QuerySectionsArgs = {\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type QueryTagsArgs = {\n  workspaceId: Scalars['ID'];\n};\n\nexport type Role = {\n  __typename?: 'Role';\n  createdAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  users: Array<User>;\n  workspace: Workspace;\n};\n\nexport type RoleAccess = {\n  __typename?: 'RoleAccess';\n  canComment: Scalars['Boolean'];\n  permission: PermissionType;\n  role: Role;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  workspaceId: Scalars['ID'];\n};\n\nexport type RoleInvitation = {\n  __typename?: 'RoleInvitation';\n  expires_at?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  role: Role;\n  user: User;\n};\n\nexport type SecretAccess = {\n  __typename?: 'SecretAccess';\n  canComment: Scalars['Boolean'];\n  permission: PermissionType;\n  secret: Scalars['String'];\n};\n\nexport type Section = {\n  __typename?: 'Section';\n  color: Scalars['String'];\n  createdAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  pads: Array<Pad>;\n  workspace_id: Scalars['ID'];\n};\n\nexport type SectionChanges = {\n  __typename?: 'SectionChanges';\n  added: Array<Section>;\n  removed: Array<Scalars['ID']>;\n  updated: Array<Section>;\n};\n\nexport type SectionInput = {\n  color?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type ShareInvitation = {\n  __typename?: 'ShareInvitation';\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type SharedResource = {\n  __typename?: 'SharedResource';\n  canComment?: Maybe<Scalars['Boolean']>;\n  permission: PermissionType;\n  resource: Scalars['String'];\n};\n\nexport type SharedWith = {\n  __typename?: 'SharedWith';\n  pendingInvitations: Array<ShareInvitation>;\n  roles: Array<SharedWithRole>;\n  users: Array<SharedWithUser>;\n};\n\nexport type SharedWithRole = {\n  __typename?: 'SharedWithRole';\n  canComment: Scalars['Boolean'];\n  permissionType: PermissionType;\n  role: Role;\n};\n\nexport type SharedWithUser = {\n  __typename?: 'SharedWithUser';\n  canComment: Scalars['Boolean'];\n  permissionType: PermissionType;\n  user: User;\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  hello?: Maybe<Scalars['String']>;\n  padsChanged: PadChanges;\n  sectionsChanged: SectionChanges;\n  subscribeToNothing?: Maybe<Scalars['Boolean']>;\n  tagsChanged: TagChanges;\n  workspacesChanged: WorkspacesChanges;\n};\n\n\nexport type SubscriptionPadsChangedArgs = {\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type SubscriptionSectionsChangedArgs = {\n  workspaceId: Scalars['ID'];\n};\n\n\nexport type SubscriptionTagsChangedArgs = {\n  workspaceId: Scalars['ID'];\n};\n\nexport type TagChanges = {\n  __typename?: 'TagChanges';\n  added: Array<TagRecord>;\n  removed: Array<TagRecord>;\n};\n\nexport type TagRecord = {\n  __typename?: 'TagRecord';\n  tag: Scalars['String'];\n  workspaceId: Scalars['ID'];\n};\n\nexport type User = {\n  __typename?: 'User';\n  createdAt?: Maybe<Scalars['DateTime']>;\n  description?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  hideChecklist?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  onboarded?: Maybe<Scalars['Boolean']>;\n  username?: Maybe<Scalars['String']>;\n};\n\nexport type UserAccess = {\n  __typename?: 'UserAccess';\n  canComment: Scalars['Boolean'];\n  permission: PermissionType;\n  user: User;\n};\n\nexport type UserInput = {\n  description?: InputMaybe<Scalars['String']>;\n  hideChecklist?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n  onboarded?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type UsernameInput = {\n  username: Scalars['String'];\n};\n\nexport type Workspace = {\n  __typename?: 'Workspace';\n  createdAt?: Maybe<Scalars['DateTime']>;\n  id: Scalars['ID'];\n  isPublic?: Maybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n  pads: PagedPadResult;\n  roles: Array<Role>;\n  sections: Array<Section>;\n};\n\n\nexport type WorkspacePadsArgs = {\n  page: PageInput;\n};\n\nexport type WorkspaceInput = {\n  name: Scalars['String'];\n};\n\nexport type WorkspacesChanges = {\n  __typename?: 'WorkspacesChanges';\n  added: Array<Workspace>;\n  removed: Array<Scalars['ID']>;\n  updated: Array<Workspace>;\n};\n\nexport type AttachFileToNotebookMutationVariables = Exact<{\n  handle: Scalars['ID'];\n}>;\n\n\nexport type AttachFileToNotebookMutation = { __typename?: 'Mutation', attachFileToPad?: { __typename?: 'Attachment', url: string } | null };\n\nexport type CreateNotebookMutationVariables = Exact<{\n  workspaceId: Scalars['ID'];\n  name: Scalars['String'];\n  sectionId?: InputMaybe<Scalars['ID']>;\n}>;\n\n\nexport type CreateNotebookMutation = { __typename?: 'Mutation', createPad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }>, section?: { __typename?: 'Section', id: string, name: string } | null } };\n\nexport type CreateSectionMutationVariables = Exact<{\n  workspaceId: Scalars['ID'];\n  name: Scalars['String'];\n  color: Scalars['String'];\n}>;\n\n\nexport type CreateSectionMutation = { __typename?: 'Mutation', addSectionToWorkspace?: { __typename?: 'Section', id: string, name: string, color: string, createdAt?: any | null } | null };\n\nexport type CreateOrUpdateNotebookSnapshotMutationVariables = Exact<{\n  notebookId: Scalars['ID'];\n  snapshotName: Scalars['String'];\n}>;\n\n\nexport type CreateOrUpdateNotebookSnapshotMutation = { __typename?: 'Mutation', createOrUpdateSnapshot: boolean };\n\nexport type CreateWorkspaceMutationVariables = Exact<{\n  name: Scalars['String'];\n}>;\n\n\nexport type CreateWorkspaceMutation = { __typename?: 'Mutation', createWorkspace: { __typename?: 'Workspace', id: string, name: string, pads: { __typename?: 'PagedPadResult', items: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> }, sections: Array<{ __typename?: 'Section', id: string, name: string, color: string, createdAt?: any | null, pads: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> }> } };\n\nexport type DeleteNotebookMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteNotebookMutation = { __typename?: 'Mutation', removePad?: boolean | null };\n\nexport type DeleteSectionMutationVariables = Exact<{\n  workspaceId: Scalars['ID'];\n  sectionId: Scalars['ID'];\n}>;\n\n\nexport type DeleteSectionMutation = { __typename?: 'Mutation', removeSectionFromWorkspace?: boolean | null };\n\nexport type DeleteWorkspaceMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteWorkspaceMutation = { __typename?: 'Mutation', removeWorkspace?: boolean | null };\n\nexport type DuplicateNotebookMutationVariables = Exact<{\n  id: Scalars['ID'];\n  targetWorkspace: Scalars['ID'];\n  document?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type DuplicateNotebookMutation = { __typename?: 'Mutation', duplicatePad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }>, section?: { __typename?: 'Section', id: string, name: string } | null } };\n\nexport type FulfilGoalMutationVariables = Exact<{\n  props: GoalFulfilmentInput;\n}>;\n\n\nexport type FulfilGoalMutation = { __typename?: 'Mutation', fulfilGoal: boolean };\n\nexport type GetCreateAttachmentFormMutationVariables = Exact<{\n  notebookId: Scalars['ID'];\n  fileName: Scalars['String'];\n  fileType: Scalars['String'];\n}>;\n\n\nexport type GetCreateAttachmentFormMutation = { __typename?: 'Mutation', getCreateAttachmentForm: { __typename?: 'CreateAttachmentForm', url: string, handle: string, fields: Array<{ __typename?: 'KeyValue', key: string, value: string }> } };\n\nexport type ImportNotebookMutationVariables = Exact<{\n  workspaceId: Scalars['ID'];\n  source: Scalars['String'];\n}>;\n\n\nexport type ImportNotebookMutation = { __typename?: 'Mutation', importPad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }>, section?: { __typename?: 'Section', id: string, name: string } | null } };\n\nexport type MoveNotebookMutationVariables = Exact<{\n  id: Scalars['ID'];\n  workspaceId: Scalars['ID'];\n}>;\n\n\nexport type MoveNotebookMutation = { __typename?: 'Mutation', movePad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }>, section?: { __typename?: 'Section', id: string, name: string } | null } };\n\nexport type RenameNotebookMutationVariables = Exact<{\n  id: Scalars['ID'];\n  name: Scalars['String'];\n}>;\n\n\nexport type RenameNotebookMutation = { __typename?: 'Mutation', updatePad: { __typename?: 'Pad', id: string, name: string } };\n\nexport type RenameWorkspaceMutationVariables = Exact<{\n  id: Scalars['ID'];\n  name: Scalars['String'];\n}>;\n\n\nexport type RenameWorkspaceMutation = { __typename?: 'Mutation', updateWorkspace: { __typename?: 'Workspace', id: string, name: string } };\n\nexport type SetNotebookPublicMutationVariables = Exact<{\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n}>;\n\n\nexport type SetNotebookPublicMutation = { __typename?: 'Mutation', setPadPublic: boolean };\n\nexport type SetUsernameMutationVariables = Exact<{\n  props: UsernameInput;\n}>;\n\n\nexport type SetUsernameMutation = { __typename?: 'Mutation', setUsername: boolean };\n\nexport type ShareNotebookWithSecretMutationVariables = Exact<{\n  id: Scalars['ID'];\n  permissionType: PermissionType;\n  canComment: Scalars['Boolean'];\n}>;\n\n\nexport type ShareNotebookWithSecretMutation = { __typename?: 'Mutation', sharePadWithSecret: string };\n\nexport type SharePadWithEmailMutationVariables = Exact<{\n  padId: Scalars['ID'];\n  email: Scalars['String'];\n  permissionType: PermissionType;\n  canComment: Scalars['Boolean'];\n}>;\n\n\nexport type SharePadWithEmailMutation = { __typename?: 'Mutation', sharePadWithEmail: { __typename?: 'Pad', id: string, name: string, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, canComment: boolean, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null } } };\n\nexport type UnarchiveNotebookMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type UnarchiveNotebookMutation = { __typename?: 'Mutation', updatePad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }> } };\n\nexport type UnshareNotebookWithSecretMutationVariables = Exact<{\n  id: Scalars['ID'];\n  secret: Scalars['String'];\n}>;\n\n\nexport type UnshareNotebookWithSecretMutation = { __typename?: 'Mutation', unshareNotebookWithSecret?: boolean | null };\n\nexport type UnsharePadWithUserMutationVariables = Exact<{\n  padId: Scalars['ID'];\n  userId: Scalars['ID'];\n}>;\n\n\nexport type UnsharePadWithUserMutation = { __typename?: 'Mutation', unsharePadWithUser?: { __typename?: 'Pad', id: string, name: string, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, canComment: boolean, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null } } | null };\n\nexport type UpdateNotebookArchiveMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type UpdateNotebookArchiveMutation = { __typename?: 'Mutation', updatePad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }> } };\n\nexport type UpdateNotebookIconMutationVariables = Exact<{\n  id: Scalars['ID'];\n  icon: Scalars['String'];\n}>;\n\n\nexport type UpdateNotebookIconMutation = { __typename?: 'Mutation', updatePad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }> } };\n\nexport type UpdateNotebookStatusMutationVariables = Exact<{\n  id: Scalars['ID'];\n  status: Scalars['String'];\n}>;\n\n\nexport type UpdateNotebookStatusMutation = { __typename?: 'Mutation', updatePad: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }> } };\n\nexport type UpdateSectionMutationVariables = Exact<{\n  workspaceId: Scalars['ID'];\n  sectionId: Scalars['ID'];\n  name: Scalars['String'];\n  color: Scalars['String'];\n}>;\n\n\nexport type UpdateSectionMutation = { __typename?: 'Mutation', updateSectionInWorkspace?: boolean | null };\n\nexport type UpdateSectionAddNotebookMutationVariables = Exact<{\n  sectionId: Scalars['ID'];\n  notebookId: Scalars['ID'];\n}>;\n\n\nexport type UpdateSectionAddNotebookMutation = { __typename?: 'Mutation', addNotebookToSection?: boolean | null };\n\nexport type UpdateUserMutationVariables = Exact<{\n  props: UserInput;\n}>;\n\n\nexport type UpdateUserMutation = { __typename?: 'Mutation', updateSelf: { __typename?: 'User', name: string, description?: string | null, hideChecklist?: boolean | null, onboarded?: boolean | null } };\n\nexport type NotebookSnapshotFragment = { __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null };\n\nexport type CollaboratorFragment = { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null };\n\nexport type EditorNotebookFragment = { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }> };\n\nexport type GetNotebookByIdQueryVariables = Exact<{\n  id: Scalars['ID'];\n  snapshotName?: InputMaybe<Scalars['String']>;\n}>;\n\n\nexport type GetNotebookByIdQuery = { __typename?: 'Query', getPadById?: { __typename?: 'Pad', id: string, name: string, myPermissionType?: PermissionType | null, icon?: string | null, isPublic?: boolean | null, initialState?: string | null, access: { __typename?: 'PadAccess', users?: Array<{ __typename?: 'UserAccess', permission: PermissionType, user: { __typename?: 'User', id: string, image?: string | null, name: string, email?: string | null, username?: string | null, onboarded?: boolean | null } }> | null }, workspace?: { __typename?: 'Workspace', id: string, name: string } | null, padConnectionParams: { __typename?: 'PadConnectionParams', url: string, token: string }, snapshots: Array<{ __typename?: 'PadSnapshot', snapshotName: string, createdAt?: any | null, updatedAt?: any | null, data?: string | null, version?: string | null }> } | null };\n\nexport type UserQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserQuery = { __typename?: 'Query', selfFulfilledGoals: Array<string>, self?: { __typename?: 'User', name: string, username?: string | null, description?: string | null, hideChecklist?: boolean | null, onboarded?: boolean | null } | null };\n\nexport type WorkspaceSwitcherWorkspaceFragment = { __typename?: 'Workspace', id: string, name: string };\n\nexport type GetWorkspacesIDsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetWorkspacesIDsQuery = { __typename?: 'Query', workspaces: Array<{ __typename?: 'Workspace', id: string, name: string }> };\n\nexport type WorkspaceNotebookFragment = { __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null };\n\nexport type WorkspaceSectionFragment = { __typename?: 'Section', id: string, name: string, color: string, createdAt?: any | null, pads: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> };\n\nexport type DashboardWorkspaceFragment = { __typename?: 'Workspace', id: string, name: string, pads: { __typename?: 'PagedPadResult', items: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> }, sections: Array<{ __typename?: 'Section', id: string, name: string, color: string, createdAt?: any | null, pads: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> }> };\n\nexport type GetWorkspacesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetWorkspacesQuery = { __typename?: 'Query', workspaces: Array<{ __typename?: 'Workspace', id: string, name: string, pads: { __typename?: 'PagedPadResult', items: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> }, sections: Array<{ __typename?: 'Section', id: string, name: string, color: string, createdAt?: any | null, pads: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> }> }>, padsSharedWithMe: { __typename?: 'PagedPadResult', items: Array<{ __typename?: 'Pad', id: string, name: string, icon?: string | null, status?: string | null, createdAt?: any | null, archived?: boolean | null, isPublic?: boolean | null, section?: { __typename?: 'Section', id: string, name: string } | null }> } };\n\nexport const CollaboratorFragmentDoc = gql`\n    fragment Collaborator on User {\n  id\n  image\n  name\n  email\n  username\n  onboarded\n}\n    `;\nexport const NotebookSnapshotFragmentDoc = gql`\n    fragment NotebookSnapshot on PadSnapshot {\n  snapshotName\n  createdAt\n  updatedAt\n  data\n  version\n}\n    `;\nexport const EditorNotebookFragmentDoc = gql`\n    fragment EditorNotebook on Pad {\n  id\n  name\n  myPermissionType\n  icon\n  isPublic\n  access {\n    users {\n      user {\n        ...Collaborator\n      }\n      permission\n    }\n  }\n  workspace {\n    id\n    name\n  }\n  padConnectionParams {\n    url\n    token\n  }\n  initialState\n  snapshots {\n    ...NotebookSnapshot\n  }\n}\n    ${CollaboratorFragmentDoc}\n${NotebookSnapshotFragmentDoc}`;\nexport const WorkspaceSwitcherWorkspaceFragmentDoc = gql`\n    fragment WorkspaceSwitcherWorkspace on Workspace {\n  id\n  name\n}\n    `;\nexport const WorkspaceNotebookFragmentDoc = gql`\n    fragment WorkspaceNotebook on Pad {\n  id\n  name\n  icon\n  status\n  createdAt\n  archived\n  isPublic\n  section {\n    id\n    name\n  }\n}\n    `;\nexport const WorkspaceSectionFragmentDoc = gql`\n    fragment WorkspaceSection on Section {\n  id\n  name\n  color\n  pads {\n    ...WorkspaceNotebook\n  }\n  createdAt\n}\n    ${WorkspaceNotebookFragmentDoc}`;\nexport const DashboardWorkspaceFragmentDoc = gql`\n    fragment DashboardWorkspace on Workspace {\n  id\n  name\n  pads(page: {maxItems: 10000}) {\n    items {\n      ...WorkspaceNotebook\n    }\n  }\n  sections {\n    ...WorkspaceSection\n  }\n}\n    ${WorkspaceNotebookFragmentDoc}\n${WorkspaceSectionFragmentDoc}`;\nexport const AttachFileToNotebookDocument = gql`\n    mutation AttachFileToNotebook($handle: ID!) {\n  attachFileToPad(handle: $handle) {\n    url\n  }\n}\n    `;\n\nexport function useAttachFileToNotebookMutation() {\n  return Urql.useMutation<AttachFileToNotebookMutation, AttachFileToNotebookMutationVariables>(AttachFileToNotebookDocument);\n};\nexport const CreateNotebookDocument = gql`\n    mutation CreateNotebook($workspaceId: ID!, $name: String!, $sectionId: ID) {\n  createPad(workspaceId: $workspaceId, pad: {name: $name}, sectionId: $sectionId) {\n    ...EditorNotebook\n    ...WorkspaceNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}\n${WorkspaceNotebookFragmentDoc}`;\n\nexport function useCreateNotebookMutation() {\n  return Urql.useMutation<CreateNotebookMutation, CreateNotebookMutationVariables>(CreateNotebookDocument);\n};\nexport const CreateSectionDocument = gql`\n    mutation CreateSection($workspaceId: ID!, $name: String!, $color: String!) {\n  addSectionToWorkspace(\n    workspaceId: $workspaceId\n    section: {name: $name, color: $color}\n  ) {\n    id\n    name\n    color\n    createdAt\n  }\n}\n    `;\n\nexport function useCreateSectionMutation() {\n  return Urql.useMutation<CreateSectionMutation, CreateSectionMutationVariables>(CreateSectionDocument);\n};\nexport const CreateOrUpdateNotebookSnapshotDocument = gql`\n    mutation CreateOrUpdateNotebookSnapshot($notebookId: ID!, $snapshotName: String!) {\n  createOrUpdateSnapshot(notebookId: $notebookId, snapshotName: $snapshotName)\n}\n    `;\n\nexport function useCreateOrUpdateNotebookSnapshotMutation() {\n  return Urql.useMutation<CreateOrUpdateNotebookSnapshotMutation, CreateOrUpdateNotebookSnapshotMutationVariables>(CreateOrUpdateNotebookSnapshotDocument);\n};\nexport const CreateWorkspaceDocument = gql`\n    mutation CreateWorkspace($name: String!) {\n  createWorkspace(workspace: {name: $name}) {\n    ...DashboardWorkspace\n  }\n}\n    ${DashboardWorkspaceFragmentDoc}`;\n\nexport function useCreateWorkspaceMutation() {\n  return Urql.useMutation<CreateWorkspaceMutation, CreateWorkspaceMutationVariables>(CreateWorkspaceDocument);\n};\nexport const DeleteNotebookDocument = gql`\n    mutation DeleteNotebook($id: ID!) {\n  removePad(id: $id)\n}\n    `;\n\nexport function useDeleteNotebookMutation() {\n  return Urql.useMutation<DeleteNotebookMutation, DeleteNotebookMutationVariables>(DeleteNotebookDocument);\n};\nexport const DeleteSectionDocument = gql`\n    mutation DeleteSection($workspaceId: ID!, $sectionId: ID!) {\n  removeSectionFromWorkspace(workspaceId: $workspaceId, sectionId: $sectionId)\n}\n    `;\n\nexport function useDeleteSectionMutation() {\n  return Urql.useMutation<DeleteSectionMutation, DeleteSectionMutationVariables>(DeleteSectionDocument);\n};\nexport const DeleteWorkspaceDocument = gql`\n    mutation DeleteWorkspace($id: ID!) {\n  removeWorkspace(id: $id)\n}\n    `;\n\nexport function useDeleteWorkspaceMutation() {\n  return Urql.useMutation<DeleteWorkspaceMutation, DeleteWorkspaceMutationVariables>(DeleteWorkspaceDocument);\n};\nexport const DuplicateNotebookDocument = gql`\n    mutation DuplicateNotebook($id: ID!, $targetWorkspace: ID!, $document: String) {\n  duplicatePad(id: $id, targetWorkspace: $targetWorkspace, document: $document) {\n    ...EditorNotebook\n    ...WorkspaceNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}\n${WorkspaceNotebookFragmentDoc}`;\n\nexport function useDuplicateNotebookMutation() {\n  return Urql.useMutation<DuplicateNotebookMutation, DuplicateNotebookMutationVariables>(DuplicateNotebookDocument);\n};\nexport const FulfilGoalDocument = gql`\n    mutation FulfilGoal($props: GoalFulfilmentInput!) {\n  fulfilGoal(props: $props)\n}\n    `;\n\nexport function useFulfilGoalMutation() {\n  return Urql.useMutation<FulfilGoalMutation, FulfilGoalMutationVariables>(FulfilGoalDocument);\n};\nexport const GetCreateAttachmentFormDocument = gql`\n    mutation GetCreateAttachmentForm($notebookId: ID!, $fileName: String!, $fileType: String!) {\n  getCreateAttachmentForm(\n    padId: $notebookId\n    fileName: $fileName\n    fileType: $fileType\n  ) {\n    url\n    handle\n    fields {\n      key\n      value\n    }\n  }\n}\n    `;\n\nexport function useGetCreateAttachmentFormMutation() {\n  return Urql.useMutation<GetCreateAttachmentFormMutation, GetCreateAttachmentFormMutationVariables>(GetCreateAttachmentFormDocument);\n};\nexport const ImportNotebookDocument = gql`\n    mutation ImportNotebook($workspaceId: ID!, $source: String!) {\n  importPad(workspaceId: $workspaceId, source: $source) {\n    ...EditorNotebook\n    ...WorkspaceNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}\n${WorkspaceNotebookFragmentDoc}`;\n\nexport function useImportNotebookMutation() {\n  return Urql.useMutation<ImportNotebookMutation, ImportNotebookMutationVariables>(ImportNotebookDocument);\n};\nexport const MoveNotebookDocument = gql`\n    mutation MoveNotebook($id: ID!, $workspaceId: ID!) {\n  movePad(id: $id, workspaceId: $workspaceId) {\n    ...EditorNotebook\n    ...WorkspaceNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}\n${WorkspaceNotebookFragmentDoc}`;\n\nexport function useMoveNotebookMutation() {\n  return Urql.useMutation<MoveNotebookMutation, MoveNotebookMutationVariables>(MoveNotebookDocument);\n};\nexport const RenameNotebookDocument = gql`\n    mutation RenameNotebook($id: ID!, $name: String!) {\n  updatePad(id: $id, pad: {name: $name}) {\n    id\n    name\n  }\n}\n    `;\n\nexport function useRenameNotebookMutation() {\n  return Urql.useMutation<RenameNotebookMutation, RenameNotebookMutationVariables>(RenameNotebookDocument);\n};\nexport const RenameWorkspaceDocument = gql`\n    mutation RenameWorkspace($id: ID!, $name: String!) {\n  updateWorkspace(id: $id, workspace: {name: $name}) {\n    id\n    name\n  }\n}\n    `;\n\nexport function useRenameWorkspaceMutation() {\n  return Urql.useMutation<RenameWorkspaceMutation, RenameWorkspaceMutationVariables>(RenameWorkspaceDocument);\n};\nexport const SetNotebookPublicDocument = gql`\n    mutation setNotebookPublic($id: ID!, $isPublic: Boolean!) {\n  setPadPublic(id: $id, isPublic: $isPublic)\n}\n    `;\n\nexport function useSetNotebookPublicMutation() {\n  return Urql.useMutation<SetNotebookPublicMutation, SetNotebookPublicMutationVariables>(SetNotebookPublicDocument);\n};\nexport const SetUsernameDocument = gql`\n    mutation SetUsername($props: UsernameInput!) {\n  setUsername(props: $props)\n}\n    `;\n\nexport function useSetUsernameMutation() {\n  return Urql.useMutation<SetUsernameMutation, SetUsernameMutationVariables>(SetUsernameDocument);\n};\nexport const ShareNotebookWithSecretDocument = gql`\n    mutation ShareNotebookWithSecret($id: ID!, $permissionType: PermissionType!, $canComment: Boolean!) {\n  sharePadWithSecret(\n    id: $id\n    permissionType: $permissionType\n    canComment: $canComment\n  )\n}\n    `;\n\nexport function useShareNotebookWithSecretMutation() {\n  return Urql.useMutation<ShareNotebookWithSecretMutation, ShareNotebookWithSecretMutationVariables>(ShareNotebookWithSecretDocument);\n};\nexport const SharePadWithEmailDocument = gql`\n    mutation sharePadWithEmail($padId: ID!, $email: String!, $permissionType: PermissionType!, $canComment: Boolean!) {\n  sharePadWithEmail(\n    id: $padId\n    email: $email\n    permissionType: $permissionType\n    canComment: $canComment\n  ) {\n    id\n    name\n    access {\n      users {\n        permission\n        canComment\n        user {\n          ...Collaborator\n        }\n      }\n    }\n  }\n}\n    ${CollaboratorFragmentDoc}`;\n\nexport function useSharePadWithEmailMutation() {\n  return Urql.useMutation<SharePadWithEmailMutation, SharePadWithEmailMutationVariables>(SharePadWithEmailDocument);\n};\nexport const UnarchiveNotebookDocument = gql`\n    mutation UnarchiveNotebook($id: ID!) {\n  updatePad(id: $id, pad: {archived: false}) {\n    ...EditorNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}`;\n\nexport function useUnarchiveNotebookMutation() {\n  return Urql.useMutation<UnarchiveNotebookMutation, UnarchiveNotebookMutationVariables>(UnarchiveNotebookDocument);\n};\nexport const UnshareNotebookWithSecretDocument = gql`\n    mutation UnshareNotebookWithSecret($id: ID!, $secret: String!) {\n  unshareNotebookWithSecret(id: $id, secret: $secret)\n}\n    `;\n\nexport function useUnshareNotebookWithSecretMutation() {\n  return Urql.useMutation<UnshareNotebookWithSecretMutation, UnshareNotebookWithSecretMutationVariables>(UnshareNotebookWithSecretDocument);\n};\nexport const UnsharePadWithUserDocument = gql`\n    mutation unsharePadWithUser($padId: ID!, $userId: ID!) {\n  unsharePadWithUser(id: $padId, userId: $userId) {\n    id\n    name\n    access {\n      users {\n        permission\n        canComment\n        user {\n          ...Collaborator\n        }\n      }\n    }\n  }\n}\n    ${CollaboratorFragmentDoc}`;\n\nexport function useUnsharePadWithUserMutation() {\n  return Urql.useMutation<UnsharePadWithUserMutation, UnsharePadWithUserMutationVariables>(UnsharePadWithUserDocument);\n};\nexport const UpdateNotebookArchiveDocument = gql`\n    mutation UpdateNotebookArchive($id: ID!) {\n  updatePad(id: $id, pad: {archived: true}) {\n    ...EditorNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}`;\n\nexport function useUpdateNotebookArchiveMutation() {\n  return Urql.useMutation<UpdateNotebookArchiveMutation, UpdateNotebookArchiveMutationVariables>(UpdateNotebookArchiveDocument);\n};\nexport const UpdateNotebookIconDocument = gql`\n    mutation UpdateNotebookIcon($id: ID!, $icon: String!) {\n  updatePad(id: $id, pad: {icon: $icon}) {\n    ...EditorNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}`;\n\nexport function useUpdateNotebookIconMutation() {\n  return Urql.useMutation<UpdateNotebookIconMutation, UpdateNotebookIconMutationVariables>(UpdateNotebookIconDocument);\n};\nexport const UpdateNotebookStatusDocument = gql`\n    mutation UpdateNotebookStatus($id: ID!, $status: String!) {\n  updatePad(id: $id, pad: {status: $status}) {\n    ...EditorNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}`;\n\nexport function useUpdateNotebookStatusMutation() {\n  return Urql.useMutation<UpdateNotebookStatusMutation, UpdateNotebookStatusMutationVariables>(UpdateNotebookStatusDocument);\n};\nexport const UpdateSectionDocument = gql`\n    mutation UpdateSection($workspaceId: ID!, $sectionId: ID!, $name: String!, $color: String!) {\n  updateSectionInWorkspace(\n    workspaceId: $workspaceId\n    sectionId: $sectionId\n    section: {name: $name, color: $color}\n  )\n}\n    `;\n\nexport function useUpdateSectionMutation() {\n  return Urql.useMutation<UpdateSectionMutation, UpdateSectionMutationVariables>(UpdateSectionDocument);\n};\nexport const UpdateSectionAddNotebookDocument = gql`\n    mutation UpdateSectionAddNotebook($sectionId: ID!, $notebookId: ID!) {\n  addNotebookToSection(sectionId: $sectionId, notebookId: $notebookId)\n}\n    `;\n\nexport function useUpdateSectionAddNotebookMutation() {\n  return Urql.useMutation<UpdateSectionAddNotebookMutation, UpdateSectionAddNotebookMutationVariables>(UpdateSectionAddNotebookDocument);\n};\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($props: UserInput!) {\n  updateSelf(props: $props) {\n    name\n    description\n    hideChecklist\n    onboarded\n  }\n}\n    `;\n\nexport function useUpdateUserMutation() {\n  return Urql.useMutation<UpdateUserMutation, UpdateUserMutationVariables>(UpdateUserDocument);\n};\nexport const GetNotebookByIdDocument = gql`\n    query GetNotebookById($id: ID!, $snapshotName: String) {\n  getPadById(id: $id, snapshotName: $snapshotName) {\n    ...EditorNotebook\n  }\n}\n    ${EditorNotebookFragmentDoc}`;\n\nexport function useGetNotebookByIdQuery(options: Omit<Urql.UseQueryArgs<GetNotebookByIdQueryVariables>, 'query'>) {\n  return Urql.useQuery<GetNotebookByIdQuery, GetNotebookByIdQueryVariables>({ query: GetNotebookByIdDocument, ...options });\n};\nexport const UserDocument = gql`\n    query User {\n  self {\n    name\n    username\n    description\n    hideChecklist\n    onboarded\n  }\n  selfFulfilledGoals\n}\n    `;\n\nexport function useUserQuery(options?: Omit<Urql.UseQueryArgs<UserQueryVariables>, 'query'>) {\n  return Urql.useQuery<UserQuery, UserQueryVariables>({ query: UserDocument, ...options });\n};\nexport const GetWorkspacesIDsDocument = gql`\n    query GetWorkspacesIDs {\n  workspaces {\n    ...WorkspaceSwitcherWorkspace\n  }\n}\n    ${WorkspaceSwitcherWorkspaceFragmentDoc}`;\n\nexport function useGetWorkspacesIDsQuery(options?: Omit<Urql.UseQueryArgs<GetWorkspacesIDsQueryVariables>, 'query'>) {\n  return Urql.useQuery<GetWorkspacesIDsQuery, GetWorkspacesIDsQueryVariables>({ query: GetWorkspacesIDsDocument, ...options });\n};\nexport const GetWorkspacesDocument = gql`\n    query GetWorkspaces {\n  workspaces {\n    ...DashboardWorkspace\n  }\n  padsSharedWithMe(page: {maxItems: 10000}) {\n    items {\n      ...WorkspaceNotebook\n    }\n  }\n}\n    ${DashboardWorkspaceFragmentDoc}\n${WorkspaceNotebookFragmentDoc}`;\n\nexport function useGetWorkspacesQuery(options?: Omit<Urql.UseQueryArgs<GetWorkspacesQueryVariables>, 'query'>) {\n  return Urql.useQuery<GetWorkspacesQuery, GetWorkspacesQueryVariables>({ query: GetWorkspacesDocument, ...options });\n};\nexport type WithTypename<T extends { __typename?: any }> = Partial<T> & { __typename: NonNullable<T['__typename']> };\n\nexport type GraphCacheKeysConfig = {\n  Attachment?: (data: WithTypename<Attachment>) => null | string,\n  CreateAttachmentForm?: (data: WithTypename<CreateAttachmentForm>) => null | string,\n  ExternalDataSource?: (data: WithTypename<ExternalDataSource>) => null | string,\n  ExternalDataSourceAccess?: (data: WithTypename<ExternalDataSourceAccess>) => null | string,\n  ExternalKey?: (data: WithTypename<ExternalKey>) => null | string,\n  KeyValue?: (data: WithTypename<KeyValue>) => null | string,\n  Pad?: (data: WithTypename<Pad>) => null | string,\n  PadAccess?: (data: WithTypename<PadAccess>) => null | string,\n  PadChanges?: (data: WithTypename<PadChanges>) => null | string,\n  PadConnectionParams?: (data: WithTypename<PadConnectionParams>) => null | string,\n  PadSnapshot?: (data: WithTypename<PadSnapshot>) => null | string,\n  PagedPadResult?: (data: WithTypename<PagedPadResult>) => null | string,\n  PagedResult?: (data: WithTypename<PagedResult>) => null | string,\n  Permission?: (data: WithTypename<Permission>) => null | string,\n  Role?: (data: WithTypename<Role>) => null | string,\n  RoleAccess?: (data: WithTypename<RoleAccess>) => null | string,\n  RoleInvitation?: (data: WithTypename<RoleInvitation>) => null | string,\n  SecretAccess?: (data: WithTypename<SecretAccess>) => null | string,\n  Section?: (data: WithTypename<Section>) => null | string,\n  SectionChanges?: (data: WithTypename<SectionChanges>) => null | string,\n  ShareInvitation?: (data: WithTypename<ShareInvitation>) => null | string,\n  SharedResource?: (data: WithTypename<SharedResource>) => null | string,\n  SharedWith?: (data: WithTypename<SharedWith>) => null | string,\n  SharedWithRole?: (data: WithTypename<SharedWithRole>) => null | string,\n  SharedWithUser?: (data: WithTypename<SharedWithUser>) => null | string,\n  TagChanges?: (data: WithTypename<TagChanges>) => null | string,\n  TagRecord?: (data: WithTypename<TagRecord>) => null | string,\n  User?: (data: WithTypename<User>) => null | string,\n  UserAccess?: (data: WithTypename<UserAccess>) => null | string,\n  Workspace?: (data: WithTypename<Workspace>) => null | string,\n  WorkspacesChanges?: (data: WithTypename<WorkspacesChanges>) => null | string\n}\n\nexport type GraphCacheResolvers = {\n  Query?: {\n    getExternalDataSource?: GraphCacheResolver<WithTypename<Query>, QueryGetExternalDataSourceArgs, WithTypename<ExternalDataSource> | string>,\n    getExternalDataSources?: GraphCacheResolver<WithTypename<Query>, QueryGetExternalDataSourcesArgs, WithTypename<PagedResult> | string>,\n    getPadById?: GraphCacheResolver<WithTypename<Query>, QueryGetPadByIdArgs, WithTypename<Pad> | string>,\n    getWorkspaceById?: GraphCacheResolver<WithTypename<Query>, QueryGetWorkspaceByIdArgs, WithTypename<Workspace> | string>,\n    me?: GraphCacheResolver<WithTypename<Query>, Record<string, never>, WithTypename<User> | string>,\n    pads?: GraphCacheResolver<WithTypename<Query>, QueryPadsArgs, WithTypename<PagedPadResult> | string>,\n    padsByTag?: GraphCacheResolver<WithTypename<Query>, QueryPadsByTagArgs, WithTypename<PagedPadResult> | string>,\n    padsSharedWithMe?: GraphCacheResolver<WithTypename<Query>, QueryPadsSharedWithMeArgs, WithTypename<PagedPadResult> | string>,\n    sections?: GraphCacheResolver<WithTypename<Query>, QuerySectionsArgs, Array<WithTypename<Section> | string>>,\n    self?: GraphCacheResolver<WithTypename<Query>, Record<string, never>, WithTypename<User> | string>,\n    selfFulfilledGoals?: GraphCacheResolver<WithTypename<Query>, Record<string, never>, Array<Scalars['String'] | string>>,\n    tags?: GraphCacheResolver<WithTypename<Query>, QueryTagsArgs, Array<Scalars['String'] | string>>,\n    version?: GraphCacheResolver<WithTypename<Query>, Record<string, never>, Scalars['String'] | string>,\n    workspaces?: GraphCacheResolver<WithTypename<Query>, Record<string, never>, Array<WithTypename<Workspace> | string>>\n  },\n  Attachment?: {\n    createdAt?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, Scalars['DateTime'] | string>,\n    fileName?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, Scalars['String'] | string>,\n    fileSize?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, Scalars['Int'] | string>,\n    fileType?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, Scalars['String'] | string>,\n    id?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, Scalars['ID'] | string>,\n    pad?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, WithTypename<Pad> | string>,\n    uploadedBy?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, WithTypename<User> | string>,\n    url?: GraphCacheResolver<WithTypename<Attachment>, Record<string, never>, Scalars['String'] | string>\n  },\n  CreateAttachmentForm?: {\n    fields?: GraphCacheResolver<WithTypename<CreateAttachmentForm>, Record<string, never>, Array<WithTypename<KeyValue> | string>>,\n    handle?: GraphCacheResolver<WithTypename<CreateAttachmentForm>, Record<string, never>, Scalars['String'] | string>,\n    url?: GraphCacheResolver<WithTypename<CreateAttachmentForm>, Record<string, never>, Scalars['String'] | string>\n  },\n  ExternalDataSource?: {\n    access?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, WithTypename<ExternalDataSourceAccess> | string>,\n    authUrl?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, Scalars['String'] | string>,\n    dataUrl?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, Scalars['String'] | string>,\n    externalId?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, Scalars['String'] | string>,\n    id?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, Scalars['ID'] | string>,\n    name?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, Scalars['String'] | string>,\n    padId?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, Scalars['ID'] | string>,\n    provider?: GraphCacheResolver<WithTypename<ExternalDataSource>, Record<string, never>, ExternalProvider | string>\n  },\n  ExternalDataSourceAccess?: {\n    roles?: GraphCacheResolver<WithTypename<ExternalDataSourceAccess>, Record<string, never>, Array<WithTypename<RoleAccess> | string>>,\n    users?: GraphCacheResolver<WithTypename<ExternalDataSourceAccess>, Record<string, never>, Array<WithTypename<UserAccess> | string>>\n  },\n  ExternalKey?: {\n    createdAt?: GraphCacheResolver<WithTypename<ExternalKey>, Record<string, never>, Scalars['DateTime'] | string>,\n    expiresAt?: GraphCacheResolver<WithTypename<ExternalKey>, Record<string, never>, Scalars['DateTime'] | string>,\n    id?: GraphCacheResolver<WithTypename<ExternalKey>, Record<string, never>, Scalars['ID'] | string>,\n    lastError?: GraphCacheResolver<WithTypename<ExternalKey>, Record<string, never>, Scalars['String'] | string>,\n    lastUsedAt?: GraphCacheResolver<WithTypename<ExternalKey>, Record<string, never>, Scalars['DateTime'] | string>\n  },\n  KeyValue?: {\n    key?: GraphCacheResolver<WithTypename<KeyValue>, Record<string, never>, Scalars['String'] | string>,\n    value?: GraphCacheResolver<WithTypename<KeyValue>, Record<string, never>, Scalars['String'] | string>\n  },\n  Pad?: {\n    access?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, WithTypename<PadAccess> | string>,\n    archived?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['Boolean'] | string>,\n    attachments?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Array<WithTypename<Attachment> | string>>,\n    createdAt?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['DateTime'] | string>,\n    icon?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['String'] | string>,\n    id?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['ID'] | string>,\n    initialState?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['String'] | string>,\n    isPublic?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['Boolean'] | string>,\n    myPermissionType?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, PermissionType | string>,\n    name?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['String'] | string>,\n    padConnectionParams?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, WithTypename<PadConnectionParams> | string>,\n    section?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, WithTypename<Section> | string>,\n    snapshots?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Array<WithTypename<PadSnapshot> | string>>,\n    status?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Scalars['String'] | string>,\n    tags?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, Array<Scalars['String'] | string>>,\n    workspace?: GraphCacheResolver<WithTypename<Pad>, Record<string, never>, WithTypename<Workspace> | string>\n  },\n  PadAccess?: {\n    roles?: GraphCacheResolver<WithTypename<PadAccess>, Record<string, never>, Array<WithTypename<RoleAccess> | string>>,\n    secrets?: GraphCacheResolver<WithTypename<PadAccess>, Record<string, never>, Array<WithTypename<SecretAccess> | string>>,\n    users?: GraphCacheResolver<WithTypename<PadAccess>, Record<string, never>, Array<WithTypename<UserAccess> | string>>\n  },\n  PadChanges?: {\n    added?: GraphCacheResolver<WithTypename<PadChanges>, Record<string, never>, Array<WithTypename<Pad> | string>>,\n    removed?: GraphCacheResolver<WithTypename<PadChanges>, Record<string, never>, Array<Scalars['ID'] | string>>,\n    updated?: GraphCacheResolver<WithTypename<PadChanges>, Record<string, never>, Array<WithTypename<Pad> | string>>\n  },\n  PadConnectionParams?: {\n    token?: GraphCacheResolver<WithTypename<PadConnectionParams>, Record<string, never>, Scalars['String'] | string>,\n    url?: GraphCacheResolver<WithTypename<PadConnectionParams>, Record<string, never>, Scalars['String'] | string>\n  },\n  PadSnapshot?: {\n    createdAt?: GraphCacheResolver<WithTypename<PadSnapshot>, Record<string, never>, Scalars['DateTime'] | string>,\n    data?: GraphCacheResolver<WithTypename<PadSnapshot>, Record<string, never>, Scalars['String'] | string>,\n    snapshotName?: GraphCacheResolver<WithTypename<PadSnapshot>, Record<string, never>, Scalars['String'] | string>,\n    updatedAt?: GraphCacheResolver<WithTypename<PadSnapshot>, Record<string, never>, Scalars['DateTime'] | string>,\n    version?: GraphCacheResolver<WithTypename<PadSnapshot>, Record<string, never>, Scalars['String'] | string>\n  },\n  PagedPadResult?: {\n    count?: GraphCacheResolver<WithTypename<PagedPadResult>, Record<string, never>, Scalars['Int'] | string>,\n    cursor?: GraphCacheResolver<WithTypename<PagedPadResult>, Record<string, never>, Scalars['String'] | string>,\n    hasNextPage?: GraphCacheResolver<WithTypename<PagedPadResult>, Record<string, never>, Scalars['Boolean'] | string>,\n    items?: GraphCacheResolver<WithTypename<PagedPadResult>, Record<string, never>, Array<WithTypename<Pad> | string>>\n  },\n  PagedResult?: {\n    count?: GraphCacheResolver<WithTypename<PagedResult>, Record<string, never>, Scalars['Int'] | string>,\n    cursor?: GraphCacheResolver<WithTypename<PagedResult>, Record<string, never>, Scalars['String'] | string>,\n    hasNextPage?: GraphCacheResolver<WithTypename<PagedResult>, Record<string, never>, Scalars['Boolean'] | string>,\n    items?: GraphCacheResolver<WithTypename<PagedResult>, Record<string, never>, Array<WithTypename<Pageable> | string>>\n  },\n  Permission?: {\n    canComment?: GraphCacheResolver<WithTypename<Permission>, Record<string, never>, Scalars['Boolean'] | string>,\n    createdAt?: GraphCacheResolver<WithTypename<Permission>, Record<string, never>, Scalars['DateTime'] | string>,\n    givenBy?: GraphCacheResolver<WithTypename<Permission>, Record<string, never>, WithTypename<User> | string>,\n    id?: GraphCacheResolver<WithTypename<Permission>, Record<string, never>, Scalars['ID'] | string>,\n    resource?: GraphCacheResolver<WithTypename<Permission>, Record<string, never>, Scalars['String'] | string>,\n    type?: GraphCacheResolver<WithTypename<Permission>, Record<string, never>, PermissionType | string>,\n    user?: GraphCacheResolver<WithTypename<Permission>, Record<string, never>, WithTypename<User> | string>\n  },\n  Role?: {\n    createdAt?: GraphCacheResolver<WithTypename<Role>, Record<string, never>, Scalars['DateTime'] | string>,\n    id?: GraphCacheResolver<WithTypename<Role>, Record<string, never>, Scalars['ID'] | string>,\n    name?: GraphCacheResolver<WithTypename<Role>, Record<string, never>, Scalars['String'] | string>,\n    users?: GraphCacheResolver<WithTypename<Role>, Record<string, never>, Array<WithTypename<User> | string>>,\n    workspace?: GraphCacheResolver<WithTypename<Role>, Record<string, never>, WithTypename<Workspace> | string>\n  },\n  RoleAccess?: {\n    canComment?: GraphCacheResolver<WithTypename<RoleAccess>, Record<string, never>, Scalars['Boolean'] | string>,\n    permission?: GraphCacheResolver<WithTypename<RoleAccess>, Record<string, never>, PermissionType | string>,\n    role?: GraphCacheResolver<WithTypename<RoleAccess>, Record<string, never>, WithTypename<Role> | string>\n  },\n  RoleInvitation?: {\n    expires_at?: GraphCacheResolver<WithTypename<RoleInvitation>, Record<string, never>, Scalars['DateTime'] | string>,\n    id?: GraphCacheResolver<WithTypename<RoleInvitation>, Record<string, never>, Scalars['ID'] | string>,\n    role?: GraphCacheResolver<WithTypename<RoleInvitation>, Record<string, never>, WithTypename<Role> | string>,\n    user?: GraphCacheResolver<WithTypename<RoleInvitation>, Record<string, never>, WithTypename<User> | string>\n  },\n  SecretAccess?: {\n    canComment?: GraphCacheResolver<WithTypename<SecretAccess>, Record<string, never>, Scalars['Boolean'] | string>,\n    permission?: GraphCacheResolver<WithTypename<SecretAccess>, Record<string, never>, PermissionType | string>,\n    secret?: GraphCacheResolver<WithTypename<SecretAccess>, Record<string, never>, Scalars['String'] | string>\n  },\n  Section?: {\n    color?: GraphCacheResolver<WithTypename<Section>, Record<string, never>, Scalars['String'] | string>,\n    createdAt?: GraphCacheResolver<WithTypename<Section>, Record<string, never>, Scalars['DateTime'] | string>,\n    id?: GraphCacheResolver<WithTypename<Section>, Record<string, never>, Scalars['ID'] | string>,\n    name?: GraphCacheResolver<WithTypename<Section>, Record<string, never>, Scalars['String'] | string>,\n    pads?: GraphCacheResolver<WithTypename<Section>, Record<string, never>, Array<WithTypename<Pad> | string>>,\n    workspace_id?: GraphCacheResolver<WithTypename<Section>, Record<string, never>, Scalars['ID'] | string>\n  },\n  SectionChanges?: {\n    added?: GraphCacheResolver<WithTypename<SectionChanges>, Record<string, never>, Array<WithTypename<Section> | string>>,\n    removed?: GraphCacheResolver<WithTypename<SectionChanges>, Record<string, never>, Array<Scalars['ID'] | string>>,\n    updated?: GraphCacheResolver<WithTypename<SectionChanges>, Record<string, never>, Array<WithTypename<Section> | string>>\n  },\n  ShareInvitation?: {\n    email?: GraphCacheResolver<WithTypename<ShareInvitation>, Record<string, never>, Scalars['String'] | string>\n  },\n  SharedResource?: {\n    canComment?: GraphCacheResolver<WithTypename<SharedResource>, Record<string, never>, Scalars['Boolean'] | string>,\n    permission?: GraphCacheResolver<WithTypename<SharedResource>, Record<string, never>, PermissionType | string>,\n    resource?: GraphCacheResolver<WithTypename<SharedResource>, Record<string, never>, Scalars['String'] | string>\n  },\n  SharedWith?: {\n    pendingInvitations?: GraphCacheResolver<WithTypename<SharedWith>, Record<string, never>, Array<WithTypename<ShareInvitation> | string>>,\n    roles?: GraphCacheResolver<WithTypename<SharedWith>, Record<string, never>, Array<WithTypename<SharedWithRole> | string>>,\n    users?: GraphCacheResolver<WithTypename<SharedWith>, Record<string, never>, Array<WithTypename<SharedWithUser> | string>>\n  },\n  SharedWithRole?: {\n    canComment?: GraphCacheResolver<WithTypename<SharedWithRole>, Record<string, never>, Scalars['Boolean'] | string>,\n    permissionType?: GraphCacheResolver<WithTypename<SharedWithRole>, Record<string, never>, PermissionType | string>,\n    role?: GraphCacheResolver<WithTypename<SharedWithRole>, Record<string, never>, WithTypename<Role> | string>\n  },\n  SharedWithUser?: {\n    canComment?: GraphCacheResolver<WithTypename<SharedWithUser>, Record<string, never>, Scalars['Boolean'] | string>,\n    permissionType?: GraphCacheResolver<WithTypename<SharedWithUser>, Record<string, never>, PermissionType | string>,\n    user?: GraphCacheResolver<WithTypename<SharedWithUser>, Record<string, never>, WithTypename<User> | string>\n  },\n  TagChanges?: {\n    added?: GraphCacheResolver<WithTypename<TagChanges>, Record<string, never>, Array<WithTypename<TagRecord> | string>>,\n    removed?: GraphCacheResolver<WithTypename<TagChanges>, Record<string, never>, Array<WithTypename<TagRecord> | string>>\n  },\n  TagRecord?: {\n    tag?: GraphCacheResolver<WithTypename<TagRecord>, Record<string, never>, Scalars['String'] | string>,\n    workspaceId?: GraphCacheResolver<WithTypename<TagRecord>, Record<string, never>, Scalars['ID'] | string>\n  },\n  User?: {\n    createdAt?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['DateTime'] | string>,\n    description?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['String'] | string>,\n    email?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['String'] | string>,\n    hideChecklist?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['Boolean'] | string>,\n    id?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['ID'] | string>,\n    image?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['String'] | string>,\n    name?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['String'] | string>,\n    onboarded?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['Boolean'] | string>,\n    username?: GraphCacheResolver<WithTypename<User>, Record<string, never>, Scalars['String'] | string>\n  },\n  UserAccess?: {\n    canComment?: GraphCacheResolver<WithTypename<UserAccess>, Record<string, never>, Scalars['Boolean'] | string>,\n    permission?: GraphCacheResolver<WithTypename<UserAccess>, Record<string, never>, PermissionType | string>,\n    user?: GraphCacheResolver<WithTypename<UserAccess>, Record<string, never>, WithTypename<User> | string>\n  },\n  Workspace?: {\n    createdAt?: GraphCacheResolver<WithTypename<Workspace>, Record<string, never>, Scalars['DateTime'] | string>,\n    id?: GraphCacheResolver<WithTypename<Workspace>, Record<string, never>, Scalars['ID'] | string>,\n    isPublic?: GraphCacheResolver<WithTypename<Workspace>, Record<string, never>, Scalars['Boolean'] | string>,\n    name?: GraphCacheResolver<WithTypename<Workspace>, Record<string, never>, Scalars['String'] | string>,\n    pads?: GraphCacheResolver<WithTypename<Workspace>, WorkspacePadsArgs, WithTypename<PagedPadResult> | string>,\n    roles?: GraphCacheResolver<WithTypename<Workspace>, Record<string, never>, Array<WithTypename<Role> | string>>,\n    sections?: GraphCacheResolver<WithTypename<Workspace>, Record<string, never>, Array<WithTypename<Section> | string>>\n  },\n  WorkspacesChanges?: {\n    added?: GraphCacheResolver<WithTypename<WorkspacesChanges>, Record<string, never>, Array<WithTypename<Workspace> | string>>,\n    removed?: GraphCacheResolver<WithTypename<WorkspacesChanges>, Record<string, never>, Array<Scalars['ID'] | string>>,\n    updated?: GraphCacheResolver<WithTypename<WorkspacesChanges>, Record<string, never>, Array<WithTypename<Workspace> | string>>\n  }\n};\n\nexport type GraphCacheOptimisticUpdaters = {\n  addNotebookToSection?: GraphCacheOptimisticMutationResolver<MutationAddNotebookToSectionArgs, Maybe<Scalars['Boolean']>>,\n  addSectionToWorkspace?: GraphCacheOptimisticMutationResolver<MutationAddSectionToWorkspaceArgs, Maybe<WithTypename<Section>>>,\n  addTagToPad?: GraphCacheOptimisticMutationResolver<MutationAddTagToPadArgs, Maybe<Scalars['Boolean']>>,\n  attachFileToPad?: GraphCacheOptimisticMutationResolver<MutationAttachFileToPadArgs, Maybe<WithTypename<Attachment>>>,\n  createExternalDataSource?: GraphCacheOptimisticMutationResolver<MutationCreateExternalDataSourceArgs, Maybe<WithTypename<ExternalDataSource>>>,\n  createOrUpdateSnapshot?: GraphCacheOptimisticMutationResolver<MutationCreateOrUpdateSnapshotArgs, Scalars['Boolean']>,\n  createPad?: GraphCacheOptimisticMutationResolver<MutationCreatePadArgs, WithTypename<Pad>>,\n  createRole?: GraphCacheOptimisticMutationResolver<MutationCreateRoleArgs, WithTypename<Role>>,\n  createUserViaMagicLink?: GraphCacheOptimisticMutationResolver<MutationCreateUserViaMagicLinkArgs, WithTypename<User>>,\n  createWorkspace?: GraphCacheOptimisticMutationResolver<MutationCreateWorkspaceArgs, WithTypename<Workspace>>,\n  doNothing?: GraphCacheOptimisticMutationResolver<Record<string, never>, Maybe<Scalars['Boolean']>>,\n  duplicatePad?: GraphCacheOptimisticMutationResolver<MutationDuplicatePadArgs, WithTypename<Pad>>,\n  fulfilGoal?: GraphCacheOptimisticMutationResolver<MutationFulfilGoalArgs, Scalars['Boolean']>,\n  getCreateAttachmentForm?: GraphCacheOptimisticMutationResolver<MutationGetCreateAttachmentFormArgs, WithTypename<CreateAttachmentForm>>,\n  importPad?: GraphCacheOptimisticMutationResolver<MutationImportPadArgs, WithTypename<Pad>>,\n  inviteUserToRole?: GraphCacheOptimisticMutationResolver<MutationInviteUserToRoleArgs, Array<WithTypename<RoleInvitation>>>,\n  movePad?: GraphCacheOptimisticMutationResolver<MutationMovePadArgs, WithTypename<Pad>>,\n  pretendUser?: GraphCacheOptimisticMutationResolver<MutationPretendUserArgs, Maybe<Scalars['Boolean']>>,\n  removeAttachmentFromPad?: GraphCacheOptimisticMutationResolver<MutationRemoveAttachmentFromPadArgs, Maybe<Scalars['Boolean']>>,\n  removeExternalDataSource?: GraphCacheOptimisticMutationResolver<MutationRemoveExternalDataSourceArgs, Maybe<Scalars['Boolean']>>,\n  removePad?: GraphCacheOptimisticMutationResolver<MutationRemovePadArgs, Maybe<Scalars['Boolean']>>,\n  removeRole?: GraphCacheOptimisticMutationResolver<MutationRemoveRoleArgs, Maybe<Scalars['Boolean']>>,\n  removeSectionFromWorkspace?: GraphCacheOptimisticMutationResolver<MutationRemoveSectionFromWorkspaceArgs, Maybe<Scalars['Boolean']>>,\n  removeSelfFromRole?: GraphCacheOptimisticMutationResolver<MutationRemoveSelfFromRoleArgs, Maybe<Scalars['Boolean']>>,\n  removeTagFromPad?: GraphCacheOptimisticMutationResolver<MutationRemoveTagFromPadArgs, Maybe<Scalars['Boolean']>>,\n  removeUserFromRole?: GraphCacheOptimisticMutationResolver<MutationRemoveUserFromRoleArgs, Maybe<Scalars['Boolean']>>,\n  removeWorkspace?: GraphCacheOptimisticMutationResolver<MutationRemoveWorkspaceArgs, Maybe<Scalars['Boolean']>>,\n  resendRegistrationMagicLinkEmail?: GraphCacheOptimisticMutationResolver<MutationResendRegistrationMagicLinkEmailArgs, Maybe<Scalars['Boolean']>>,\n  setPadPublic?: GraphCacheOptimisticMutationResolver<MutationSetPadPublicArgs, Scalars['Boolean']>,\n  setUsername?: GraphCacheOptimisticMutationResolver<MutationSetUsernameArgs, Scalars['Boolean']>,\n  shareExternalDataSourceWithEmail?: GraphCacheOptimisticMutationResolver<MutationShareExternalDataSourceWithEmailArgs, Maybe<WithTypename<ExternalDataSource>>>,\n  shareExternalDataSourceWithRole?: GraphCacheOptimisticMutationResolver<MutationShareExternalDataSourceWithRoleArgs, Maybe<Scalars['Boolean']>>,\n  shareExternalDataSourceWithUser?: GraphCacheOptimisticMutationResolver<MutationShareExternalDataSourceWithUserArgs, Maybe<Scalars['Boolean']>>,\n  sharePadWithEmail?: GraphCacheOptimisticMutationResolver<MutationSharePadWithEmailArgs, WithTypename<Pad>>,\n  sharePadWithRole?: GraphCacheOptimisticMutationResolver<MutationSharePadWithRoleArgs, Maybe<Scalars['Boolean']>>,\n  sharePadWithSecret?: GraphCacheOptimisticMutationResolver<MutationSharePadWithSecretArgs, Scalars['String']>,\n  sharePadWithUser?: GraphCacheOptimisticMutationResolver<MutationSharePadWithUserArgs, Maybe<Scalars['Boolean']>>,\n  unshareExternalDataSourceWithRole?: GraphCacheOptimisticMutationResolver<MutationUnshareExternalDataSourceWithRoleArgs, Maybe<Scalars['Boolean']>>,\n  unshareExternalDataSourceWithUser?: GraphCacheOptimisticMutationResolver<MutationUnshareExternalDataSourceWithUserArgs, WithTypename<ExternalDataSource>>,\n  unshareNotebookWithSecret?: GraphCacheOptimisticMutationResolver<MutationUnshareNotebookWithSecretArgs, Maybe<Scalars['Boolean']>>,\n  unsharePadWithRole?: GraphCacheOptimisticMutationResolver<MutationUnsharePadWithRoleArgs, Maybe<Scalars['Boolean']>>,\n  unsharePadWithUser?: GraphCacheOptimisticMutationResolver<MutationUnsharePadWithUserArgs, Maybe<WithTypename<Pad>>>,\n  updateExternalDataSource?: GraphCacheOptimisticMutationResolver<MutationUpdateExternalDataSourceArgs, Maybe<WithTypename<ExternalDataSource>>>,\n  updatePad?: GraphCacheOptimisticMutationResolver<MutationUpdatePadArgs, WithTypename<Pad>>,\n  updateSectionInWorkspace?: GraphCacheOptimisticMutationResolver<MutationUpdateSectionInWorkspaceArgs, Maybe<Scalars['Boolean']>>,\n  updateSelf?: GraphCacheOptimisticMutationResolver<MutationUpdateSelfArgs, WithTypename<User>>,\n  updateWorkspace?: GraphCacheOptimisticMutationResolver<MutationUpdateWorkspaceArgs, WithTypename<Workspace>>\n};\n\nexport type GraphCacheUpdaters = {\n  Mutation?: {\n    addNotebookToSection?: GraphCacheUpdateResolver<{ addNotebookToSection: Maybe<Scalars['Boolean']> }, MutationAddNotebookToSectionArgs>,\n    addSectionToWorkspace?: GraphCacheUpdateResolver<{ addSectionToWorkspace: Maybe<WithTypename<Section>> }, MutationAddSectionToWorkspaceArgs>,\n    addTagToPad?: GraphCacheUpdateResolver<{ addTagToPad: Maybe<Scalars['Boolean']> }, MutationAddTagToPadArgs>,\n    attachFileToPad?: GraphCacheUpdateResolver<{ attachFileToPad: Maybe<WithTypename<Attachment>> }, MutationAttachFileToPadArgs>,\n    createExternalDataSource?: GraphCacheUpdateResolver<{ createExternalDataSource: Maybe<WithTypename<ExternalDataSource>> }, MutationCreateExternalDataSourceArgs>,\n    createOrUpdateSnapshot?: GraphCacheUpdateResolver<{ createOrUpdateSnapshot: Scalars['Boolean'] }, MutationCreateOrUpdateSnapshotArgs>,\n    createPad?: GraphCacheUpdateResolver<{ createPad: WithTypename<Pad> }, MutationCreatePadArgs>,\n    createRole?: GraphCacheUpdateResolver<{ createRole: WithTypename<Role> }, MutationCreateRoleArgs>,\n    createUserViaMagicLink?: GraphCacheUpdateResolver<{ createUserViaMagicLink: WithTypename<User> }, MutationCreateUserViaMagicLinkArgs>,\n    createWorkspace?: GraphCacheUpdateResolver<{ createWorkspace: WithTypename<Workspace> }, MutationCreateWorkspaceArgs>,\n    doNothing?: GraphCacheUpdateResolver<{ doNothing: Maybe<Scalars['Boolean']> }, Record<string, never>>,\n    duplicatePad?: GraphCacheUpdateResolver<{ duplicatePad: WithTypename<Pad> }, MutationDuplicatePadArgs>,\n    fulfilGoal?: GraphCacheUpdateResolver<{ fulfilGoal: Scalars['Boolean'] }, MutationFulfilGoalArgs>,\n    getCreateAttachmentForm?: GraphCacheUpdateResolver<{ getCreateAttachmentForm: WithTypename<CreateAttachmentForm> }, MutationGetCreateAttachmentFormArgs>,\n    importPad?: GraphCacheUpdateResolver<{ importPad: WithTypename<Pad> }, MutationImportPadArgs>,\n    inviteUserToRole?: GraphCacheUpdateResolver<{ inviteUserToRole: Array<WithTypename<RoleInvitation>> }, MutationInviteUserToRoleArgs>,\n    movePad?: GraphCacheUpdateResolver<{ movePad: WithTypename<Pad> }, MutationMovePadArgs>,\n    pretendUser?: GraphCacheUpdateResolver<{ pretendUser: Maybe<Scalars['Boolean']> }, MutationPretendUserArgs>,\n    removeAttachmentFromPad?: GraphCacheUpdateResolver<{ removeAttachmentFromPad: Maybe<Scalars['Boolean']> }, MutationRemoveAttachmentFromPadArgs>,\n    removeExternalDataSource?: GraphCacheUpdateResolver<{ removeExternalDataSource: Maybe<Scalars['Boolean']> }, MutationRemoveExternalDataSourceArgs>,\n    removePad?: GraphCacheUpdateResolver<{ removePad: Maybe<Scalars['Boolean']> }, MutationRemovePadArgs>,\n    removeRole?: GraphCacheUpdateResolver<{ removeRole: Maybe<Scalars['Boolean']> }, MutationRemoveRoleArgs>,\n    removeSectionFromWorkspace?: GraphCacheUpdateResolver<{ removeSectionFromWorkspace: Maybe<Scalars['Boolean']> }, MutationRemoveSectionFromWorkspaceArgs>,\n    removeSelfFromRole?: GraphCacheUpdateResolver<{ removeSelfFromRole: Maybe<Scalars['Boolean']> }, MutationRemoveSelfFromRoleArgs>,\n    removeTagFromPad?: GraphCacheUpdateResolver<{ removeTagFromPad: Maybe<Scalars['Boolean']> }, MutationRemoveTagFromPadArgs>,\n    removeUserFromRole?: GraphCacheUpdateResolver<{ removeUserFromRole: Maybe<Scalars['Boolean']> }, MutationRemoveUserFromRoleArgs>,\n    removeWorkspace?: GraphCacheUpdateResolver<{ removeWorkspace: Maybe<Scalars['Boolean']> }, MutationRemoveWorkspaceArgs>,\n    resendRegistrationMagicLinkEmail?: GraphCacheUpdateResolver<{ resendRegistrationMagicLinkEmail: Maybe<Scalars['Boolean']> }, MutationResendRegistrationMagicLinkEmailArgs>,\n    setPadPublic?: GraphCacheUpdateResolver<{ setPadPublic: Scalars['Boolean'] }, MutationSetPadPublicArgs>,\n    setUsername?: GraphCacheUpdateResolver<{ setUsername: Scalars['Boolean'] }, MutationSetUsernameArgs>,\n    shareExternalDataSourceWithEmail?: GraphCacheUpdateResolver<{ shareExternalDataSourceWithEmail: Maybe<WithTypename<ExternalDataSource>> }, MutationShareExternalDataSourceWithEmailArgs>,\n    shareExternalDataSourceWithRole?: GraphCacheUpdateResolver<{ shareExternalDataSourceWithRole: Maybe<Scalars['Boolean']> }, MutationShareExternalDataSourceWithRoleArgs>,\n    shareExternalDataSourceWithUser?: GraphCacheUpdateResolver<{ shareExternalDataSourceWithUser: Maybe<Scalars['Boolean']> }, MutationShareExternalDataSourceWithUserArgs>,\n    sharePadWithEmail?: GraphCacheUpdateResolver<{ sharePadWithEmail: WithTypename<Pad> }, MutationSharePadWithEmailArgs>,\n    sharePadWithRole?: GraphCacheUpdateResolver<{ sharePadWithRole: Maybe<Scalars['Boolean']> }, MutationSharePadWithRoleArgs>,\n    sharePadWithSecret?: GraphCacheUpdateResolver<{ sharePadWithSecret: Scalars['String'] }, MutationSharePadWithSecretArgs>,\n    sharePadWithUser?: GraphCacheUpdateResolver<{ sharePadWithUser: Maybe<Scalars['Boolean']> }, MutationSharePadWithUserArgs>,\n    unshareExternalDataSourceWithRole?: GraphCacheUpdateResolver<{ unshareExternalDataSourceWithRole: Maybe<Scalars['Boolean']> }, MutationUnshareExternalDataSourceWithRoleArgs>,\n    unshareExternalDataSourceWithUser?: GraphCacheUpdateResolver<{ unshareExternalDataSourceWithUser: WithTypename<ExternalDataSource> }, MutationUnshareExternalDataSourceWithUserArgs>,\n    unshareNotebookWithSecret?: GraphCacheUpdateResolver<{ unshareNotebookWithSecret: Maybe<Scalars['Boolean']> }, MutationUnshareNotebookWithSecretArgs>,\n    unsharePadWithRole?: GraphCacheUpdateResolver<{ unsharePadWithRole: Maybe<Scalars['Boolean']> }, MutationUnsharePadWithRoleArgs>,\n    unsharePadWithUser?: GraphCacheUpdateResolver<{ unsharePadWithUser: Maybe<WithTypename<Pad>> }, MutationUnsharePadWithUserArgs>,\n    updateExternalDataSource?: GraphCacheUpdateResolver<{ updateExternalDataSource: Maybe<WithTypename<ExternalDataSource>> }, MutationUpdateExternalDataSourceArgs>,\n    updatePad?: GraphCacheUpdateResolver<{ updatePad: WithTypename<Pad> }, MutationUpdatePadArgs>,\n    updateSectionInWorkspace?: GraphCacheUpdateResolver<{ updateSectionInWorkspace: Maybe<Scalars['Boolean']> }, MutationUpdateSectionInWorkspaceArgs>,\n    updateSelf?: GraphCacheUpdateResolver<{ updateSelf: WithTypename<User> }, MutationUpdateSelfArgs>,\n    updateWorkspace?: GraphCacheUpdateResolver<{ updateWorkspace: WithTypename<Workspace> }, MutationUpdateWorkspaceArgs>\n  },\n  Subscription?: {\n    hello?: GraphCacheUpdateResolver<{ hello: Maybe<Scalars['String']> }, Record<string, never>>,\n    padsChanged?: GraphCacheUpdateResolver<{ padsChanged: WithTypename<PadChanges> }, SubscriptionPadsChangedArgs>,\n    sectionsChanged?: GraphCacheUpdateResolver<{ sectionsChanged: WithTypename<SectionChanges> }, SubscriptionSectionsChangedArgs>,\n    subscribeToNothing?: GraphCacheUpdateResolver<{ subscribeToNothing: Maybe<Scalars['Boolean']> }, Record<string, never>>,\n    tagsChanged?: GraphCacheUpdateResolver<{ tagsChanged: WithTypename<TagChanges> }, SubscriptionTagsChangedArgs>,\n    workspacesChanged?: GraphCacheUpdateResolver<{ workspacesChanged: WithTypename<WorkspacesChanges> }, Record<string, never>>\n  },\n};\n\nexport type GraphCacheConfig = {\n  schema?: IntrospectionData,\n  updates?: GraphCacheUpdaters,\n  keys?: GraphCacheKeysConfig,\n  optimistic?: GraphCacheOptimisticUpdaters,\n  resolvers?: GraphCacheResolvers,\n  storage?: GraphCacheStorageAdapter\n};","import { ErrorPage as ErrorPageUi } from '@decipad/ui';\nimport { useSession } from 'next-auth/react';\nimport { FC, ComponentProps, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst messagesFromError: Record<string, string[]> = {\n  Verification: [\n    'It looks like your login link has expired. ',\n    \"You'll need to request a new login link\",\n  ],\n};\n\nconst backUrlFromError: Record<string, string> = {\n  Verification: '/',\n};\n\nconst backCallFromError: Record<string, string> = {\n  Verification: 'Click here to request a new one',\n};\n\nexport const ErrorPage: FC<\n  Omit<ComponentProps<typeof ErrorPageUi>, 'authenticated'>\n> = (props) => {\n  const { search } = useLocation();\n  const params = useMemo(() => new URLSearchParams(search), [search]);\n  const errorCode = params.get('error') as keyof (typeof messagesFromError &\n    typeof backUrlFromError &\n    typeof backCallFromError);\n\n  const messages = messagesFromError[errorCode];\n\n  const { data: session } = useSession();\n\n  return (\n    <ErrorPageUi\n      {...props}\n      authenticated={!!session}\n      messages={messages}\n      backUrl={backUrlFromError[errorCode]}\n      backCall={backCallFromError[errorCode]}\n    />\n  );\n};\n","import { ComponentProps, FC, ReactNode, useCallback, useState } from 'react';\nimport { ErrorBoundary as ReactErrorBoundary } from 'react-error-boundary';\nimport * as Sentry from '@sentry/react';\nimport { ErrorPage } from './ErrorPage';\n\ninterface ErrorBoundaryProps {\n  readonly Heading: ComponentProps<typeof ErrorPage>['Heading'];\n  readonly children: ReactNode;\n}\n\nexport const ErrorBoundary: FC<ErrorBoundaryProps> = ({\n  children,\n  Heading,\n}) => {\n  const [errorCount, setErrorCount] = useState(0);\n  const [previousErrorDate, setPreviousErrorDate] = useState<\n    number | undefined\n  >();\n  const onError = useCallback(\n    (error: Error) => {\n      setPreviousErrorDate(Date.now());\n      console.error(error);\n      try {\n        Sentry.captureException(error);\n      } catch (err) {\n        console.error(err);\n      }\n      if (previousErrorDate && Date.now() - previousErrorDate < 2000) {\n        setTimeout(() => setErrorCount((c) => c + 1), 1000);\n      }\n    },\n    [previousErrorDate]\n  );\n\n  return (\n    <ReactErrorBoundary\n      onError={onError}\n      fallbackRender={() => <ErrorPage Heading={Heading} />}\n      resetKeys={[errorCount]}\n    >\n      {children}\n    </ReactErrorBoundary>\n  );\n};\n","import { ComponentProps, ReactNode, Suspense } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\nimport { ErrorBoundary } from './ErrorBoundary';\n\ntype FrameProps = {\n  readonly title: string | null; // explicit null, omitting prop not allowed to make sure title is not forgotten when adding a page\n  readonly children: ReactNode;\n  readonly suspenseFallback: ReactNode;\n} & ComponentProps<typeof ErrorBoundary>;\n\nexport const Frame: React.FC<FrameProps> = ({\n  children,\n  title,\n  suspenseFallback,\n  ...props\n}) => {\n  const pageTitle = title ? `${title} | Decipad` : null;\n  const location = useLocation();\n  return (\n    <ErrorBoundary {...props}>\n      {pageTitle && (\n        <Helmet title={pageTitle}>\n          <meta property=\"og:title\" content={pageTitle} />\n          <meta\n            property=\"og:url\"\n            content={`https://app.decipad.com${location.pathname}`}\n          />\n        </Helmet>\n      )}\n      <Suspense fallback={suspenseFallback}>{children}</Suspense>\n    </ErrorBoundary>\n  );\n};\n","import React, { ComponentProps, ReactNode } from 'react';\nimport { LoadingLogo } from '@decipad/ui';\nimport { ErrorBoundary } from './ErrorBoundary';\nimport { Frame } from './Frame';\n\ntype FrameProps = {\n  readonly title?: string;\n  readonly children: ReactNode;\n  readonly suspenseFallback?: ReactNode;\n} & Omit<ComponentProps<typeof ErrorBoundary>, 'Heading'>;\n\nexport const LazyRoute: React.FC<FrameProps> = ({\n  title = null,\n  suspenseFallback,\n  ...props\n}) => (\n  <Frame\n    {...props}\n    title={title}\n    Heading={'h1'}\n    suspenseFallback={suspenseFallback || <LoadingLogo />}\n  >\n    {props.children}\n  </Frame>\n);\n","import { ToastType } from '@decipad/toast';\nimport { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { Success, Warning } from '../../icons';\nimport {\n  brand100,\n  brand700,\n  cssVar,\n  grey200,\n  grey600,\n  offBlack,\n  p14Regular,\n  red200,\n  red700,\n  toastTransitionDelay,\n  transparency,\n  yellow200,\n  yellow700,\n} from '../../primitives';\n\ntype ToastProps = {\n  readonly appearance: ToastType;\n  readonly autoDismiss?: boolean | number;\n};\n\nconst getAppearanceType = (appearance: ToastType) => {\n  const type = {\n    error: errorStyle,\n    info: infoStyle,\n    success: successStyle,\n    warning: warningStyle,\n  };\n\n  return type[appearance];\n};\n\nconst getIconType = (appearance: ToastType) => {\n  const type = {\n    error: (\n      <span\n        css={css({ '> svg > path': { stroke: red700.rgb, fill: red200.rgb } })}\n      >\n        <Warning />\n      </span>\n    ),\n    info: (\n      <span\n        css={css({\n          '> svg > path': { stroke: grey600.rgb, fill: grey200.rgb },\n        })}\n      >\n        <Success />\n      </span>\n    ),\n    success: (\n      <span\n        css={css({\n          '> svg > path': { stroke: brand700.rgb, fill: brand100.rgb },\n        })}\n      >\n        <Success />\n      </span>\n    ),\n    warning: (\n      <span\n        css={css({\n          '> svg > path': { stroke: yellow700.rgb, fill: yellow200.rgb },\n        })}\n      >\n        <Warning />\n      </span>\n    ),\n  };\n\n  return type[appearance];\n};\n\nconst baseStyles = css(p14Regular, {\n  display: 'grid',\n  gridTemplateColumns: 'auto 1fr',\n  alignItems: 'center',\n\n  borderRadius: '8px',\n  boxShadow: `0px 2px 24px -4px ${transparency(offBlack, 0.08).rgba}`,\n\n  padding: '6px 12px',\n  // HACK: So the toast is above the help button and undo component.\n  marginRight: '8px',\n  marginBottom: '64px',\n  maxWidth: '350px',\n  gap: '6px',\n});\n\nconst collapsedBaseStyles = css(baseStyles, {\n  gap: '0px',\n  borderRadius: '999px',\n  padding: '6px',\n  lineHeight: p14Regular.lineHeight,\n  height: '28px',\n  width: '28px',\n\n  '& > p': {\n    maxWidth: '0px',\n    maxHeight: '0px',\n    overflow: 'hidden',\n  },\n\n  '&:hover': {\n    borderRadius: '8px',\n    padding: '6px 12px',\n    gap: '6px',\n    width: 'unset',\n    height: 'unset',\n    '& > p': {\n      maxWidth: '100%',\n      maxHeight: '100%',\n    },\n  },\n});\n\nconst errorStyle = css(baseStyles, {\n  backgroundColor: cssVar('toastDanger'),\n  color: cssVar('backgroundColor'),\n});\n\nconst infoStyle = css(baseStyles, {\n  backgroundColor: cssVar('strongTextColor'),\n  color: cssVar('backgroundColor'),\n});\n\nconst successStyle = css(baseStyles, {\n  backgroundColor: cssVar('toastOk'),\n  color: cssVar('strongTextColor'),\n});\n\nconst warningStyle = css(baseStyles, {\n  backgroundColor: cssVar('toastWarning'),\n  color: cssVar('strongTextColor'),\n});\n\nconst iconStyles = css({\n  width: '16px',\n  height: '16px',\n\n  display: 'grid',\n});\n\nexport const Toast: React.FC<React.PropsWithChildren<ToastProps>> = ({\n  appearance,\n  children,\n  autoDismiss = true,\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n  useEffect(() => {\n    const t = setTimeout(() => {\n      if (!autoDismiss) {\n        setCollapsed(true);\n      }\n    }, toastTransitionDelay);\n\n    return () => {\n      clearTimeout(t);\n    };\n  }, [autoDismiss]);\n\n  return (\n    <div\n      css={[getAppearanceType(appearance), collapsed && collapsedBaseStyles]}\n    >\n      <span css={iconStyles}>{getIconType(appearance)}</span>\n      <div>{children}</div>\n    </div>\n  );\n};\n","import { ToastContext } from '@decipad/toast';\nimport { ComponentType, useEffect, useState } from 'react';\nimport * as ReactToastNotifications from 'react-toast-notifications';\nimport { Toast } from '../../atoms';\nimport { toastTransitionDelay } from '../../primitives';\n\nconst ToastProvider: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const { addToast } = ReactToastNotifications.useToasts();\n  return (\n    <ToastContext.Provider\n      value={(message, type, options = {}) => {\n        addToast(message, { appearance: type, ...options });\n      }}\n    >\n      {children}\n    </ToastContext.Provider>\n  );\n};\n\nexport const ToastDisplay: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  // SSR shenanigans\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    (show && (\n      <ReactToastNotifications.ToastProvider\n        components={{\n          Toast: Toast as ComponentType<ReactToastNotifications.ToastProps>,\n        }}\n        autoDismiss\n        autoDismissTimeout={toastTransitionDelay}\n        placement=\"top-center\"\n      >\n        <ToastProvider>{children}</ToastProvider>\n      </ReactToastNotifications.ToastProvider>\n    )) || <>{children}</>\n  );\n};\n","/* eslint-disable no-console */\nimport {\n  ClientEvent,\n  ClientEventsContext,\n  getAnalytics,\n} from '@decipad/client-events';\nimport { useSession } from 'next-auth/react';\nimport { ReactNode, useEffect, useState } from 'react';\nimport * as Sentry from '@sentry/react';\n\nconst IdentifyUserAnalytics: React.FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const analytics = getAnalytics();\n  const { data: session } = useSession();\n  const [userId, setUserId] = useState<string | undefined>();\n  const [userEmail, setUserEmail] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (\n      analytics &&\n      session?.user &&\n      (session.user.id !== userId || session.user.email !== userEmail)\n    ) {\n      setUserId(session.user.id);\n      setUserEmail(session.user.email);\n      console.debug('analytics: identifying user with id', session.user.id);\n      analytics.identify(session.user.id, {\n        email: session.user.email,\n      });\n    }\n  }, [analytics, session, userId, userEmail]);\n\n  useEffect(() => {\n    if (session?.user.id) {\n      Sentry.setUser({\n        id: session.user.id,\n        email: session.user.email,\n      });\n    }\n  }, [session?.user?.email, session?.user?.id]);\n\n  return <>{children}</>;\n};\n\nconst ClientEventsAnalytics: React.FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const analytics = getAnalytics();\n\n  const handleClientEvent = async (clientEvent: ClientEvent) => {\n    if (!analytics) {\n      return;\n    }\n    switch (clientEvent.type) {\n      case 'page': {\n        await analytics.page(clientEvent.category);\n        break;\n      }\n      case 'action': {\n        await analytics.track(clientEvent.action, clientEvent.props);\n      }\n    }\n  };\n\n  return (\n    <ClientEventsContext.Provider value={handleClientEvent}>\n      {children}\n    </ClientEventsContext.Provider>\n  );\n};\n\nexport const AnalyticsProvider: React.FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  return (\n    <IdentifyUserAnalytics>\n      <ClientEventsAnalytics>{children}</ClientEventsAnalytics>\n    </IdentifyUserAnalytics>\n  );\n};\n","import { useSession } from 'next-auth/react';\nimport { FC, ReactNode } from 'react';\nimport { IntercomProvider as Provider } from 'react-use-intercom';\n\nexport const IntercomProvider: FC<{ readonly children: ReactNode }> = ({\n  children,\n}) => {\n  const session = useSession();\n  return (\n    <Provider\n      appId={process.env.REACT_APP_INTERCOM_APP_ID!}\n      autoBoot\n      autoBootProps={{\n        email: session.data?.user?.email,\n        name: session.data?.user?.name,\n      }}\n      shouldInitialize={session.status === 'authenticated'}\n    >\n      {children}\n    </Provider>\n  );\n};\n","import { MouseEvent, useCallback } from 'react';\n\ninterface UpdatePromptProps {\n  onReload: () => void;\n}\n\nexport const UpdatePrompt = ({ onReload }: UpdatePromptProps) => {\n  const onReloadClick = useCallback(\n    (event: MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      onReload();\n    },\n    [onReload]\n  );\n\n  return (\n    <a href=\"/\" onClick={onReloadClick}>\n      Decipad has a new version.&nbsp;\n      <span>Click here to update ✨</span>\n    </a>\n  );\n};\n","import { createContext, FC, PropsWithChildren, useEffect } from 'react';\n\nexport type UpdatesContextValue = boolean;\n\nconst UpdatesContext = createContext<UpdatesContextValue>(false);\n\nlet globalHasUpdate = false;\n\nexport const UpdatesContextProvider: FC<\n  PropsWithChildren<{\n    hasUpdate: boolean;\n  }>\n> = ({ hasUpdate, children }) => {\n  useEffect(() => {\n    globalHasUpdate = hasUpdate;\n  }, [hasUpdate]);\n  return (\n    <UpdatesContext.Provider value={hasUpdate}>\n      {children}\n    </UpdatesContext.Provider>\n  );\n};\n\nexport const hasUpdate = () => globalHasUpdate;\n","import { useToast } from '@decipad/toast';\nimport { UpdatePrompt } from '@decipad/ui';\nimport {\n  FC,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { UpdatesContextProvider } from './UpdatesProvider';\n\nconst initialTimeoutMs = 1_000;\nconst checkForUpdatesIntervalMs = 60_000;\n\nexport const UpdatesHandler: FC<PropsWithChildren> = ({ children }) => {\n  const toast = useToast();\n  const [foundUpdate, setFoundUpdate] = useState(false);\n  const onReload = useCallback(() => window.location.reload(), []);\n  const onUpdateFound = useCallback(() => setFoundUpdate(true), []);\n  const reloading = useRef(false);\n\n  useEffect(() => {\n    if (foundUpdate && !reloading.current) {\n      reloading.current = true;\n      toast(<UpdatePrompt onReload={onReload} />, 'info', {\n        autoDismiss: true,\n      });\n    }\n  }, [foundUpdate, onReload, toast]);\n\n  useEffect(() => {\n    let registration: ServiceWorkerRegistration | undefined;\n    if (!foundUpdate && 'serviceWorker' in navigator) {\n      (async () => {\n        registration = await navigator.serviceWorker.getRegistration();\n        if (registration) {\n          registration.addEventListener('updatefound', onUpdateFound);\n        }\n      })();\n    }\n\n    return () => {\n      if (registration) {\n        registration.removeEventListener('updatefound', onUpdateFound);\n      }\n    };\n  }, [foundUpdate, onUpdateFound]);\n\n  const tryToUpdate = useCallback(async () => {\n    const registration = await navigator.serviceWorker.getRegistration();\n    if (registration) {\n      try {\n        await registration.update();\n      } catch (err) {\n        // ignore\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!foundUpdate && 'serviceWorker' in navigator) {\n      const interval = setInterval(async () => {\n        if (!foundUpdate) {\n          tryToUpdate();\n        }\n      }, checkForUpdatesIntervalMs);\n\n      setTimeout(tryToUpdate, initialTimeoutMs);\n      tryToUpdate();\n\n      return () => clearInterval(interval);\n    }\n    return undefined;\n  }, [foundUpdate, tryToUpdate]);\n\n  return (\n    <UpdatesContextProvider hasUpdate={foundUpdate}>\n      {children}\n    </UpdatesContextProvider>\n  );\n};\n","import { GlobalStyles, ToastDisplay } from '@decipad/ui';\nimport { FC, ReactNode } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\nimport { AnalyticsProvider } from './AnalyticsProvider';\nimport { IntercomProvider } from './IntercomProvider';\nimport { UpdatesHandler } from './UpdatesHandler';\n\nconst backendForDND = () =>\n  'window' in globalThis && 'ontouchstart' in window\n    ? TouchBackend\n    : HTML5Backend;\n\nexport const Providers: FC<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <ToastDisplay>\n      <UpdatesHandler>\n        <QueryParamProvider adapter={ReactRouter6Adapter}>\n          <AnalyticsProvider>\n            <IntercomProvider>\n              <DndProvider backend={backendForDND()}>\n                <GlobalStyles>{children}</GlobalStyles>\n              </DndProvider>\n            </IntercomProvider>\n          </AnalyticsProvider>\n        </QueryParamProvider>\n      </UpdatesHandler>\n    </ToastDisplay>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { cssVar, p12Regular } from '../../primitives';\n\nconst conditionLinksWrapperStyles = css(p12Regular, {\n  marginTop: '10px',\n  textAlign: 'center',\n  fontSize: '75%',\n  color: cssVar('weakerTextColor'),\n\n  lineHeight: 1.36,\n});\n\nconst linkStyles = css({\n  textDecoration: 'underline',\n});\n\nexport const SignUpConditionsContent: FC = () => {\n  return (\n    <div css={conditionLinksWrapperStyles}>\n      By logging in, you agree to our{' '}\n      <a target=\"_blank\" css={linkStyles} href=\"/docs/terms\">\n        Terms of Service\n      </a>{' '}\n      and{' '}\n      <a target=\"_blank\" css={linkStyles} href=\"/docs/privacy\">\n        Privacy Policy\n      </a>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { Deci } from '../../icons';\nimport {\n  cssVar,\n  brand500,\n  brand400,\n  setCssVar,\n  transparency,\n  p14Regular,\n  p24Medium,\n} from '../../primitives';\n\nconst deciLogoWrapper = css({\n  ...setCssVar('currentTextColor', cssVar('strongTextColor')),\n  width: '60px',\n  height: '60px',\n  background: `linear-gradient(145.97deg, ${brand500.rgb} 10.08%, ${\n    transparency(brand400, 0.8).rgba\n  } 75.32%, ${brand500.rgb} 94.81%)`,\n  borderRadius: '12px',\n  padding: '12px',\n  marginBottom: '16px',\n});\n\nconst authContentWrapperStyles = css({\n  display: 'grid',\n  justifyContent: 'center',\n  justifyItems: 'center',\n  alignContent: 'center',\n});\n\nconst headingStyles = css(\n  p24Medium,\n  setCssVar('currentTextColor', cssVar('strongTextColor')),\n  {\n    paddingBottom: '6px',\n    textAlign: 'center',\n  }\n);\n\nconst descriptionStyles = css(p14Regular, {\n  color: cssVar('weakTextColor'),\n  textAlign: 'center',\n});\n\nexport interface AuthContentProps {\n  title: string;\n  description: string;\n}\n\nexport const AuthContent = ({\n  title,\n  description,\n}: AuthContentProps): ReturnType<FC> => {\n  return (\n    <div css={authContentWrapperStyles}>\n      <div css={deciLogoWrapper}>\n        <Deci />\n      </div>\n      <h1 css={headingStyles}>{title}</h1>\n      <p css={css(descriptionStyles)}>{description}</p>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { cssVar, p13Regular, p13Bold } from '../../primitives';\n\nconst signupContentWrapperStyles = css({\n  width: '100%',\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst signupTeaserWrapperStyles = css({\n  width: '100%',\n  textAlign: 'center',\n  marginTop: '0.5rem',\n});\n\nconst teaserStyles = css(p13Regular, {\n  color: cssVar('weakTextColor'),\n});\n\nconst joinStyles = css(p13Bold, {\n  marginTop: '0.25rem',\n  color: cssVar('normalTextColor'),\n});\n\nexport const SignUpContent: FC = () => {\n  return (\n    <div css={signupContentWrapperStyles}>\n      <div css={signupTeaserWrapperStyles}>\n        <p css={teaserStyles}>\n          No account?{' '}\n          <a\n            css={joinStyles}\n            href=\"https://rcagp49qi5w.typeform.com/to/JUOinTMW\"\n          >\n            Join our private beta waitlist\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC, useCallback, useRef, useState } from 'react';\nimport { Button, InputField } from '../../atoms';\nimport {\n  AuthContent,\n  SignUpConditionsContent,\n  SignUpContent,\n} from '../../molecules';\nimport { cssVar } from '../../primitives';\n\nconst outerBorderStyles = css({\n  border: `1px solid ${cssVar('borderColor')}`,\n  boxShadow: `0px 2px 16px ${cssVar('highlightColor')}`,\n  borderRadius: '8px',\n});\n\nconst outerWrapperStyles = css({\n  display: 'grid',\n  justifyItems: 'center',\n  alignContent: 'center',\n\n  padding: '16px',\n});\n\nconst wrapperStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  maxWidth: '440px',\n\n  gridGap: '12px',\n\n  padding: '24px 12px',\n});\n\nconst actionWrapperStyles = css({\n  marginTop: '10px',\n  display: 'grid',\n  width: '100%',\n});\n\nconst LoginForm = ({ onSubmit }: LoginPageProps) => {\n  const formRef = useRef<HTMLFormElement>(null);\n  const [formValid, setFormValid] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onChangeEmail = (newEmail: string) => {\n    setEmail(newEmail);\n\n    // ref must be set here\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    setFormValid(formRef.current!.checkValidity());\n  };\n\n  return (\n    <>\n      <form\n        ref={formRef}\n        css={{\n          justifySelf: 'stretch',\n\n          display: 'grid',\n          gridGap: '12px',\n        }}\n        onSubmit={async (event) => {\n          event.preventDefault();\n          setIsSubmitting(true);\n          try {\n            await onSubmit(email);\n          } finally {\n            setIsSubmitting(false);\n          }\n        }}\n      >\n        <InputField\n          autoFocus\n          placeholder=\"Your Email\"\n          type=\"email\"\n          required\n          value={email}\n          onChange={onChangeEmail}\n        />\n        <Button submit disabled={!formValid || isSubmitting}>\n          {isSubmitting ? 'Please wait...' : 'Submit'}\n        </Button>\n      </form>\n      <SignUpConditionsContent />\n    </>\n  );\n};\n\nexport interface LoginPageProps {\n  onSubmit: (email: string) => void | Promise<void>;\n}\n\nexport const LoginPage = ({ onSubmit }: LoginPageProps): ReturnType<FC> => {\n  const [usingEmail, setUsingEmail] = useState(false);\n\n  const continueWithEmail = useCallback(() => setUsingEmail(true), []);\n\n  return (\n    <div css={outerWrapperStyles}>\n      <div css={[wrapperStyles, outerBorderStyles]}>\n        <AuthContent\n          title={\n            usingEmail ? 'Continue with an email link' : 'Log in to Decipad'\n          }\n          description={\n            usingEmail\n              ? 'Enter your email and we will send you a link'\n              : 'A new way to make sense of numbers'\n          }\n        />\n        {usingEmail ? (\n          <LoginForm onSubmit={onSubmit} />\n        ) : (\n          <div css={actionWrapperStyles}>\n            <Button onClick={continueWithEmail}>Continue with email</Button>\n            <SignUpContent />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { Button } from '../../atoms';\nimport { AuthContent } from '../../molecules';\nimport { cssVar, setCssVar } from '../../primitives';\n\nconst buttonWrapperStyles = css({\n  width: '100%',\n  marginTop: '12px',\n  textDecoration: 'none',\n  ...setCssVar('currentTextColor', cssVar('weakTextColor')),\n});\n\nconst outerBorderStyles = css({\n  border: `1px solid ${cssVar('borderColor')}`,\n  boxShadow: `0px 2px 16px ${cssVar('highlightColor')}`,\n  borderRadius: '8px',\n});\n\nconst outerWrapperStyles = css({\n  display: 'grid',\n  justifyItems: 'center',\n  alignContent: 'center',\n\n  padding: '16px',\n});\n\nconst wrapperStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  maxWidth: '440px',\n\n  gridGap: '12px',\n\n  padding: '24px 12px',\n});\n\nexport const VerifyEmail = ({ email }: { email: string }): ReturnType<FC> => {\n  return (\n    <div css={outerWrapperStyles}>\n      <div\n        data-testid=\"login-instructions\"\n        css={[wrapperStyles, outerBorderStyles]}\n      >\n        <AuthContent\n          title=\"Check your inbox!\"\n          description={`Open the link sent to ${email}`}\n        />\n\n        <div css={buttonWrapperStyles}>\n          <Button href=\"/\">Back to log in</Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport { signIn } from 'next-auth/react';\nimport { ErrorPage, LoginPage, VerifyEmail } from '@decipad/ui';\nimport { loadWorkspaces } from '../../App';\n\ntype Status =\n  | {\n      kind: 'initial';\n    }\n  | {\n      kind: 'success';\n      email: string;\n    }\n  | {\n      kind: 'error';\n      error: string;\n    };\n\nconst errorMessage = (error: string) => {\n  if (error.startsWith('Error:')) {\n    return error.substring('Error:'.length);\n  }\n  return error;\n};\n\nexport const Login: FC = () => {\n  const [status, setStatus] = useState<Status>({ kind: 'initial' });\n\n  switch (status.kind) {\n    case 'initial':\n      return (\n        // proper back to login without url change\n        <LoginPage\n          onSubmit={async (email) => {\n            try {\n              const resp = await signIn('email', { email, redirect: false });\n              if (!resp) {\n                setStatus({ kind: 'error', error: 'No response' });\n              } else if (resp.ok) {\n                setStatus({ kind: 'success', email });\n                // User will likely click the link in the email now, so let's get workspaces cached already for faster load\n                loadWorkspaces();\n              } else {\n                setStatus({\n                  kind: 'error',\n                  error: resp.error\n                    ? errorMessage(resp.error.trim())\n                    : 'Unknown error',\n                });\n              }\n            } catch (error) {\n              console.error('Failed to log in', error);\n              setStatus({ kind: 'error', error: (error as Error).message });\n            }\n          }}\n        />\n      );\n    case 'success':\n      return <VerifyEmail email={status.email} />;\n    case 'error':\n      return <ErrorPage Heading=\"h1\" messages={status.error.split('.')} />;\n  }\n};\n","import { useSession } from 'next-auth/react';\nimport { FC, ReactNode } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { LoadingLogo } from '@decipad/ui';\nimport { SECRET_URL_PARAM } from '@decipad/routing';\nimport { Login } from './Login';\n\ninterface RequireSessionProps {\n  readonly allowSecret?: boolean;\n\n  readonly children: ReactNode;\n}\n\nexport const RequireSession: FC<RequireSessionProps> = ({\n  allowSecret = false,\n  children,\n}: RequireSessionProps): ReturnType<FC> => {\n  const { status, data: session } = useSession();\n\n  const { search } = useLocation();\n  const secret = new URLSearchParams(search).get(SECRET_URL_PARAM);\n\n  if (session || (allowSecret && secret)) {\n    return <>{children}</>;\n  }\n\n  if (status === 'loading') {\n    return <LoadingLogo />;\n  }\n\n  return <Login />;\n};\n","import { ClientEvent, ClientEventsContext } from '@decipad/client-events';\nimport { useSession } from 'next-auth/react';\nimport { ReactNode, FC, useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { hasUpdate } from './providers/UpdatesProvider';\n\ntype PageEvent = ClientEvent & { type: 'page' };\ntype PlainPageEvent = PageEvent;\n\ninterface RouteEventsProps {\n  children: ReactNode;\n  category: PlainPageEvent['category'];\n}\n\nexport function RouteEvents({\n  children,\n  category,\n}: RouteEventsProps): ReturnType<FC> {\n  const clientEvent = useContext(ClientEventsContext);\n  const { pathname: url } = useLocation();\n  const { status } = useSession();\n\n  useEffect(() => {\n    // reload on location changes\n    if (hasUpdate() && status === 'authenticated') {\n      global.location.reload();\n    }\n  }, [status, url]);\n\n  useEffect(() => {\n    clientEvent({ type: 'page', category, url });\n  }, [clientEvent, category, url]);\n\n  return <>{children}</>;\n}\n","import { useEffect } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { BrowserTracing } from '@sentry/tracing';\nimport {\n  createRoutesFromChildren,\n  matchRoutes,\n  useLocation,\n  useNavigationType,\n} from 'react-router-dom';\nimport { AnalyticsBrowser } from '@segment/analytics-next';\nimport { isSupportedBrowser } from '@decipad/support';\n\nconst sentryDsn = process.env.REACT_APP_SENTRY_DSN;\n\nconst analytics = (): AnalyticsBrowser | undefined => {\n  const writeKey = process.env.REACT_APP_ANALYTICS_WRITE_KEY;\n  if (writeKey) {\n    return AnalyticsBrowser.load({ writeKey });\n  }\n  return undefined;\n};\n\nlet sentryInitialised = false;\n\nexport const initSentry = () => {\n  if (sentryInitialised) {\n    return;\n  }\n  sentryInitialised = true;\n  Sentry.init({\n    beforeSend: (event: Sentry.Event) => {\n      if (!isSupportedBrowser()) {\n        return null;\n      }\n      event.exception?.values?.forEach((error) => {\n        if (!error.mechanism?.handled) {\n          return;\n        }\n        analytics()?.track('error', {\n          type: error.type,\n          name: error.value,\n          stack: error.stacktrace,\n          url: global.location.pathname,\n          sentryEventId: event.event_id,\n        });\n      });\n\n      return event;\n    },\n    dsn: sentryDsn,\n    integrations: [\n      new BrowserTracing({\n        routingInstrumentation: Sentry.reactRouterV6Instrumentation(\n          useEffect,\n          useLocation,\n          useNavigationType,\n          createRoutesFromChildren,\n          matchRoutes\n        ),\n      }),\n    ],\n    tracesSampleRate: 0.1,\n  });\n};\n","import { useEffect } from 'react';\n\nexport const useWindowListener = <K extends keyof WindowEventMap>(\n  type: K,\n  listener: (this: Window, event: WindowEventMap[K]) => void,\n  capture?: boolean // do not allow EventListenerOptions because they re-run the effect unless memo-ed\n): void =>\n  useEffect(() => {\n    window.addEventListener(type, listener, capture);\n    return () => window.removeEventListener(type, listener, capture);\n  }, [listener, capture, type]);\n","import {\n  Dispatch,\n  RefObject,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nexport const useMounted = (): RefObject<boolean> => {\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return mounted;\n};\n\nexport function useSafeState<S = undefined>(): [\n  S | undefined,\n  Dispatch<SetStateAction<S | undefined>>\n];\nexport function useSafeState<S>(\n  initialState: S | (() => S)\n): [S, Dispatch<SetStateAction<S>>];\nexport function useSafeState<S>(\n  initialState?: S | (() => S)\n): [S | undefined, Dispatch<SetStateAction<S | undefined>>] {\n  const mounted = useMounted();\n  const [state, setState] = useState<S | undefined>(initialState);\n\n  const setSafeState = useCallback(\n    (value: S) => {\n      if (mounted.current) {\n        setState(value);\n      } else {\n        // eslint-disable-next-line no-console\n        console.log('not mounted');\n      }\n    },\n    [mounted]\n  );\n  return [state, setSafeState as Dispatch<SetStateAction<S | undefined>>];\n}\n","import { useEffect, useState, useRef } from 'react';\n\nexport const DELAY_VALUE_TIMEOUT = 1000;\n\n/**\n * Make `true` only appear 1 second later. Used for delaying the display of errors.\n */\nexport const useDelayedTrue = (\n  currentBoolean: boolean,\n  delayValueTimeout = DELAY_VALUE_TIMEOUT\n) => {\n  const [isTrue, setIsTrue] = useState(false);\n\n  useEffect(() => {\n    if (currentBoolean) {\n      setIsTrue(false);\n      const timeout = setTimeout(() => {\n        setIsTrue(true);\n      }, delayValueTimeout);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n    setIsTrue(false);\n    return () => {};\n  }, [currentBoolean, delayValueTimeout]);\n\n  return currentBoolean === false ? false : isTrue;\n};\n\n/**\n * Until it's time to reveal an error, show the latest good thing.\n *\n * Used to delay showing type errors in language results.\n *\n * @example\n * const someValue = useSomeValueThatMayBeOk()\n *\n * // Return `someValue` if OK, otherwise returns current error after a delay\n * const delayedValue = useDelayedValue(someValue, !isOk(someValue));\n */\nexport const useDelayedValue = <T>(\n  /** The value to be returned (now or later) */\n  freshValue: T,\n  /** When true, the value is shown later. When false, value is immediately shown */\n  shouldDelayAtTheMoment: boolean\n): T => {\n  const latestValue = useRef(freshValue);\n\n  useEffect(() => {\n    if (!shouldDelayAtTheMoment) {\n      latestValue.current = freshValue;\n    }\n  }, [freshValue, shouldDelayAtTheMoment]);\n\n  const delayedBoolean = useDelayedTrue(shouldDelayAtTheMoment);\n\n  if (shouldDelayAtTheMoment && !delayedBoolean) {\n    return latestValue.current;\n  }\n  return freshValue;\n};\n","import { dequal } from 'dequal';\nimport {\n  useEffect,\n  createElement,\n  Fragment,\n  ReactNode,\n  useState,\n  useRef,\n} from 'react';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface SelectableContext<T> {\n  subject: BehaviorSubject<T>;\n  Provider: React.ComponentType<{ value: T; children: ReactNode }>;\n}\n\n/**\n * Create a context that can be subscribed partially with `useSelectableContext`\n *\n * @example\n * const context = createSelectableContext({ a: 1, b: 2 })\n * // ... in a component somewhere\n * <context.Provider value={{ a: 2, b: 2 }}>\n *  ...children...\n * </context.Provider>\n */\nexport function createSelectableContext<T>(\n  initialValue: T\n): SelectableContext<T> {\n  const subject = new BehaviorSubject(initialValue);\n\n  const Provider = ({ children, value }: { children: ReactNode; value: T }) => {\n    useEffect(() => {\n      if (!dequal(subject.value, value)) {\n        subject.next(value);\n      }\n    }, [value]);\n    return createElement(Fragment, {}, children);\n  };\n\n  return { subject, Provider };\n}\n\n/**\n * use a context created with `createSelectableContext` as a hook.\n *\n * `selector` is passed to return a value from the context, usually some subset of it.\n *\n * @example\n * const context = createSelectableContext({ a: 1, b: 2 })\n * // ... in a component somewhere\n * const a = useSelectableContext(context, context => context.a)\n */\nexport function useSelectableContext<T, TRet>(\n  ContextClass: SelectableContext<T>,\n  selector: (context: T) => TRet\n) {\n  const [value, setValue] = useState(() =>\n    selector(ContextClass.subject.value)\n  );\n\n  const selectorRef = useRef(selector);\n  useEffect(() => {\n    selectorRef.current = selector;\n  }, [selector]);\n\n  useEffect(() => {\n    const sub = ContextClass.subject.subscribe((context) =>\n      setValue((oldValue) => {\n        const newValue = selectorRef.current(context);\n        if (dequal(oldValue, newValue)) {\n          return oldValue;\n        }\n        return newValue;\n      })\n    );\n    return () => sub.unsubscribe();\n  }, [ContextClass.subject]);\n\n  return value;\n}\n","import { useRef, useCallback } from 'react';\nimport { useWindowListener } from './event-listener';\n\n/**\n * Detects when the user clicks outside of the element.\n * @param {() => void} onClickOutside - The callback function when the user clicks outside the element\n */\nexport function useActiveElement(onClickOutside: () => void) {\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClickOutside = useCallback(\n    function handleClickOutside(event: Event) {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        onClickOutside();\n      }\n    },\n    [onClickOutside]\n  );\n  useWindowListener('mousedown', handleClickOutside);\n  return ref;\n}\n","import { identity } from 'ramda';\nimport { useEffect, useState } from 'react';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport function useBehaviorSubject<T>(\n  subject: BehaviorSubject<T>,\n  pipe: (obs: Observable<T>) => Observable<T> = identity\n) {\n  const [value, setValue] = useState(subject.value);\n\n  useEffect(() => {\n    const subscription = pipe(subject).subscribe(setValue);\n\n    return () => subscription.unsubscribe();\n  }, [subject, pipe]);\n\n  return value;\n}\n","/* eslint-disable no-underscore-dangle */\nimport { useMemo } from 'react';\n\ntype WindowWithSSR = typeof window & {\n  __DECI_IS_SSR__?: boolean;\n};\n\nexport const useCanUseDom = () => {\n  return useMemo(\n    () =>\n      !!(\n        typeof window !== 'undefined' &&\n        !(window as WindowWithSSR).__DECI_IS_SSR__ &&\n        window.document &&\n        window.document.createElement\n      ),\n    []\n  );\n};\n","import { route, stringParser } from 'typesafe-routes';\n\nconst createNew = route('/create-new', {}, {});\nconst edit = route('/edit', {}, {});\nconst archived = route('/archived', {}, {});\nconst shared = route('/shared', {}, {});\n\nconst section = route('/section/:sectionId', { sectionId: stringParser }, {});\n\nconst workspace = route(\n  '/:workspaceId',\n  { workspaceId: stringParser },\n  {\n    createNew,\n    edit,\n    archived,\n    shared,\n    section,\n  }\n);\n\nexport default route('/w', {}, { workspace });\n","import { Parser } from 'typesafe-routes';\n\nexport interface DescriptiveId {\n  readonly id: string;\n  // not using ?. but requiring explicit undefined to avoid creating non-pretty paths unless the user types an id-only URL\n  readonly name: string | undefined;\n}\n\nexport const descriptiveIdParser: Parser<DescriptiveId> = {\n  serialize: ({ id, name }) => {\n    if (id.includes(':')) {\n      throw new Error(\n        `Id must not include separator character \":\", but received the following id that does: ${id}`\n      );\n    }\n    return (name ? `${name.replace(/\\W+/g, '-')}:` : '') + id;\n  },\n  parse: (pathSegment) => {\n    // Encoding seems to be done for us, but not decoding, not sure why.\n    const [id] = decodeURIComponent(pathSegment).split(':').slice(-1);\n    return {\n      id,\n      // There is probably no use case for retrieving the pretty name back from the URL.\n      name: undefined,\n    };\n  },\n};\n","export const SECRET_URL_PARAM = 'secret';\n","import { route, stringParser } from 'typesafe-routes';\nimport { descriptiveIdParser } from './shared/descriptive-id';\nimport { SECRET_URL_PARAM } from './shared/secret';\n\nconst notebook = route(\n  `/:notebook&:${SECRET_URL_PARAM}?`,\n  { notebook: descriptiveIdParser, [SECRET_URL_PARAM]: stringParser },\n  {}\n);\n\nconst acceptInvite = route(\n  `/:notebook/accept-invite/:invite`,\n  { notebook: descriptiveIdParser, invite: descriptiveIdParser },\n  {}\n);\n\nexport default route('/n', {}, { notebook, acceptInvite });\n","import { route } from 'typesafe-routes';\n\nexport default route('/playground', {}, {});\n","import { route, intParser } from 'typesafe-routes';\n\nconst step = route('/:step', { step: intParser }, {});\n\nexport default route('/onboard', {}, { step });\n","import { route, stringParser } from 'typesafe-routes';\n\nconst page = route('/:name', { name: stringParser }, {});\n\nexport default route('/docs', {}, { page });\n","import { route } from 'typesafe-routes';\n\nexport default route('/.storybook', {}, {});\n","/* eslint-disable import/first */\n\n// client side routes\n\nexport { default as workspaces } from './workspaces';\nexport { default as notebooks } from './notebooks';\nexport { default as playground } from './playground';\nexport { default as onboard } from './onboard';\n\n// server side routes\n\nimport docs from './docs';\nimport storybook from './storybook';\n\nexport { docs, storybook };\n\n/**\n * All routes that are not included in the main frontend bundle\n * and must thus be loaded from the server using a full-page navigation.\n * All sub-routes of a server-side route must also be server-side.\n */\nexport const SERVER_SIDE_ROUTES = [docs, storybook];\n\n// misc\n\nexport { SECRET_URL_PARAM } from './shared/secret';\nexport type { RouteNode } from 'typesafe-routes';\nexport { useRouteParams } from 'typesafe-routes/react-router';\n","/* eslint-disable no-underscore-dangle */\ntype WindowWithSSR = typeof window & {\n  __DECI_IS_SSR__?: boolean;\n};\n\nexport const isServerSideRendering = () => {\n  return !!(window as WindowWithSSR).__DECI_IS_SSR__;\n};\n","import Bowser from 'bowser';\n\nexport const isSupportedBrowser = () => {\n  const browser = Bowser.getParser(window.navigator.userAgent);\n\n  return browser.satisfies({\n    chrome: '>=100',\n  });\n};\n","export type SupportFeature = 'websockets' | 'indexeddb';\n\nexport const supports = (feature: SupportFeature): boolean => {\n  switch (feature) {\n    case 'websockets':\n      return typeof WebSocket !== 'undefined';\n    case 'indexeddb':\n      return typeof indexedDB !== 'undefined';\n  }\n};\n","import { createContext, useContext, ContextType, ReactNode } from 'react';\nimport { Options as ToastOptions } from 'react-toast-notifications';\n\nexport type ToastType = 'info' | 'success' | 'warning' | 'error';\nexport const ToastContext = createContext(\n  (\n    message: ReactNode | string,\n    type: ToastType,\n    _options?: ToastOptions\n  ): void => {\n    console.error(\n      'Attempted to create a toast of type',\n      type,\n      'but there is no way of showing toasts provided. Toast message:',\n      message\n    );\n    throw new Error(\n      'Attempted to create a toast but there is no way of showing toasts provided.'\n    );\n  }\n);\n\nexport const useToast = (): ContextType<typeof ToastContext> =>\n  useContext(ToastContext);\n","import { noop } from '@decipad/utils';\nimport { css, CSSObject } from '@emotion/react';\nimport { MouseEvent, ReactNode, useCallback } from 'react';\nimport {\n  cssVar,\n  grey400,\n  grey700,\n  offBlack,\n  orange300,\n  orange800,\n  p13Bold,\n  red200,\n  red400,\n  red500,\n  red800,\n  setCssVar,\n  transparency,\n  white,\n} from '../../primitives';\nimport { Anchor } from '../../utils';\n\nconst styles = css(p13Bold, {\n  flexGrow: 1,\n\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n\n  borderRadius: '6px',\n  boxShadow: `0px 1px 12px -4px ${transparency(grey700, 0.04).rgba}`,\n});\n\nconst typeStyles: Record<\n  NonNullable<ButtonProps['type']>,\n  { enabled: CSSObject; disabled: CSSObject }\n> = {\n  primary: {\n    enabled: {\n      backgroundColor: cssVar('buttonPrimaryBackground'),\n      ...setCssVar('currentTextColor', cssVar('buttonPrimaryText')),\n      ':hover, :focus': {\n        backgroundColor: cssVar('buttonPrimaryHover'),\n      },\n    },\n    disabled: {\n      backgroundColor: cssVar('buttonPrimaryDisabledBackground'),\n      ...setCssVar('currentTextColor', cssVar('buttonPrimaryDisabledText')),\n    },\n  },\n  primaryBrand: {\n    enabled: {\n      backgroundColor: cssVar('buttonBrandBackground'),\n      ...setCssVar('currentTextColor', cssVar('buttonBrandText')),\n      ':hover, :focus': {\n        backgroundColor: cssVar('buttonBrandHover'),\n      },\n    },\n    disabled: {\n      backgroundColor: cssVar('buttonBrandDisabledBackground'),\n      ...setCssVar('currentTextColor', cssVar('buttonBrandDisabledText')),\n    },\n  },\n  secondary: {\n    enabled: {\n      backgroundColor: cssVar('buttonSecondaryBackground'),\n      ...setCssVar('currentTextColor', cssVar('buttonSecondaryText')),\n      ':hover, :focus': {\n        backgroundColor: cssVar('buttonSecondaryHover'),\n      },\n    },\n    disabled: {\n      backgroundColor: cssVar('buttonSecondaryDisabledBackground'),\n      ...setCssVar('currentTextColor', cssVar('buttonSecondaryDisabledText')),\n    },\n  },\n  danger: {\n    enabled: {\n      backgroundColor: red500.rgb,\n      ...setCssVar('currentTextColor', white.rgb),\n      ':hover, :focus': {\n        backgroundColor: red400.rgb,\n      },\n    },\n    disabled: {\n      backgroundColor: red200.rgb,\n      ...setCssVar('currentTextColor', white.rgb),\n    },\n  },\n  text: {\n    enabled: {\n      ...setCssVar('currentTextColor', offBlack.rgb),\n    },\n    disabled: {\n      ...setCssVar('currentTextColor', grey400.rgb),\n    },\n  },\n  darkDanger: {\n    enabled: {\n      backgroundColor: red800.rgb,\n      ...setCssVar('currentTextColor', white.rgb),\n    },\n    disabled: {\n      ...setCssVar('currentTextColor', grey400.rgb),\n    },\n  },\n  darkWarning: {\n    enabled: {\n      backgroundColor: orange800.rgb,\n      ...setCssVar('currentTextColor', white.rgb),\n    },\n    disabled: {\n      ...setCssVar('currentTextColor', grey400.rgb),\n    },\n  },\n  darkWarningText: {\n    enabled: {\n      ...setCssVar('currentTextColor', orange800.rgb),\n    },\n    disabled: {\n      ...setCssVar('currentTextColor', orange300.rgb),\n    },\n  },\n};\n\nconst sizeStyles: Record<NonNullable<ButtonProps['size']>, CSSObject> = {\n  normal: {\n    padding: '8px 14px',\n  },\n  extraSlim: {\n    padding: '6px 14px',\n  },\n  extraLarge: {\n    padding: '12px 24px',\n  },\n};\n\nconst enabledStyles = css({ cursor: 'pointer' });\nconst disabledStyles = css({ cursor: 'unset' });\n\ntype ButtonProps = {\n  readonly type?:\n    | 'primary'\n    | 'primaryBrand'\n    | 'secondary'\n    | 'danger'\n    | 'text'\n    | 'darkDanger'\n    | 'darkWarning'\n    | 'darkWarningText';\n  readonly children: ReactNode;\n  readonly disabled?: boolean;\n  readonly size?: 'normal' | 'extraSlim' | 'extraLarge';\n  readonly testId?: string;\n  readonly href?: string;\n  readonly tabIndex?: number;\n  readonly autoFocus?: boolean;\n  readonly onClick?: () => void;\n  readonly submit?: boolean;\n};\n\nexport const Button = ({\n  type = 'secondary',\n  size = 'normal',\n  submit = type === 'primary' || type === 'primaryBrand',\n  disabled = false,\n  autoFocus,\n  testId = '',\n  tabIndex,\n  children,\n  onClick = noop,\n  href,\n}: ButtonProps): ReturnType<React.FC> => {\n  const onButtonClick = useCallback(\n    (ev: MouseEvent) => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      onClick();\n    },\n    [onClick]\n  );\n\n  return href ? (\n    <Anchor\n      href={disabled ? '' : href}\n      css={css([\n        styles,\n        typeStyles[type][disabled ? 'disabled' : 'enabled'],\n        sizeStyles[size],\n        disabled ? disabledStyles : enabledStyles,\n      ])}\n      onClick={onClick}\n    >\n      {children}\n    </Anchor>\n  ) : (\n    <button\n      autoFocus={autoFocus}\n      disabled={disabled}\n      type={submit ? 'submit' : 'button'}\n      css={css([\n        styles,\n        typeStyles[type][disabled ? 'disabled' : 'enabled'],\n        sizeStyles[size],\n        disabled ? disabledStyles : enabledStyles,\n      ])}\n      tabIndex={tabIndex}\n      onClick={submit ? onClick : onButtonClick}\n      data-testid={testId}\n    >\n      {children}\n    </button>\n  );\n};\n","import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { cssVar, p14Regular, setCssVar } from '../../primitives';\n\nconst inputStyles = css({\n  padding: '12px',\n\n  backgroundColor: cssVar('backgroundColor'),\n\n  ...p14Regular,\n  ...setCssVar('currentTextColor', cssVar('strongTextColor')),\n  '&::placeholder': {\n    ...setCssVar('currentTextColor', cssVar('weakTextColor')),\n  },\n});\n\ntype FieldType =\n  | 'text'\n  | 'search'\n  | 'email'\n  | 'tel'\n  | 'url'\n  | 'password'\n  | 'date';\nexport type InputFieldProps = {\n  readonly type?: FieldType;\n  readonly required?: boolean;\n  readonly autoFocus?: boolean;\n  readonly disabled?: boolean;\n\n  readonly placeholder?: string;\n\n  readonly value: string;\n  readonly tabIndex?: number;\n  readonly onChange?: (newValue: string) => void;\n  readonly onEnter?: () => void;\n};\n\nexport const InputField = ({\n  type = 'text',\n  required = false,\n  autoFocus = false,\n  disabled = false,\n\n  placeholder,\n\n  value,\n  tabIndex,\n  onChange = noop,\n  onEnter = noop,\n}: InputFieldProps): ReturnType<FC> => {\n  return (\n    <input\n      autoFocus={autoFocus}\n      disabled={disabled}\n      css={[\n        inputStyles,\n        type !== 'search'\n          ? {\n              border: `1px solid ${cssVar('borderColor')}`,\n              borderRadius: '6px',\n            }\n          : { width: '100%', padding: 0 },\n      ]}\n      type={type}\n      required={required}\n      placeholder={placeholder}\n      value={value}\n      tabIndex={tabIndex}\n      onChange={(event) => onChange(event.currentTarget.value)}\n      onKeyDown={(event) => {\n        if (event.key === 'Enter') {\n          onEnter();\n        }\n      }}\n    />\n  );\n};\n","import { css } from '@emotion/react';\nimport { HTMLPropsAs } from '@udecode/plate';\nimport { malibu700 } from '../../primitives';\nimport { Anchor } from '../../utils';\n\nconst styles = css({\n  display: 'inline',\n  color: malibu700.rgb,\n  textDecoration: 'underline',\n\n  ':hover,:visited:hover': {\n    color: malibu700.rgb,\n  },\n  ':visited': { color: malibu700.rgb },\n});\n\ninterface LinkProps extends HTMLPropsAs<'a'> {}\n\nexport const Link = ({\n  children,\n  ...props\n}: LinkProps): ReturnType<React.FC> => {\n  return (\n    <Anchor css={styles} {...(props as any)}>\n      {children}\n    </Anchor>\n  );\n};\n","import { css } from '@emotion/react';\nimport * as RadixDropdownMenu from '@radix-ui/react-dropdown-menu';\nimport { ComponentProps, FC, ReactNode, useCallback } from 'react';\nimport { menu } from '../../styles';\n\nconst iconWrapperStyles = css({\n  display: 'grid',\n  alignItems: 'center',\n  height: '16px',\n  width: '16px',\n});\n\nconst childrenWrapperStyles = css({\n  flexGrow: 1,\n});\n\nexport interface MenuItemProps {\n  readonly children: ReactNode;\n  readonly icon?: ReactNode;\n  readonly disabled?: boolean;\n  readonly onPointerMove?: ComponentProps<\n    typeof RadixDropdownMenu.Item\n  >['onPointerMove'];\n  readonly onFocus?: ComponentProps<typeof RadixDropdownMenu.Item>['onFocus'];\n  readonly onSelect?: () => void;\n  readonly selected?: boolean;\n  readonly itemAlignment?: 'left' | 'right' | 'center';\n  readonly testid?: string;\n}\n\nexport const MenuItem: FC<MenuItemProps> = ({\n  children,\n  icon,\n  onPointerMove,\n  onFocus,\n  onSelect,\n  selected,\n  disabled,\n  itemAlignment,\n  testid = '',\n}) => {\n  const onSelectItem = useCallback(\n    (event: Event) => {\n      event.stopPropagation();\n      if (onSelect) {\n        onSelect();\n      }\n    },\n    [onSelect]\n  );\n  return (\n    <RadixDropdownMenu.Item\n      css={disabled ? menu.itemDisabledStyles : menu.itemStyles}\n      onSelect={onSelectItem}\n      data-selected={selected}\n      onPointerMove={onPointerMove}\n      onFocus={onFocus}\n      disabled={disabled}\n      data-testid={testid}\n    >\n      {icon != null && <span css={iconWrapperStyles}>{icon}</span>}\n      <span\n        css={[\n          childrenWrapperStyles,\n          itemAlignment && {\n            textAlign: itemAlignment,\n          },\n        ]}\n      >\n        {children}\n      </span>\n    </RadixDropdownMenu.Item>\n  );\n};\n","import { FC } from 'react';\nimport { css } from '@emotion/react';\nimport * as RadixDropdownMenu from '@radix-ui/react-dropdown-menu';\nimport { cssVar } from '../../primitives';\n\nconst styles = css({\n  backgroundColor: cssVar('strongerHighlightColor'),\n  height: 1,\n  margin: '6px 6px',\n});\n\nexport const MenuSeparator = (): ReturnType<FC> => {\n  return <RadixDropdownMenu.Separator css={styles} />;\n};\n","import { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { cssVar, p14Regular, setCssVar } from '../../primitives';\n\nconst inputStyles = css({\n  padding: '12px',\n\n  backgroundColor: cssVar('backgroundColor'),\n\n  border: `1px solid ${cssVar('borderColor')}`,\n  borderRadius: '6px',\n\n  ...p14Regular,\n  ...setCssVar('currentTextColor', cssVar('strongTextColor')),\n  '&::placeholder': {\n    ...setCssVar('currentTextColor', cssVar('weakTextColor')),\n  },\n});\n\nexport type TextareaFieldProps = {\n  readonly autoFocus?: boolean;\n  readonly height?: number;\n  readonly placeholder?: string;\n  readonly required?: boolean;\n  readonly value: string;\n  readonly onKeyUp?: (event: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  readonly onKeyDown?: (\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n  ) => void;\n  readonly onChange?: (newValue: string) => void;\n};\n\nexport const TextareaField = ({\n  autoFocus = false,\n  height = 3,\n  placeholder,\n  required = false,\n  value,\n  onChange = noop,\n  onKeyUp = noop,\n  onKeyDown = noop,\n}: TextareaFieldProps): ReturnType<FC> => {\n  return (\n    <textarea\n      css={inputStyles}\n      autoFocus={autoFocus}\n      onChange={(event) => onChange(event.currentTarget.value)}\n      placeholder={placeholder}\n      onKeyUp={onKeyUp}\n      onKeyDown={onKeyDown}\n      required={required}\n      rows={height}\n      value={value}\n    />\n  );\n};\n","import { useCanUseDom } from '@decipad/react-utils';\nimport { css, SerializedStyles } from '@emotion/react';\nimport {\n  Arrow,\n  Content,\n  Portal,\n  Root,\n  Trigger,\n} from '@radix-ui/react-hover-card';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { noop } from 'lodash';\nimport { FC, MouseEventHandler, useCallback } from 'react';\nimport { cssVar, p12Medium } from '../../primitives';\nimport { useIsDragging } from './useIsDragging';\n\nconst contentWrapperStyles = css({\n  background: cssVar('tooltipBackground'),\n\n  borderRadius: '6px',\n\n  maxWidth: '300px',\n  padding: '12px 16px',\n  wordBreak: 'break-word',\n  zIndex: '1000',\n});\n\nconst smallVariantStyles = (\n  side: 'top' | 'right' | 'bottom' | 'left' | undefined\n) =>\n  css([\n    {\n      padding: '8px 12px',\n    },\n    side === 'left' && { marginLeft: '-1px' },\n    side === 'top' && { marginTop: '-1px' },\n    side === 'right' && { marginRight: '-1px' },\n    side === 'bottom' && { marginBottom: '-1px' },\n  ]);\n\nconst contentStyles = css(p12Medium, {\n  color: cssVar('backgroundColor'),\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  gap: '4px',\n});\n\nconst arrowStyles = css({\n  fill: cssVar('tooltipBackground'),\n});\n\nconst clickableStyles = css({\n  cursor: 'pointer',\n});\n\ninterface TooltipProps {\n  readonly children?: React.ReactNode;\n  readonly trigger?: React.ReactNode;\n\n  readonly align?: 'start' | 'center' | 'end';\n\n  readonly variant?: 'normal' | 'small';\n  readonly side?: 'top' | 'right' | 'bottom' | 'left';\n  readonly hoverOnly?: boolean;\n  readonly onClick?: MouseEventHandler<HTMLDivElement>;\n  readonly stopClickPropagation?: boolean;\n\n  readonly open?: boolean;\n  readonly onChangeOpen?: (open: boolean) => void;\n\n  readonly wrapperStyles?: SerializedStyles;\n}\n\nexport const Tooltip = ({\n  children,\n  trigger,\n  open,\n  onChangeOpen,\n  hoverOnly = false,\n  variant,\n  onClick,\n  stopClickPropagation = false,\n  side,\n  align,\n  wrapperStyles = css(),\n}: TooltipProps): ReturnType<FC> => {\n  const isDragging = useIsDragging();\n  // eslint-disable-next-line no-param-reassign\n  [open, onChangeOpen] = useControllableState({\n    prop: open,\n    onChange: onChangeOpen,\n  });\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      if (stopClickPropagation) {\n        e.stopPropagation();\n      }\n      onClick?.(e);\n    },\n    [onClick, stopClickPropagation]\n  );\n\n  return (\n    <Root\n      openDelay={100}\n      closeDelay={100}\n      open={open && !isDragging}\n      onOpenChange={hoverOnly ? noop : onChangeOpen}\n    >\n      <Trigger\n        onMouseMove={(e) => {\n          if (e.buttons) {\n            onChangeOpen?.(false);\n          }\n        }}\n        onMouseOut={() => {\n          if (hoverOnly) {\n            onChangeOpen?.(false);\n          }\n        }}\n        onMouseOver={() => {\n          if (hoverOnly) {\n            onChangeOpen?.(true);\n          }\n        }}\n        asChild\n      >\n        {trigger}\n      </Trigger>\n      {useCanUseDom() && (\n        <Portal>\n          <Content\n            side={side}\n            align={align}\n            css={[\n              contentWrapperStyles,\n              variant === 'small' && smallVariantStyles(side),\n              onClick && clickableStyles,\n              wrapperStyles,\n            ]}\n            onClick={handleClick}\n          >\n            <Arrow css={arrowStyles} width={18} height={9} offset={6} />\n            <div css={contentStyles}>{children}</div>\n          </Content>\n        </Portal>\n      )}\n    </Root>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useIsDragging = () => {\n  const [isDragging, setIsDragging] = useState(false);\n\n  useEffect(() => {\n    const onDragStart = () => {\n      setIsDragging(true);\n    };\n    const onDragEnd = () => {\n      setIsDragging(false);\n    };\n\n    document.addEventListener('dragstart', onDragStart);\n    document.addEventListener('dragend', onDragEnd);\n\n    return () => {\n      document.removeEventListener('dragstart', onDragStart);\n      document.removeEventListener('dragend', onDragEnd);\n    };\n  }, [setIsDragging]);\n\n  return isDragging;\n};\n","import { css } from '@emotion/react';\nimport * as RadixDropdownMenu from '@radix-ui/react-dropdown-menu';\nimport { FC, ReactNode, useContext } from 'react';\nimport { Caret } from '../../icons';\nimport { Depth } from '../../molecules/MenuList/MenuList';\nimport { menu } from '../../styles';\n\nconst iconWrapperStyles = css({\n  height: '16px',\n  width: '16px',\n});\n\nconst childrenWrapperStyles = css({\n  flexGrow: 1,\n});\n\nconst caretRightWrapper = css({\n  height: '16px',\n  width: '16px',\n});\n\ninterface TriggerMenuItemProps {\n  readonly children: ReactNode;\n  readonly icon?: ReactNode;\n  readonly selected?: boolean;\n}\n\nexport const TriggerMenuItem: FC<TriggerMenuItemProps> = ({\n  children,\n  icon,\n  selected,\n}) => {\n  const depth = useContext(Depth);\n  const DropdownMenuTriggerElement =\n    depth === 0 ? RadixDropdownMenu.Trigger : RadixDropdownMenu.SubTrigger;\n\n  return (\n    <DropdownMenuTriggerElement css={menu.itemStyles} data-selected={selected}>\n      {icon != null && <span css={iconWrapperStyles}>{icon}</span>}\n      <span css={childrenWrapperStyles}>{children}</span>\n      <span css={caretRightWrapper}>\n        <Caret variant=\"right\" />\n      </span>\n    </DropdownMenuTriggerElement>\n  );\n};\n","import { FC } from 'react';\nimport { cssVar } from '../../primitives';\n\nexport const ArrowDiagonalTopRight = (): ReturnType<FC> => (\n  <svg viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Arrow Diagonal Top Right</title>\n    <g opacity=\"0.5\">\n      <path\n        d=\"M2.28516 7.96484L7.15154 3.09846\"\n        stroke={cssVar('weakTextColor')}\n        strokeWidth=\"1.4\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M8.68945 2.16109V5.23507C8.68945 5.76961 8.04317 6.03731 7.66519 5.65933L4.59121 2.58535C4.21323 2.20737 4.48093 1.56109 5.01547 1.56109L8.08945 1.56109C8.42082 1.56109 8.68945 1.82972 8.68945 2.16109Z\"\n        fill={cssVar('normalTextColor')}\n      />\n    </g>\n  </svg>\n);\n","import { FC } from 'react';\nimport { cssVar } from '../../primitives';\n\ninterface CaretProps {\n  readonly variant: 'down' | 'right' | 'up';\n  readonly color?: 'weak' | 'normal';\n}\n\nexport const Caret = ({\n  variant,\n  color = 'normal',\n}: CaretProps): ReturnType<FC> => (\n  <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Caret {variant}</title>\n    <path\n      d={\n        {\n          down: 'M7.05792 9.8224L6.07961 8.59951C5.41387 7.76734 5.081 7.35125 5.08063 7.00108C5.0803 6.69654 5.21876 6.40845 5.45677 6.21846C5.73045 6 6.2633 6 7.329 6H8.90742C10.0456 6 10.6146 6 10.892 6.22944C11.133 6.42875 11.2668 6.72929 11.2538 7.04172C11.2387 7.40139 10.8581 7.82438 10.0967 8.67035L9.00885 9.87906C8.66168 10.2648 8.4881 10.4577 8.28585 10.5242C8.10837 10.5826 7.91604 10.577 7.74225 10.5084C7.5442 10.4303 7.38211 10.2276 7.05792 9.8224Z',\n          right:\n            'M9.5724 9.69208L8.34951 10.6704C7.51734 11.3361 7.10125 11.669 6.75108 11.6694C6.44654 11.6697 6.15845 11.5312 5.96846 11.2932C5.75 11.0196 5.75 10.4867 5.75 9.421L5.75 7.84258C5.75 6.70445 5.75 6.13538 5.97944 5.85799C6.17875 5.61704 6.47929 5.48319 6.79172 5.49623C7.15139 5.51125 7.57438 5.89194 8.42035 6.65331L9.62906 7.74115C10.0148 8.08832 10.2077 8.2619 10.2742 8.46415C10.3326 8.64163 10.327 8.83396 10.2584 9.00775C10.1803 9.2058 9.97763 9.36789 9.5724 9.69208Z',\n          up: 'M9.44208 7.17761L10.4204 8.40049C11.0861 9.23266 11.419 9.64875 11.4194 9.99892C11.4197 10.3035 11.2812 10.5916 11.0432 10.7815C10.7696 11 10.2367 11 9.171 11L7.59258 11C6.45445 11 5.88538 11 5.60799 10.7706C5.36704 10.5713 5.23319 10.2707 5.24623 9.95828C5.26125 9.59861 5.64194 9.17563 6.40331 8.32966L7.49115 7.12094C7.83832 6.7352 8.0119 6.54233 8.21415 6.47581C8.39163 6.41743 8.58395 6.42302 8.75775 6.4916C8.9558 6.56975 9.11789 6.77237 9.44208 7.17761Z',\n        }[variant]\n      }\n      fill={cssVar(color === 'weak' ? 'weakerTextColor' : 'normalTextColor')}\n    />\n  </svg>\n);\n","import { cssVar } from '../../primitives';\n\nexport const Chat = (): ReturnType<React.FC> => (\n  <svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Chat</title>\n    <path\n      d=\"M16 13C16 13.3536 15.8595 13.6928 15.6095 13.9428C15.3594 14.1929 15.0203 14.3333 14.6667 14.3333H6.66667L4 17V6.33333C4 5.97971 4.14048 5.64057 4.39052 5.39052C4.64057 5.14048 4.97971 5 5.33333 5H14.6667C15.0203 5 15.3594 5.14048 15.6095 5.39052C15.8595 5.64057 16 5.97971 16 6.33333V13Z\"\n      fill={cssVar('highlightColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1.2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import { cssVar } from '../../primitives';\n\nexport const Date = () => (\n  <svg\n    viewBox=\"0 0 16 16\"\n    fill={cssVar('strongHighlightColor')}\n    stroke={cssVar('strongTextColor')}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <title>Date</title>\n    <path\n      d=\"M2 4.6C2 3.71634 2.74105 3 3.65517 3H12.3448C13.259 3 14 3.71634 14 4.6V11.4C14 12.2837 13.259 13 12.3448 13H3.65517C2.74105 13 2 12.2837 2 11.4V4.6Z\"\n      strokeWidth=\"1.3\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4.68555 2V4.89672\"\n      strokeWidth=\"1.3\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M11.3125 2V4.89672\"\n      strokeWidth=\"1.3\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4.48438 6.96533H11.5193\"\n      strokeWidth=\"1.3\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import { FC } from 'react';\nimport { cssVar } from '../../primitives';\n\nexport const Deci = (): ReturnType<FC> => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 135.8752 135.8809\"\n    fill={cssVar('strongTextColor')}\n  >\n    <title>Decipad Logo</title>\n    <g>\n      <path d=\"M106.76,24.266H87.345a4.8512,4.8512,0,0,1-4.8508-4.8509V4.8509A4.8513,4.8513,0,0,0,77.6432,0H63.0848a4.8513,4.8513,0,0,0-4.8509,4.8509V19.4151a4.8513,4.8513,0,0,0,4.8509,4.8509H77.6432a4.8513,4.8513,0,0,1,4.851,4.8509V48.5321a4.8512,4.8512,0,0,0,4.8508,4.8508H106.76a4.8512,4.8512,0,0,0,4.8509-4.8508V29.1169A4.8513,4.8513,0,0,0,106.76,24.266Z\" />\n      <path d=\"M111.6092,106.7621V87.3469a4.8512,4.8512,0,0,1,4.8509-4.8508h14.5643a4.8513,4.8513,0,0,0,4.8508-4.851V63.0867a4.8512,4.8512,0,0,0-4.8508-4.8509H116.46a4.8513,4.8513,0,0,0-4.8509,4.8509V77.6451a4.8513,4.8513,0,0,1-4.8509,4.851H87.3431a4.8512,4.8512,0,0,0-4.8508,4.8508v19.4152a4.8512,4.8512,0,0,0,4.8508,4.8509h19.4152A4.8513,4.8513,0,0,0,111.6092,106.7621Z\" />\n      <path d=\"M29.115,111.6149H48.53a4.8512,4.8512,0,0,1,4.8507,4.8508V131.03a4.8513,4.8513,0,0,0,4.851,4.8509H72.79a4.8513,4.8513,0,0,0,4.851-4.8509V116.4657a4.8513,4.8513,0,0,0-4.851-4.8508H58.232a4.8513,4.8513,0,0,1-4.851-4.8509V87.3488A4.8512,4.8512,0,0,0,48.53,82.498H29.115a4.8512,4.8512,0,0,0-4.8509,4.8508V106.764A4.8513,4.8513,0,0,0,29.115,111.6149Z\" />\n      <path d=\"M24.266,29.1188V48.534a4.8512,4.8512,0,0,1-4.8509,4.8508H4.8509A4.8513,4.8513,0,0,0,0,58.2358V72.7942a4.8513,4.8513,0,0,0,4.8509,4.8509H19.4151a4.8513,4.8513,0,0,0,4.8509-4.8509V58.2358a4.8513,4.8513,0,0,1,4.8509-4.851H48.5321a4.8512,4.8512,0,0,0,4.8508-4.8508V29.1188a4.8512,4.8512,0,0,0-4.8508-4.8509H29.1169A4.8513,4.8513,0,0,0,24.266,29.1188Z\" />\n    </g>\n  </svg>\n);\n","import { cssVar } from '../../primitives';\n\nexport const Discord = (): ReturnType<React.FC> => (\n  <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Discord</title>\n\n    <path\n      d=\"M12.3066 4.32175L12.2107 4.18721L12.0595 4.12072C11.3012 3.7874 10.4911 3.54547 9.64503 3.40779L9.23987 3.34186L9.03161 3.6956C8.99092 3.76472 8.94821 3.84168 8.9061 3.92124C8.29858 3.86295 7.69388 3.86272 7.09252 3.92084C7.04928 3.84027 7.00563 3.76271 6.96457 3.69359L6.75585 3.3422L6.35244 3.40777C5.50517 3.5455 4.69399 3.78838 3.93561 4.12261L3.78306 4.18985L3.68706 4.32614C2.1634 6.48932 1.74154 8.62296 1.94965 10.7185L1.97684 10.9923L2.20211 11.1504C3.21355 11.86 4.19738 12.2928 5.16145 12.575L5.55425 12.69L5.80464 12.3662C6.01834 12.0899 6.2123 11.7978 6.38376 11.4909C7.45422 11.7327 8.5501 11.7339 9.61566 11.4937C9.78618 11.7985 9.97921 12.0909 10.1943 12.368L10.4447 12.6905L10.8366 12.5759C11.8015 12.2937 12.7864 11.8609 13.7981 11.1502L14.0228 10.9924L14.0502 10.7192C14.2946 8.28852 13.6278 6.1753 12.3066 4.32175ZM6.5617 8.38703L6.5616 8.38703L6.56162 8.39774C6.56205 8.68737 6.35426 8.85373 6.17271 8.85373C5.99781 8.85373 5.78379 8.68413 5.78379 8.39685C5.78379 8.10506 5.9925 7.93915 6.17271 7.93915C6.36174 7.93915 6.56621 8.1117 6.5617 8.38703ZM10.2162 8.38703L10.2162 8.38703V8.39685C10.2162 8.68801 10.008 8.85373 9.82726 8.85373C9.65236 8.85373 9.43835 8.68413 9.43835 8.39685C9.43835 8.10506 9.64704 7.93915 9.82726 7.93915C10.0163 7.93915 10.2208 8.11171 10.2162 8.38703Z\"\n      fill={cssVar('highlightColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1\"\n    />\n  </svg>\n);\n","import { cssVar } from '../../primitives';\n\nexport const Docs = (): ReturnType<React.FC> => (\n  <svg viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Docs</title>\n    <path\n      d=\"M5.24732 3.5H15.7312C15.9122 3.5 16.0589 3.64668 16.0589 3.82762V16.1643C16.0589 16.3452 15.9124 16.4919 15.7314 16.4919H5.23226C4.1929 16.4919 3.5 15.6258 3.5 14.7597V5.24732C3.5 4.2823 4.2823 3.5 5.24732 3.5Z\"\n      fill={cssVar('highlightColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1.2\"\n    />\n    <path\n      d=\"M5.57118 12.5943H16.0589V16.0551C16.0589 16.2963 15.8633 16.4919 15.622 16.4919H5.68415C4.59208 16.5484 3.5 16.0438 3.5 14.658C3.5 13.2722 4.3653 12.5943 5.57118 12.5943Z\"\n      fill={cssVar('highlightColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1.2\"\n    />\n  </svg>\n);\n","import { FC } from 'react';\nimport { cssVar } from '../../primitives';\n\nexport const DragHandle = (): ReturnType<FC> => (\n  <svg viewBox=\"0 0 9 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Drag Handle</title>\n    <path\n      fill={cssVar('currentTextColor')}\n      id=\"path4\"\n      d=\"m 3.2625626,1.4947961 c 0.4881583,0.4881582 0.4881583,1.2796088 0,1.767767 -0.4881582,0.4881583 -1.2796087,0.4881583 -1.7677669,0 -0.4881555,-0.4881554 -0.4881583,-1.2796088 0,-1.767767 0.4881582,-0.4881582 1.2796115,-0.4881554 1.7677669,0 z m 4.2426407,4.2426408 c 0.4881583,0.4881582 0.4881583,1.2796087 0,1.7677669 -0.4881582,0.4881583 -1.2796087,0.4881583 -1.7677669,0 -0.4881583,-0.4881582 -0.4881583,-1.2796087 0,-1.7677669 0.4881582,-0.4881583 1.2796087,-0.4881583 1.7677669,0 z m 0,-2.4748738 c 0.4881583,-0.4881582 0.4881583,-1.2796088 0,-1.767767 -0.4881582,-0.4881582 -1.2796087,-0.4881582 -1.7677669,0 -0.4881583,0.4881582 -0.4881583,1.2796088 0,1.767767 0.4881582,0.4881583 1.2796087,0.4881583 1.7677669,0 z M 3.2625626,5.7374369 c 0.4881583,0.4881582 0.4881583,1.2796087 0,1.7677669 -0.4881554,0.4881554 -1.2796087,0.4881583 -1.7677669,0 -0.4881583,-0.4881582 -0.4881555,-1.2796115 0,-1.7677669 0.4881582,-0.4881583 1.2796087,-0.4881583 1.7677669,0 z\"\n      clipRule=\"evenodd\"\n      fillRule=\"evenodd\"\n    ></path>\n  </svg>\n);\n","import { FC } from 'react';\nimport { cssVar } from '../../primitives';\n\nexport interface LightBulbProps {\n  background?: boolean;\n}\n\nexport const LightBulb: FC<LightBulbProps> = ({ background }) => {\n  const fill = background ? cssVar('highlightColor') : 'transparent';\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <title>LightBulb</title>\n      <path\n        d=\"M10.2 16.75H14.2M6.94995 10C6.94995 7.5 8.69995 4.75 12.2 4.75C15.7 4.75 17.45 7.5 17.45 10C17.45 14 14.45 14.5 14.45 16V18.2505C14.45 18.8028 14.0022 19.25 13.45 19.25H10.95C10.3977 19.25 9.94995 18.8028 9.94995 18.2505V16C9.94995 14.5 6.94995 14 6.94995 10Z\"\n        stroke={cssVar('currentTextColor')}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n","import { keyframes } from '@emotion/react';\nimport { FC, SVGProps } from 'react';\nimport { cssVar } from '../../primitives';\n\n// DO NOT change from CSS animations to SVG <animate> tags.\n// They do not perform well. While the page is loading, the SVG animation is often stuck and not playing at all.\nconst dotKeyframes = keyframes`\n  0% {\n    opacity: 0;\n  }\n  33% {\n    opacity: 1;\n  }\n  67% {\n    opacity: 0;\n  }\n`;\n\n// If you update this file, also update the manual copy of this icon in frontend/index.html\n\nexport const Loading = (\n  props: Partial<SVGProps<SVGSVGElement>> = {}\n): ReturnType<FC> => (\n  <svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    fill=\"none\"\n    y=\"0px\"\n    viewBox=\"0 0 16 16\"\n    {...props}\n  >\n    <title>Loading</title>\n    <circle\n      fill={cssVar('normalTextColor')}\n      stroke=\"none\"\n      cx=\"4\"\n      cy=\"8\"\n      r=\"1\"\n      css={{ animation: `${dotKeyframes} linear 1s 0.1s infinite` }}\n    />\n    <circle\n      fill={cssVar('normalTextColor')}\n      stroke=\"none\"\n      cx=\"8\"\n      cy=\"8\"\n      r=\"1\"\n      css={{ animation: `${dotKeyframes} linear 1s 0.2s infinite` }}\n    />\n    <circle\n      fill={cssVar('normalTextColor')}\n      stroke=\"none\"\n      cx=\"12\"\n      cy=\"8\"\n      r=\"1\"\n      css={{ animation: `${dotKeyframes} linear 1s 0.3s infinite` }}\n    />\n  </svg>\n);\n","import { cssVar } from '../../primitives';\n\nexport const QuestionMark = () => (\n  <svg viewBox=\"0 0 11 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Question Mark</title>\n    <path\n      d=\"M1.88672 3.66301C2.2139 2.73292 2.85969 1.94864 3.70972 1.44907C4.55974 0.949507 5.55914 0.766893 6.5309 0.933576C7.50267 1.10026 8.38408 1.60548 9.01904 2.35976C9.65399 3.11404 10.0015 4.0687 10 5.05466C10 7.83796 5.82509 9.22961 5.82509 9.22961\"\n      stroke={cssVar('normalTextColor')}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M5.93652 14.7963H5.9487\"\n      stroke={cssVar('normalTextColor')}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import { cssVar } from '../../primitives';\n\nexport const Sheet = () => (\n  <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Sheet</title>\n    <path\n      d=\"M4.99993 13.597H10.9997C11.828 13.597 12.4996 12.9255 12.4996 12.0971V6.42496C12.4996 5.97979 12.3018 5.55762 11.9598 5.27264L10.5828 4.12522L8.84241 2.7329C8.57559 2.51943 8.24387 2.40348 7.90217 2.40422L4.99669 2.4105C4.16957 2.41228 3.5 3.0833 3.5 3.91042V12.0971C3.5 12.9255 4.17154 13.597 4.99993 13.597Z\"\n      fill={cssVar('strongHighlightColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1.19994\"\n    />\n    <path\n      d=\"M7.60926 5.6176L8.43502 2.72744C8.46524 2.62168 8.59523 2.58333 8.67801 2.65576L12.1996 5.73713C12.3038 5.82833 12.2393 6 12.1008 6H7.8977C7.6984 6 7.5545 5.80924 7.60926 5.6176Z\"\n      fill={cssVar('backgroundColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1.19994\"\n    />\n  </svg>\n);\n","import { FC } from 'react';\nimport { cssVar } from '../../primitives';\n\nexport const Success = (): ReturnType<FC> => (\n  <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Success</title>\n    <path\n      d=\"M2 8C2 4.6863 4.6863 2 8 2C11.3137 2 14 4.6863 14 8C14 11.3137 11.3137 14 8 14C4.6863 14 2 11.3137 2 8Z\"\n      fill={cssVar('iconBackgroundColor')}\n      stroke={cssVar('normalTextColor')}\n      strokeWidth=\"1.2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M6 8.66667L6.38551 9.48836C6.69111 10.1396 7.6032 10.1771 7.96124 9.55316L10 6\"\n      stroke={cssVar('normalTextColor')}\n      strokeWidth=\"1.2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","import { FC } from 'react';\nimport { cssVar } from '../../primitives';\n\nexport const Warning = (): ReturnType<FC> => (\n  <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Warning</title>\n\n    <path\n      d=\"M2.16507 11.6041L6.52228 2.91366C7.13318 1.69519 8.87242 1.69552 9.48291 2.9142L13.8361 11.6047C14.3876 12.7056 13.5871 14.002 12.3557 14.002H3.64524C2.41356 14.002 1.61303 12.7051 2.16507 11.6041Z\"\n      fill={cssVar('iconBackgroundColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1.2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path d=\"M7.99988 6.34399V7.99978Z\" fill={cssVar('iconBackgroundColor')} />\n\n    <path\n      d=\"M7.99988 6.34399V7.99978\"\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"1.6\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n\n    <path\n      d=\"M8.41384 11.3114C8.41384 11.54 8.22851 11.7253 7.99989 11.7253C7.77127 11.7253 7.58594 11.54 7.58594 11.3114C7.58594 11.0827 7.77127 10.8974 7.99989 10.8974C8.22851 10.8974 8.41384 11.0827 8.41384 11.3114Z\"\n      fill={cssVar('iconBackgroundColor')}\n      stroke={cssVar('currentTextColor')}\n      strokeWidth=\"0.8\"\n    />\n  </svg>\n);\n","import { useCanUseDom } from '@decipad/react-utils';\nimport { css } from '@emotion/react';\nimport * as RadixDropdownMenu from '@radix-ui/react-dropdown-menu';\nimport { createContext, FC, ReactElement, ReactNode, useContext } from 'react';\nimport { isElement } from 'react-is';\n\nimport { TriggerMenuItem } from '../../atoms';\nimport { cssVar, grey500, transparency } from '../../primitives';\n\nexport const Depth = createContext(0);\n\nconst shadow1 = transparency(grey500, 0.02).rgba;\nconst shadow2 = transparency(grey500, 0.08).rgba;\n\nconst styles = css({\n  padding: '6px',\n  backgroundColor: cssVar('backgroundColor'),\n  boxShadow: `0px 1px 2px ${shadow1}, 0px 2px 12px ${shadow2}`,\n  border: `1px solid ${cssVar('borderColor')}`,\n  borderRadius: '8px',\n});\n\nconst undropdownifyContentStyles = css({\n  '>[data-radix-popper-content-wrapper]': { display: 'contents' },\n});\n\nconst alwaysTopContentStyles = css({\n  zIndex: 3,\n});\n\ninterface RootMenuListProps {\n  readonly root: true;\n  readonly trigger?: undefined;\n  readonly dropdown?: false;\n\n  readonly itemTrigger?: undefined;\n}\n\ninterface DropdownRootMenuListProps {\n  readonly root: true;\n  readonly trigger: ReactNode;\n  readonly dropdown: true;\n\n  readonly itemTrigger?: undefined;\n}\n\ninterface MenuItemMenuListProps {\n  readonly root?: undefined;\n  readonly trigger?: undefined;\n  readonly dropdown?: undefined;\n\n  readonly itemTrigger: ReactNode;\n}\n\ntype MenuListProps = (\n  | RootMenuListProps\n  | DropdownRootMenuListProps\n  | MenuItemMenuListProps\n) & {\n  readonly children: ReactNode;\n  readonly open?: boolean;\n  readonly portal?: boolean;\n  readonly onChangeOpen?: (newOpen: boolean) => void;\n  readonly align?: 'center' | 'end' | 'start';\n  readonly side?: 'top' | 'right' | 'bottom' | 'left';\n  readonly sideOffset?: number;\n  readonly container?: HTMLElement;\n};\n\nfunction getSubElementType(isRoot: boolean | undefined) {\n  const DropdownMenuTopElement = isRoot\n    ? RadixDropdownMenu.Root\n    : RadixDropdownMenu.Sub;\n\n  const DropdownMenuContentElement = isRoot\n    ? RadixDropdownMenu.Content\n    : RadixDropdownMenu.SubContent;\n\n  const DropdownMenuTriggerElement = isRoot\n    ? RadixDropdownMenu.Trigger\n    : RadixDropdownMenu.SubTrigger;\n  return {\n    DropdownMenuTriggerElement,\n    DropdownMenuTopElement,\n    DropdownMenuContentElement,\n  };\n}\n\ntype MenuListPortalComponentProps = {\n  portal: boolean;\n  children: ReactNode;\n  container?: HTMLElement;\n};\n\nconst DropdownMenuPortalElement = ({\n  portal,\n  container,\n  children,\n}: MenuListPortalComponentProps): ReactElement<MenuListPortalComponentProps> => {\n  if (useCanUseDom() && portal) {\n    return (\n      <RadixDropdownMenu.Portal container={container}>\n        {children}\n      </RadixDropdownMenu.Portal>\n    );\n  }\n  return <>{children}</>;\n};\n\nexport const MenuList = ({\n  children,\n\n  root,\n\n  trigger = <div css={{ display: 'none' }} />,\n  itemTrigger,\n\n  open,\n  onChangeOpen,\n\n  dropdown = !root,\n  portal = true,\n  align = 'start',\n  side = 'bottom',\n  sideOffset = 0,\n  container,\n}: MenuListProps): ReturnType<FC> => {\n  const depth = useContext(Depth) + 1;\n\n  if (root && depth > 1) {\n    throw new Error('Cannot use root MenuList nested in another MenuList');\n  }\n  if (!root && depth === 1) {\n    throw new Error('Non-root MenuList must be nested in another MenuList');\n  }\n\n  const {\n    DropdownMenuTriggerElement,\n    DropdownMenuTopElement,\n    DropdownMenuContentElement,\n  } = getSubElementType(root);\n\n  let triggerNode: ReactNode;\n\n  if (root) {\n    triggerNode = (\n      <DropdownMenuTriggerElement asChild>{trigger}</DropdownMenuTriggerElement>\n    );\n  } else if (isElement(itemTrigger) && itemTrigger.type === TriggerMenuItem) {\n    triggerNode = itemTrigger;\n  } else {\n    throw new Error('itemTrigger must be a TriggerMenuItem element');\n  }\n\n  return (\n    <Depth.Provider value={depth}>\n      <DropdownMenuTopElement\n        open={open}\n        onOpenChange={onChangeOpen}\n        modal={dropdown}\n      >\n        {triggerNode}\n        <DropdownMenuPortalElement portal={portal} container={container}>\n          <div\n            css={[\n              dropdown || undropdownifyContentStyles,\n              alwaysTopContentStyles,\n            ]}\n          >\n            <DropdownMenuContentElement\n              css={styles}\n              align={align}\n              onFocusOutside={(e) => e.preventDefault()}\n              onClick={(e) => e.preventDefault()}\n              side={side}\n              sideOffset={sideOffset}\n            >\n              {children}\n            </DropdownMenuContentElement>\n          </div>\n        </DropdownMenuPortalElement>\n      </DropdownMenuTopElement>\n    </Depth.Provider>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { Button } from '../../atoms';\nimport { gridTile } from '../../images';\nimport {\n  banner,\n  cssVar,\n  largestDesktop,\n  p16Regular,\n  p18Regular,\n  setCssVar,\n  smallestMobile,\n} from '../../primitives';\nimport { viewportClampCalc } from '../../utils';\n\nconst styles = css({\n  padding: viewportClampCalc(smallestMobile, 16, largestDesktop, 66, 'px'),\n\n  display: 'grid',\n  placeContent: 'center',\n  justifyItems: 'center',\n  textAlign: 'center',\n\n  position: 'absolute',\n  zIndex: 1000,\n  minWidth: '100%',\n  minHeight: '100vh',\n  left: 0,\n  right: 0,\n  top: 0,\n\n  background: `\n    radial-gradient(\n      ellipse at center,\n      ${cssVar('backgroundColor')} 0%,\n      transparent 100%\n    ),\n    center repeat url(${gridTile}),\n    linear-gradient(\n      180deg, ${cssVar('backgroundColor')} 30.41%, ${cssVar(\n    'errorPageGradientEnd'\n  )} 90.69%\n    )\n  `,\n});\n\nconst headingStyles = css(banner);\nconst subHeadingStyles = css(p18Regular, { paddingTop: '20px' });\nconst errorCodeStyles = css(\n  p16Regular,\n  setCssVar('currentTextColor', cssVar('weakerTextColor')),\n  { paddingTop: '8px' }\n);\nconst buttonStyles = css({ paddingTop: '36px', display: 'flex', gap: '12px' });\n\nconst message = (errorCode: ErrorPageProps['wellKnown']): string => {\n  switch (errorCode) {\n    case '403':\n      return 'Forbidden';\n    case '404':\n      return 'The requested URL was not found';\n    default:\n      return 'Sorry, we did something wrong';\n  }\n};\n\ninterface ErrorPageProps {\n  readonly Heading: 'h1';\n  readonly messages?: string[];\n  readonly wellKnown?: '403' | '404' | '500';\n  readonly authenticated?: boolean;\n  readonly backUrl?: string;\n  readonly backCall?: string;\n}\n\nexport const ErrorPage = ({\n  Heading,\n  wellKnown,\n  messages = [],\n  authenticated = false,\n  backUrl,\n  backCall,\n}: ErrorPageProps): ReturnType<FC> => {\n  return (\n    <main css={styles}>\n      {messages.length ? (\n        <>\n          <Heading css={headingStyles}>{messages[0]}</Heading>\n          {messages.slice(1).map((m) => (\n            <p css={subHeadingStyles}>{m}</p>\n          ))}\n        </>\n      ) : (\n        <>\n          <Heading css={headingStyles}>{message(wellKnown)}</Heading>\n          {wellKnown === '403' ? (\n            <>\n              <p css={subHeadingStyles}>\n                You don't have permissions to access this page.\n              </p>\n              <p css={errorCodeStyles}>The geeks call this a 403 error</p>\n            </>\n          ) : wellKnown === '404' ? (\n            <>\n              <p css={subHeadingStyles}>\n                The link you tried may be broken, or the page may have been\n                removed\n              </p>\n              <p css={errorCodeStyles}>The geeks call this a 404 error</p>\n            </>\n          ) : (\n            <>\n              <p css={subHeadingStyles}>\n                Decipad isn't accessible right now. We're probably fixing this\n                right now\n              </p>\n              {wellKnown === '500' && (\n                <p css={errorCodeStyles}>The geeks call this a 500 error</p>\n              )}\n            </>\n          )}\n        </>\n      )}\n      <div css={buttonStyles} data-testid=\"errorPageBacklink\">\n        <Button\n          type=\"primaryBrand\"\n          size=\"extraLarge\"\n          href={backUrl || (authenticated ? '/' : 'https://decipad.com')}\n        >\n          {backCall ||\n            (authenticated ? 'Back to workspace' : 'Back to our website')}\n        </Button>\n        <Button\n          type=\"secondary\"\n          size=\"extraLarge\"\n          href={'mailto:support@decipad.com'}\n        >\n          Contact support\n        </Button>\n      </div>\n    </main>\n  );\n};\n","import { keyframes } from '@emotion/react';\n\nexport const shortAnimationDuration = '120ms';\nexport const shortAnimationDurationMs = 120;\n\n// A short transition delay can make sense to prevent\n// the start of a hover transition effect\n// from showing up when the user is merely\n// moving the cursor quickly over the element.\nexport const mouseMovingOverTransitionDelay = '20ms';\n\nexport const toastTransitionDelay = 7500;\n\nexport const easing = 'cubic-bezier(0.42, 0, 0.58, 1)';\n\nexport const wiggle = keyframes`\n  20% {\n    box-shadow:  inset -5px 0 5px 0 rgba(0,0,0,.4);\n    transform: rotate(3deg);\n    transform-origin: center center;\n  }\n\n  40% {\n    box-shadow:  inset -11px 0 5px 0 rgba(0,0,0,.4);\n    transform: rotate(-7deg);\n  }\n\n  60% {\n    box-shadow:  inset -5px 0 5px 0 rgba(0,0,0,.4);\n    transform: rotate(2deg);\n  }\n\n  80% {\n    box-shadow:  inset -8px 0 5px 0 rgba(0,0,0,.4);\n    transform: rotate(-1deg);\n  }\n\n  100% {\n    box-shadow:  inset -7px 0 5px 0 rgba(0,0,0,.4);\n    transform: rotate(0deg);\n  }\n`;\n\nexport const antiwiggle = keyframes`20% {\n    transform:  rotate(-3deg);\n  }\n\n  40% {\n    transform:   rotate(7deg);\n  }\n\n  60% {\n    transform:   rotate(-2deg);\n  }\n\n  80% {\n    transform:   rotate(1deg);\n  }\n\n  100% {\n    transform:  rotate(0deg);\n  }\n`;\n\nexport const animationTwoColours = (\n  cssProp: string,\n  one: string,\n  two: string\n) =>\n  keyframes`0% { ${cssProp}: ${one}; }\n  50% { ${cssProp}: ${two}; }\n  100% { ${cssProp}: ${one}; }`;\n","import { Opacity } from './color';\n\nexport interface Viewport {\n  readonly width: number;\n  readonly height: number;\n}\nexport interface Device {\n  readonly portrait: Viewport;\n  readonly landscape: Viewport;\n}\n\nexport function device(side0: number, side1: number): Device {\n  const min = Math.min(side0, side1);\n  const max = Math.max(side0, side1);\n  return {\n    portrait: { width: min, height: max },\n    landscape: { width: max, height: min },\n  };\n}\n\nexport const tableBorderColor = 'rgba(0, 0, 0, 0.1)';\nexport const dragHandleHighlight = 'rgba(0, 0, 0, 0.05)';\nexport const placeholderOpacity: Opacity = 0.4;\n\nexport const smallestMobile = device(360, 640);\nexport const smallestDesktop = device(1280, 720);\nexport const largestDesktop = device(3840, 2160);\n\nexport const smallScreenQuery = `@media (max-width: ${smallestDesktop.portrait.width}px)`;\nexport const mobileQuery = `@media (max-width: ${smallestMobile.landscape.width}px)`;\n","import { css } from '@emotion/react';\nimport { once } from 'ramda';\nimport { DragHandle } from '../icons';\nimport { p14Regular } from '../primitives';\nimport { getSvgAspectRatio } from '../utils';\n\nexport const slimBlockWidth = 580;\nexport const wideBlockWidth = 700;\n\nexport const gutterHandleHeight = once(\n  () => `calc(${p14Regular.lineHeight} * ${p14Regular.fontSize})`\n);\nexport const gutterHandleWidth = once(\n  () => `calc(${getSvgAspectRatio(<DragHandle />)} * ${gutterHandleHeight()})`\n);\n\nexport const gutterGap = 16;\n// TODO when implementing the editor page,\n// make sure to include this in the side padding (plus any non-negative further gutter)\nexport const gutterWidth = once(\n  () => `calc(${gutterHandleWidth()} + ${gutterGap}px)`\n);\n\nexport const hideOnPrint = css({\n  '@media print': {\n    display: 'none',\n  },\n});\n","import { renderToStaticMarkup } from 'react-dom/server';\n\nexport const getSvgAspectRatio = (element: React.ReactElement): number => {\n  const markup = renderToStaticMarkup(element);\n\n  const container = document.createElement('div');\n  container.innerHTML = markup;\n\n  const svg = container.querySelector('svg');\n  if (!svg) {\n    throw new Error(\n      'Failed to calculate SVG aspect ratio. Element does not contain an SVG.'\n    );\n  }\n  const { width, height } = svg.viewBox.baseVal;\n  return width / height;\n};\n","import { css } from '@emotion/react';\nimport { p14Regular, cssVar } from '../primitives';\n\nexport const itemPadding = '6px';\n\nexport const itemStyles = css(p14Regular, {\n  cursor: 'pointer',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '4px',\n\n  padding: '6px',\n  borderRadius: '6px',\n\n  backgroundColor: cssVar('backgroundColor'),\n  '&:hover, &:focus, &[data-selected=\"true\"]': {\n    backgroundColor: cssVar('highlightColor'),\n  },\n\n  outline: 'none',\n});\n\nexport const itemDisabledStyles = css(itemStyles, {\n  cursor: 'default',\n\n  backgroundColor: cssVar('backgroundColor'),\n  '&:hover, &:focus, &[data-selected=\"true\"]': {\n    backgroundColor: cssVar('backgroundColor'),\n  },\n});\n","import { SERVER_SIDE_ROUTES } from '@decipad/routing';\nimport { SerializedStyles } from '@emotion/react';\nimport { AnchorHTMLAttributes, ComponentProps, ReactNode } from 'react';\nimport { matchRoutes, RouteObject } from 'react-router-dom';\nimport { HashLink, NavHashLink } from '@xzar90/react-router-hash-link';\nimport { useHasRouter } from './routing';\n\nconst SERVER_SIDE_ROUTE_OBJECTS: Array<RouteObject> =\n  SERVER_SIDE_ROUTES.flatMap((route) => [\n    // server side if it's a server side route ...\n    route.template,\n    // ... or any sub route of a server side route\n    `${route.template}/*`,\n  ]).map((path) => ({ path }));\n\nexport const resolveHref = (\n  href: string\n): { internal: boolean; resolved: string } => {\n  if (!globalThis.location) {\n    return { internal: false, resolved: href };\n  }\n\n  const url = new URL(href, globalThis.location.href);\n  if (url.origin === globalThis.location.origin) {\n    return {\n      internal: true,\n      resolved: `${url.pathname}${url.search}${url.hash}`,\n    };\n  }\n  return { internal: false, resolved: url.href };\n};\n\nconst activeClassName = 'active';\ntype AnchorProps = {\n  readonly children: ReactNode;\n  // hrefs may conditionally be undefined, but the prop is mandatory so it cannot be forgotten\n  readonly href: string | undefined;\n  readonly className?: string;\n} & (\n  | ({\n      // Non-nav HashLink\n      readonly activeStyles?: undefined;\n      readonly exact?: undefined;\n    } & Omit<\n      ComponentProps<typeof HashLink>,\n      'children' | 'className' | 'to' | 'smooth' | 'style'\n    >)\n  | ({\n      // NavHashLink\n      readonly activeStyles: SerializedStyles;\n      readonly exact?: boolean;\n    } & Omit<\n      ComponentProps<typeof NavHashLink>,\n      'children' | 'className' | 'to' | 'smooth' | 'style'\n    >)\n  | ({\n      // plain HTML anchor\n      readonly activeStyles?: undefined;\n      readonly exact?: undefined;\n    } & Omit<\n      AnchorHTMLAttributes<HTMLAnchorElement>,\n      'children' | 'className' | 'href' | 'rel' | 'style' | 'target'\n    >)\n);\n// ESLint does not understand the abstraction\n/* eslint-disable jsx-a11y/anchor-has-content */\n/* eslint-disable react/jsx-no-target-blank */\nexport const Anchor: React.FC<AnchorProps> = ({\n  href,\n  activeStyles,\n  exact,\n  className,\n  ...props\n}) => {\n  /*\n   * Logic table (please keep updated along with tests!):\n   * href                 | hasRouter | activeStyles || anchor impl | target  | rel\n   * internal             | false     | no           || a           | default | default\n   * internal             | false     | yes          || a           | default | default\n   * internal             | true      | no           || HashLink    |         |\n   * internal             | true      | yes          || NavHashLink |         |\n   * internal server-side | false     | no           || a           | _blank  | default\n   * internal server-side | false     | yes          || a           | _blank  | default\n   * internal server-side | true      | no           || a           | _blank  | default\n   * internal server-side | true      | yes          || a           | _blank  | default\n   * external             | false     | no           || a           | _blank  | secure\n   * external             | false     | yes          || a           | _blank  | secure\n   * external             | true      | no           || a           | _blank  | secure\n   * external             | true      | yes          || a           | _blank  | secure\n   */\n\n  const hasRouter = useHasRouter();\n  const { internal = false, resolved = href } = href ? resolveHref(href) : {};\n\n  // like href, resolved can still be falsy from here, indicating an empty href that does not navigate\n\n  const sameApp =\n    resolved &&\n    internal &&\n    matchRoutes(SERVER_SIDE_ROUTE_OBJECTS, resolved) == null;\n\n  if (hasRouter && resolved && sameApp) {\n    const children = (\n      <span\n        className={className}\n        css={[\n          {\n            width: '100%',\n            height: '100%',\n            display: 'block',\n            [`.${activeClassName} > &`]: activeStyles,\n          },\n        ]}\n      >\n        {props.children}\n      </span>\n    );\n\n    return activeStyles ? (\n      <NavHashLink\n        {...props}\n        className={({ isActive }) => (isActive ? activeClassName : '')}\n        to={resolved}\n        end={exact}\n        smooth\n      >\n        {children}\n      </NavHashLink>\n    ) : (\n      <HashLink {...props} to={resolved} smooth>\n        {children}\n      </HashLink>\n    );\n  }\n\n  return (\n    <a\n      {...props}\n      className={className}\n      href={resolved}\n      target={sameApp ? undefined : '_blank'}\n      rel={internal ? undefined : 'noreferrer noopener'}\n    />\n  );\n};\n","import { useLocation } from 'react-router-dom';\n\nexport const useHasRouter = (): boolean => {\n  try {\n    useLocation();\n    return true;\n  } catch {\n    return false;\n  }\n};\n","import { Device } from '../primitives';\n\ntype ViewportUnit = 'vmin' | 'vmax' | 'vw' | 'vh';\n\n/**\n * If vmin, our scale goes from the small side of the small device to the small side of the large device.\n * If vmax, our scale goes from the large side of the small device to the large side of the large device.\n * If vw or vw, our scale goes from the small side of the small device to the large side of the large device,\n * to ensure that in any orientation we stay within the bounds.\n */\nconst relevantDeviceDimension = (\n  device: Device,\n  viewportUnit: ViewportUnit,\n  isLargerDevice: boolean\n): number => {\n  return viewportUnit === 'vmax' || (viewportUnit !== 'vmin' && isLargerDevice)\n    ? device.landscape.width\n    : device.landscape.height;\n};\n\nexport const viewportCalc = (\n  smallDevice: Device,\n  smallValue: number,\n  largeDevice: Device,\n  largeValue: number,\n  baseUnit: string,\n  viewportUnit: ViewportUnit = 'vmin'\n): string => {\n  const valueDiff = largeValue - smallValue;\n  const screenDiff =\n    relevantDeviceDimension(largeDevice, viewportUnit, true) -\n    relevantDeviceDimension(smallDevice, viewportUnit, false);\n\n  const valuePerViewportUnit = (valueDiff * 100) / screenDiff;\n  const minValue =\n    smallValue -\n    (valueDiff * relevantDeviceDimension(smallDevice, viewportUnit, false)) /\n      screenDiff;\n\n  return `calc(${minValue}${baseUnit} + ${valuePerViewportUnit}${viewportUnit})`;\n};\n\nexport const viewportClampCalc: typeof viewportCalc = (\n  smallDevice,\n  smallValue,\n  largeDevice,\n  largeValue,\n  baseUnit,\n  viewportUnit\n) =>\n  `clamp(${Math.min(smallValue, largeValue)}${baseUnit}, ${viewportCalc(\n    smallDevice,\n    smallValue,\n    largeDevice,\n    largeValue,\n    baseUnit,\n    viewportUnit\n  )}, ${Math.max(smallValue, largeValue)}${baseUnit})`;\n","var _style, _line, _line2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgGridTile(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 90,\n    height: 90,\n    viewBox: \"0 0 90 90\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Grid Tile\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    line { stroke: rgba(215, 224, 237, 1); }\\n    @media (prefers-color-scheme: dark) { line { stroke: rgba(50, 59, 73, 1); } }\\n\")), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 90,\n    x2: 90,\n    y1: 0,\n    y2: 90\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 0,\n    x2: 90,\n    y1: 90,\n    y2: 90\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGridTile);\nexport default __webpack_public_path__ + \"static/media/grid-tile.c3a4a992cb109410a9821f8ac75c16c6.svg\";\nexport { ForwardRef as ReactComponent };"],"names":["styles","css","p13Bold","boxShadow","borderRadius","padding","backgroundColor","cssVar","fontWeight","innerStyles","display","alignItems","justifyContent","color","height","gap","width","HelpButton","clientEvent","useContext","ClientEventsContext","id","Tooltip","trigger","onClick","type","action","QuestionMark","align","menuItemWrapperStyles","menuItemSmallTextStyles","p12Regular","setCssVar","helpMenuStyles","pulse","keyframes","statusIconStyles","statusIcon","linkStyles","CustomMenuItem","description","onSelect","title","to","chat","external","icon","followLink","useCallback","window","open","children","p14Medium","float","transparency","offBlack","weakOpacity","rgba","marginLeft","opacity","svg","ArrowDiagonalTopRight","undefined","paddingTop","paddingBottom","MenuItem","Link","href","HelpMenu","discordUrl","docsUrl","releaseUrl","onSelectSupport","onSelectFeedback","MenuList","root","dropdown","hideOnPrint","sideOffset","MenuSeparator","LightBulb","background","Docs","Chat","Discord","setItem","global","localStorage","bind","noop","position","zIndex","flexDirection","black","flagsStyles","flagStyles","FeatureFlagsSwitcher","flags","setFlags","useState","getLocalStorageOverrides","show","setShow","useWindowListener","event","metaKey","ctrlKey","shiftKey","key","toLowerCase","prevShow","h2","availableFlags","flag","disabled","checked","isFlagEnabled","onChange","e","prevFlags","Boolean","target","Button","FEATURE_FLAGS_KEY","JSON","stringify","location","reload","gridTemplateColumns","border","maxWidth","overflow","smallScreenQuery","leftSideStyles","rightSideStyles","AccountSetup","left","right","backgroundStyles","gridTile","groupStyles","inlineLogoStyles","avatarStackStyles","avatarStyles","brand500","overflowAvatarStyles","p10Medium","borderColor","team","AccountSetupFlow1","next","callback","handleKeyPress","useEffect","document","addEventListener","removeEventListener","useEnterListener","h1","p16Regular","Deci","map","email","i","md5","encoding","default","leftStyles","inputStyles","bottomStyles","stepStyles","p12Medium","rightBgPosition","rightStyles","modelLight","rightDarkBackgroundImage","modelDark","LoadingDots","Loading","style","marginRight","AccountSetupFlow2","name","username","isSubmitting","onChangeName","onChangeUsername","previous","isDarkMode","useThemeFromStore","handleSubmit","ev","preventDefault","onSubmit","InputField","autoFocus","value","placeholder","tabIndex","submit","compactGroupStyles","blueLinkStyles","blue400","purple300","top","transform","fontSize","content","gravatarStyles","termsAndPrivacyStyles","p10Regular","model3Light","backCardStyles","nameStyles","usernameStyles","p14Regular","backCardAvatarStyles","frontCardStyles","descriptionStyles","minHeight","placeholderStyles","frontCardBottomStyles","iconWrapperStyles","AccountSetupFlow3","onChangeDescription","finish","avatar","toUpperCase","rel","TextareaField","onKeyDown","docs","page","$","isEmpty","Sheet","useRequiresOnboarding","session","useSession","userResult","useUserQuery","status","data","self","onboarded","PreOnboardingPath","BehaviorSubject","RequireOnboard","requiresOnboarding","pathname","useLocation","navigator","webdriver","replace","onboard","Onboard","navigate","useNavigate","toast","useToast","updateUser","useUpdateUserMutation","updateUsername","useSetUsernameMutation","setIsSubmitting","setName","userEmail","user","fullName","setUsername","setDescription","step","useParams","Number","redirectPath","path","element","Promise","allSettled","props","then","userUpdate","usernameUpdate","error","reason","console","graphQLErrors","toString","finally","result","ErrorPage","Heading","wellKnown","NotebookRedirect","subpath","searchParams","useSearchParams","Error","notebooks","WorkspaceRedirect","workspaces","loadWorkspaces","Workspaces","lazy","loadNotebooks","Notebooks","loadPlayground","Playground","App","showNewMessage","useIntercom","showFeedback","category","playground","useCanUseDom","createPortal","body","initSentry","suspenseFallback","ExternalProvider","PermissionType","CollaboratorFragmentDoc","gql","NotebookSnapshotFragmentDoc","EditorNotebookFragmentDoc","WorkspaceSwitcherWorkspaceFragmentDoc","WorkspaceNotebookFragmentDoc","WorkspaceSectionFragmentDoc","DashboardWorkspaceFragmentDoc","AttachFileToNotebookDocument","useAttachFileToNotebookMutation","Urql","CreateNotebookDocument","useCreateNotebookMutation","CreateSectionDocument","useCreateSectionMutation","CreateOrUpdateNotebookSnapshotDocument","useCreateOrUpdateNotebookSnapshotMutation","CreateWorkspaceDocument","useCreateWorkspaceMutation","DeleteNotebookDocument","useDeleteNotebookMutation","DeleteSectionDocument","useDeleteSectionMutation","DeleteWorkspaceDocument","useDeleteWorkspaceMutation","DuplicateNotebookDocument","useDuplicateNotebookMutation","GetCreateAttachmentFormDocument","useGetCreateAttachmentFormMutation","ImportNotebookDocument","useImportNotebookMutation","MoveNotebookDocument","useMoveNotebookMutation","RenameNotebookDocument","useRenameNotebookMutation","RenameWorkspaceDocument","useRenameWorkspaceMutation","SetNotebookPublicDocument","useSetNotebookPublicMutation","SetUsernameDocument","SharePadWithEmailDocument","useSharePadWithEmailMutation","UnarchiveNotebookDocument","useUnarchiveNotebookMutation","UnsharePadWithUserDocument","useUnsharePadWithUserMutation","UpdateNotebookArchiveDocument","useUpdateNotebookArchiveMutation","UpdateNotebookIconDocument","useUpdateNotebookIconMutation","UpdateNotebookStatusDocument","useUpdateNotebookStatusMutation","UpdateSectionDocument","useUpdateSectionMutation","UpdateSectionAddNotebookDocument","useUpdateSectionAddNotebookMutation","UpdateUserDocument","GetNotebookByIdDocument","useGetNotebookByIdQuery","options","query","UserDocument","GetWorkspacesIDsDocument","useGetWorkspacesIDsQuery","GetWorkspacesDocument","useGetWorkspacesQuery","messagesFromError","Verification","backUrlFromError","backCallFromError","search","errorCode","useMemo","URLSearchParams","get","messages","authenticated","backUrl","backCall","ErrorBoundary","errorCount","setErrorCount","previousErrorDate","setPreviousErrorDate","onError","Date","now","Sentry","err","setTimeout","c","fallbackRender","resetKeys","Frame","pageTitle","Helmet","property","Suspense","fallback","LazyRoute","LoadingLogo","getAppearanceType","appearance","errorStyle","info","infoStyle","success","successStyle","warning","warningStyle","getIconType","stroke","red700","fill","red200","Warning","grey600","grey200","Success","brand700","brand100","yellow700","yellow200","baseStyles","marginBottom","collapsedBaseStyles","lineHeight","maxHeight","iconStyles","Toast","autoDismiss","collapsed","setCollapsed","t","toastTransitionDelay","clearTimeout","ToastProvider","addToast","ReactToastNotifications","message","ToastDisplay","components","autoDismissTimeout","placement","IdentifyUserAnalytics","analytics","getAnalytics","userId","setUserId","setUserEmail","debug","identify","ClientEventsAnalytics","async","track","AnalyticsProvider","IntercomProvider","appId","process","REACT_APP_INTERCOM_APP_ID","autoBoot","autoBootProps","shouldInitialize","UpdatePrompt","onReload","onReloadClick","stopPropagation","UpdatesContext","createContext","globalHasUpdate","UpdatesContextProvider","hasUpdate","Provider","UpdatesHandler","foundUpdate","setFoundUpdate","onUpdateFound","reloading","useRef","current","registration","serviceWorker","getRegistration","tryToUpdate","update","interval","setInterval","clearInterval","Providers","QueryParamProvider","adapter","ReactRouter6Adapter","DndProvider","backend","globalThis","TouchBackend","HTML5Backend","GlobalStyles","conditionLinksWrapperStyles","marginTop","textAlign","SignUpConditionsContent","deciLogoWrapper","brand400","authContentWrapperStyles","headingStyles","p24Medium","AuthContent","signupContentWrapperStyles","signupTeaserWrapperStyles","teaserStyles","p13Regular","joinStyles","SignUpContent","outerBorderStyles","outerWrapperStyles","wrapperStyles","actionWrapperStyles","LoginForm","formRef","formValid","setFormValid","setEmail","ref","required","newEmail","checkValidity","LoginPage","usingEmail","setUsingEmail","continueWithEmail","buttonWrapperStyles","textDecoration","VerifyEmail","Login","setStatus","kind","resp","signIn","redirect","ok","trim","startsWith","substring","length","split","RequireSession","allowSecret","secret","SECRET_URL_PARAM","RouteEvents","url","sentryDsn","REACT_APP_SENTRY_DSN","sentryInitialised","beforeSend","isSupportedBrowser","exception","values","forEach","mechanism","handled","writeKey","REACT_APP_ANALYTICS_WRITE_KEY","AnalyticsBrowser","stack","stacktrace","sentryEventId","event_id","dsn","integrations","BrowserTracing","routingInstrumentation","useNavigationType","createRoutesFromChildren","matchRoutes","tracesSampleRate","listener","capture","useSafeState","initialState","mounted","useMounted","state","setState","log","useDelayedTrue","currentBoolean","delayValueTimeout","isTrue","setIsTrue","timeout","useDelayedValue","freshValue","shouldDelayAtTheMoment","latestValue","delayedBoolean","createSelectableContext","initialValue","subject","dequal","createElement","Fragment","useSelectableContext","ContextClass","selector","setValue","selectorRef","sub","subscribe","context","oldValue","newValue","unsubscribe","useActiveElement","onClickOutside","handleClickOutside","contains","useBehaviorSubject","pipe","identity","subscription","__DECI_IS_SSR__","createNew","route","edit","archived","shared","section","sectionId","stringParser","workspace","workspaceId","descriptiveIdParser","serialize","includes","parse","pathSegment","decodeURIComponent","slice","notebook","acceptInvite","invite","intParser","SERVER_SIDE_ROUTES","storybook","isServerSideRendering","Bowser","userAgent","satisfies","chrome","supports","feature","WebSocket","indexedDB","ToastContext","_options","flexGrow","grey700","typeStyles","primary","enabled","primaryBrand","secondary","danger","red500","white","red400","text","grey400","darkDanger","red800","darkWarning","orange800","darkWarningText","orange300","sizeStyles","normal","extraSlim","extraLarge","enabledStyles","disabledStyles","size","testId","onButtonClick","onEnter","currentTarget","malibu700","childrenWrapperStyles","onPointerMove","onFocus","selected","itemAlignment","testid","onSelectItem","menu","margin","onKeyUp","rows","contentWrapperStyles","wordBreak","smallVariantStyles","side","contentStyles","arrowStyles","clickableStyles","onChangeOpen","hoverOnly","variant","stopClickPropagation","isDragging","setIsDragging","onDragStart","onDragEnd","useIsDragging","useControllableState","prop","handleClick","openDelay","closeDelay","onOpenChange","onMouseMove","buttons","onMouseOut","onMouseOver","asChild","offset","caretRightWrapper","TriggerMenuItem","DropdownMenuTriggerElement","Depth","RadixDropdownMenu","viewBox","xmlns","d","strokeWidth","strokeLinecap","Caret","down","up","strokeLinejoin","DragHandle","clipRule","fillRule","dotKeyframes","version","xmlnsXlink","x","y","cx","cy","r","animation","shadow1","grey500","shadow2","undropdownifyContentStyles","alwaysTopContentStyles","DropdownMenuPortalElement","portal","container","itemTrigger","depth","DropdownMenuTopElement","DropdownMenuContentElement","isRoot","getSubElementType","triggerNode","isElement","modal","onFocusOutside","viewportClampCalc","smallestMobile","largestDesktop","placeContent","justifyItems","minWidth","banner","subHeadingStyles","p18Regular","errorCodeStyles","buttonStyles","m","shortAnimationDuration","shortAnimationDurationMs","mouseMovingOverTransitionDelay","easing","wiggle","antiwiggle","animationTwoColours","cssProp","one","two","device","side0","side1","min","Math","max","portrait","landscape","dragHandleHighlight","placeholderOpacity","smallestDesktop","mobileQuery","slimBlockWidth","wideBlockWidth","gutterHandleHeight","once","gutterHandleWidth","markup","renderToStaticMarkup","innerHTML","querySelector","baseVal","getSvgAspectRatio","D","gutterGap","itemPadding","itemStyles","cursor","outline","itemDisabledStyles","SERVER_SIDE_ROUTE_OBJECTS","template","activeClassName","Anchor","activeStyles","exact","className","hasRouter","useHasRouter","internal","resolved","URL","origin","hash","resolveHref","sameApp","isActive","end","smooth","relevantDeviceDimension","viewportUnit","isLargerDevice","viewportCalc","smallDevice","smallValue","largeDevice","largeValue","baseUnit","valueDiff","screenDiff","valuePerViewportUnit","minValue"],"sourceRoot":""}