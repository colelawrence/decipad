{"version":3,"file":"static/js/1980.477e137a.chunk.js","mappings":"+IAWA,MAAMA,EAAS,CACbC,EACAC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAASH,GACXI,EAAAA,EAAAA,IAAaC,EAAAA,GAAO,IAAKC,MACzBC,EAAAA,EAAAA,GAAO,mBACLC,EAAcR,EAAU,SAAW,MACzC,OAAOS,EAAAA,EAAAA,KAAI,CACTC,SAAU,WACVC,QAAS,WAET,WAAY,CACVD,SAAU,WAEVE,OAAO,GAAD,OAAKJ,EAAW,kBAAUL,GAChCD,UAAWA,EAAY,uCAAyC,OAChEW,aAAcZ,EAAS,MAAQ,MAC/Ba,MAAOf,EACPgB,OAAQhB,EAERiB,gBAAiBd,GACbE,EAAAA,EAAAA,IAAaN,EAAOmB,EAAAA,IAAaX,KACjCR,EAAMoB,IAEVC,QAAS,QAEZ,yBACD,gPAgBK,MAAMC,EAAM,IAYF,IAZG,IAClBC,EAAG,KACHC,EAAI,MACJC,EAAK,OACLC,EAAM,KACNzB,EAAO,GAAE,QACTC,GAAU,EAAK,MACfF,EAAQ2B,EAAAA,GAAS,QACjBC,GAAU,EAAI,OACdzB,GAAS,EAAK,UACd0B,GAAY,EAAK,SACjBC,GACS,EACT,MAAMC,GACJ,gBACEpB,IAAG,CACDZ,EAAOC,EAAOC,EAAMC,EAASC,GAAQ,IACpCyB,GAAO,GACRjB,EAAAA,EAAAA,KAAI,CAAE,WAAY,CAAEY,MAAKC,OAAMC,QAAOC,WAAU,sBAAE,sBAClD,SAEDI,IAGL,OAAOD,GACL,gBACElB,IAAG,EAEA,WAEH,gBACEA,IAAG,CACDZ,EAAOC,EAAOC,EAAMC,EAASC,GAAQ,IACpCyB,GAAO,GACRjB,EAAAA,EAAAA,KAAI,CAAE,WAAY,CAAEY,MAAKC,OAAMC,QAAOC,WAAU,qBAAE,qBAClD,SAEDI,IAEFC,KAGHA","sources":["../../ui/src/atoms/Dot/Dot.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport { ReactNode } from 'react';\nimport {\n  black,\n  cssVar,\n  OpaqueColor,\n  orange500,\n  transparency,\n  weakOpacity,\n} from '../../primitives';\n\nconst styles = (\n  color: OpaqueColor,\n  size: number,\n  variant: boolean,\n  square: boolean,\n  transform: boolean\n) => {\n  const stroke = variant\n    ? transparency(black, 0.3).rgba\n    : cssVar('backgroundColor');\n  const strokeWidth = variant ? '1.11px' : '2px';\n  return css({\n    position: 'absolute',\n    display: 'contents',\n\n    '::before': {\n      position: 'absolute',\n\n      border: `${strokeWidth} solid ${stroke}`,\n      transform: transform ? 'translate(2px, -2.5px) rotate(10deg)' : 'none',\n      borderRadius: square ? '4px' : '50%',\n      width: size,\n      height: size,\n\n      backgroundColor: transform\n        ? transparency(color, weakOpacity).rgba\n        : color.hex,\n\n      content: '\" \"',\n    },\n  });\n};\n\ntype DotProps = {\n  readonly children?: ReactNode;\n  readonly top?: number;\n  readonly left?: number;\n  readonly right?: number;\n  readonly bottom?: number;\n  readonly size?: number;\n  readonly variant?: boolean;\n  readonly square?: boolean;\n  readonly visible?: boolean;\n  readonly drunkMode?: boolean;\n  readonly color?: OpaqueColor;\n};\n\nexport const Dot = ({\n  top,\n  left,\n  right,\n  bottom,\n  size = 10,\n  variant = false,\n  color = orange500,\n  visible = true,\n  square = false,\n  drunkMode = false,\n  children,\n}: DotProps) => {\n  const elem = (\n    <span\n      css={[\n        styles(color, size, variant, square, false),\n        !visible && css({ '::before': { opacity: 0 } }),\n        css({ '::before': { top, left, right, bottom } }),\n      ]}\n    >\n      {children}\n    </span>\n  );\n  return drunkMode ? (\n    <span\n      css={css({\n        transform: 'translate(0, -6px)',\n      })}\n    >\n      <span\n        css={[\n          styles(color, size, variant, square, true),\n          !visible && css({ '::before': { opacity: 0 } }),\n          css({ '::before': { top, left, right, bottom } }),\n        ]}\n      >\n        {children}\n      </span>\n      {elem}\n    </span>\n  ) : (\n    elem\n  );\n};\n"],"names":["styles","color","size","variant","square","transform","stroke","transparency","black","rgba","cssVar","strokeWidth","css","position","display","border","borderRadius","width","height","backgroundColor","weakOpacity","hex","content","Dot","top","left","right","bottom","orange500","visible","drunkMode","children","elem"],"sourceRoot":""}