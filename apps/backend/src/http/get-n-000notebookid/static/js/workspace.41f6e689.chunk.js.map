{"version":3,"file":"static/js/workspace.41f6e689.chunk.js","mappings":"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","sources":["../../../apps/frontend/src/utils/parseIconColorFromIdentifier.ts","../../ui/src/atoms/placeholders/DashboardSidebarPlaceholder/DashboardSidebarPlaceholder.tsx","../../ui/src/molecules/NotebookListItemPlaceholder/NotebookListItemPlaceholder.tsx","../../ui/src/templates/NotebookListPlaceholder/NotebookListPlaceholder.tsx","../../ui/src/pages/Dashboard/Dashboard.tsx","../../../apps/frontend/src/utils/exportNotebook.ts","../../../apps/frontend/src/utils/padsEnhancement.ts","../../../apps/frontend/src/utils/index.ts","../../../apps/frontend/src/utils/useMutationResultHandler.ts","../../../apps/frontend/src/workspaces/workspace/Workspace.tsx","../../ui/src/atoms/Placeholder/Placeholder.tsx","../../ui/src/atoms/placeholders/TopbarPlaceholder/TopbarPlaceholder.tsx","../../ui/src/styles/notebook-list.ts","../../ui/src/utils/notebookStatus.ts"],"sourcesContent":["import {\n  AvailableSwatchColor,\n  swatchNames,\n  UserIconKey,\n  userIconKeys,\n} from 'libs/ui/src/utils';\n\nexport function parseIconColorFromIdentifier(\n  iconIdentifier: string | null | undefined\n) {\n  const parsedIcon = iconIdentifier?.replace(' ', '').split('-');\n\n  if (parsedIcon) {\n    if (parsedIcon.length !== 2) {\n      console.error(`Cannot parse notebook icon ${iconIdentifier}`);\n      return { ok: false };\n    }\n\n    const icon = parsedIcon[0] as UserIconKey;\n    const iconColor = parsedIcon[1] as AvailableSwatchColor;\n\n    if (!userIconKeys.includes(icon)) {\n      return { ok: false };\n    }\n\n    if (!swatchNames.includes(iconColor)) {\n      return { ok: false };\n    }\n\n    return { icon, iconColor, ok: true };\n  }\n  if (typeof iconIdentifier === 'string') {\n    console.error(`bad parameter for iconIdentifier ${iconIdentifier}`);\n  }\n  return { ok: false };\n}\n","import React from 'react';\nimport { css } from '@emotion/react';\nimport { cssVar } from '../../../primitives';\n\nconst containerStyle = css({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  rowGap: '20px',\n  padding: 'calc(8px + 0.625vmax) 24px 56px',\n});\n\nconst avatarPlaceholderStyles = css({\n  height: '24px',\n  width: '24px',\n  borderRadius: '8px',\n  marginTop: '8px',\n  marginBottom: '8px',\n  backgroundColor: `${cssVar('highlightColor')}`,\n});\n\nconst buttonPlaceholderStyles = css({\n  height: '35.59px',\n  borderRadius: '8px',\n  backgroundColor: `${cssVar('highlightColor')}`,\n});\n\nexport const DashboardSidebarPlaceholder: React.FC = () => (\n  <div css={containerStyle}>\n    <div css={avatarPlaceholderStyles} />\n    <div css={buttonPlaceholderStyles} />\n  </div>\n);\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { Placeholder } from '../../atoms';\nimport { notebookList } from '../../styles';\n\nconst verticalPadding = 3;\n\nconst { gridStyles } = notebookList;\nconst styles = css(gridStyles, {\n  alignItems: 'end',\n  padding: `${verticalPadding}px 0`,\n});\n\nconst iconStyles = css({\n  margin: `${-verticalPadding}px 0`,\n  height: '38px',\n\n  display: 'grid',\n});\nconst titleStyles = css({\n  height: '12px',\n  maxWidth: `${(100 * 124) / 506}%`,\n\n  display: 'grid',\n});\nconst descriptionStyles = css({\n  height: '12px',\n  maxWidth: `${(100 * 440) / 506}%`,\n\n  display: 'grid',\n});\nconst middleAndRightStyles = css({\n  height: '12px',\n  maxWidth: '64px',\n\n  display: 'grid',\n});\n\nexport const NotebookListItemPlaceholder = (): ReturnType<FC> => {\n  return (\n    <div role=\"presentation\" css={styles}>\n      <div css={[iconStyles, { gridArea: 'icon' }]}>\n        <Placeholder />\n      </div>\n      <div css={[titleStyles, { gridArea: 'title' }]}>\n        <Placeholder />\n      </div>\n      <div css={[descriptionStyles, { gridArea: 'description' }]}>\n        <Placeholder />\n      </div>\n      <div css={[middleAndRightStyles, { gridArea: 'updated' }]}>\n        <Placeholder />\n      </div>\n      <div css={[middleAndRightStyles, { gridArea: 'tags' }]}>\n        <Placeholder />\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { Placeholder } from '../../atoms';\nimport { NotebookListItemPlaceholder } from '../../molecules';\nimport { notebookList } from '../../styles';\n\nconst styles = css({\n  height: '100%',\n  overflow: 'hidden',\n\n  padding: `${notebookList.verticalPadding} ${notebookList.horizontalPadding}`,\n\n  display: 'grid',\n  gridTemplateRows: 'auto 1fr',\n  rowGap: '28px',\n});\n\nconst { gridStyles } = notebookList;\nconst headerStyles = css(gridStyles);\n\nconst numberOfItemPlaceholders = 10;\nconst bodyStyles = css({\n  display: 'grid',\n  alignContent: 'start',\n  rowGap: '32px',\n  overflow: 'hidden',\n});\n\nexport const NotebookListPlaceholder = (): ReturnType<FC> => {\n  return (\n    <div aria-label=\"Notebook list loading\" css={styles}>\n      <div css={headerStyles}>\n        <div css={{ gridArea: 'icon', maxWidth: '32px' }}>\n          <Placeholder lessRound />\n        </div>\n        <div css={{ gridArea: 'title', maxWidth: '32px' }}>\n          <Placeholder lessRound />\n        </div>\n        <div css={{ gridArea: 'tags', maxWidth: '32px' }}>\n          <Placeholder lessRound />\n        </div>\n      </div>\n      <div css={bodyStyles}>\n        {Array(numberOfItemPlaceholders)\n          .fill(null)\n          .map((_, i) => (\n            <NotebookListItemPlaceholder key={i} />\n          ))}\n      </div>\n    </div>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC, ReactNode } from 'react';\nimport { cssVar, smallestDesktop } from '../../primitives';\n\nconst crossBarsQuery = `@media (min-width: ${smallestDesktop.portrait.width}px)`;\nconst styles = css({\n  // Do not scroll as a whole. The notebook list will scroll individually.\n  height: 0,\n  minHeight: '100%',\n\n  position: 'relative',\n  display: 'grid',\n  gridTemplate: `\n    \"sidebar      \" max-content\n    \"topbar       \" max-content\n    \"notebook-list\" minmax(200px, auto)\n    /1fr\n  `,\n  [crossBarsQuery]: {\n    gridTemplate: `\n      \"sidebar topbar       \" auto\n      \"sidebar notebook-list\" 1fr\n      /347px   1fr\n    `,\n  },\n\n  '> *': {\n    display: 'grid',\n  },\n});\nconst sidebarStyles = css({\n  [crossBarsQuery]: {\n    borderRight: `1px solid ${cssVar('borderColor')}`,\n  },\n});\n\ninterface DashboardProps {\n  readonly sidebar: ReactNode;\n  readonly topbar: ReactNode;\n  readonly notebookList: ReactNode;\n}\nexport const Dashboard = ({\n  sidebar,\n  topbar,\n  notebookList,\n}: DashboardProps): ReturnType<FC> => {\n  return (\n    <div css={styles} data-testid=\"dashboard\">\n      <main css={{ gridArea: 'notebook-list', overflowY: 'auto' }}>\n        {notebookList}\n      </main>\n      <header css={{ gridArea: 'topbar' }}>{topbar}</header>\n      <aside css={[{ gridArea: 'sidebar' }, sidebarStyles]}>{sidebar}</aside>\n    </div>\n  );\n};\n","import { getLocalNotebookUpdates } from '@decipad/docsync';\n\ntype ExportCallback = () => Promise<void>;\n\nconst forceDownload = (fileName: string, file: Blob) => {\n  // Create blob link to download\n  const url = window.URL.createObjectURL(file);\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', fileName);\n\n  // Append to html link element page\n  document.body.appendChild(link);\n\n  // Start download\n  link.click();\n\n  // Clean up and remove the link\n  link.parentNode?.removeChild(link);\n};\n\nconst remoteExportNotebookWithUpdates = async (\n  notebookId: string,\n  updates?: Uint8Array\n): Promise<Blob> => {\n  const resp = await fetch(\n    `/api/pads/${encodeURIComponent(notebookId)}/export`,\n    {\n      method: 'POST',\n      body: updates,\n    }\n  );\n  return resp.blob();\n};\n\nexport const exportNotebook = (notebookId: string): ExportCallback => {\n  return async () => {\n    const updates = await getLocalNotebookUpdates(notebookId);\n    const file = await remoteExportNotebookWithUpdates(notebookId, updates);\n\n    forceDownload(`${notebookId}.json`, file);\n  };\n};\n\nconst remoteExportNotebookBackups = async (\n  notebookId: string\n): Promise<Blob> => {\n  const resp = await fetch(\n    `/api/pads/${encodeURIComponent(notebookId)}/backups/export`,\n    {\n      method: 'GET',\n    }\n  );\n  return resp.blob();\n};\n\nexport const exportNotebookBackups = (notebookId: string): ExportCallback => {\n  return async () => {\n    const file = await remoteExportNotebookBackups(notebookId);\n    forceDownload(`${notebookId}.zip`, file);\n  };\n};\n","import { exportNotebook, exportNotebookBackups } from './exportNotebook';\nimport { parseIconColorFromIdentifier } from './parseIconColorFromIdentifier';\n\nexport const makeIcons = (notebook: any) => {\n  const { icon = 'Rocket', iconColor = 'Catskill' } =\n    parseIconColorFromIdentifier(notebook?.icon);\n  const status: string = notebook?.status || 'draft';\n  return {\n    ...notebook,\n    icon,\n    iconColor,\n    status,\n    onExport: exportNotebook(notebook.id),\n    onExportBackups: exportNotebookBackups(notebook.id),\n    creationDate: new Date(notebook.createdAt),\n  };\n};\n\nexport const filterPads =\n  ({ page }: { page: 'archived' | 'shared' | 'workspace' | 'section' }) =>\n  (notebook: any) => {\n    const archived = page === 'archived';\n\n    return (\n      (!archived ? notebook.archived !== true : true) &&\n      (archived ? notebook.archived === true : true)\n    );\n  };\n","export * from './exportNotebook';\nexport * from './padsEnhancement';\nexport * from './parseIconColorFromIdentifier';\nexport const workspaceCtaDismissKey = 'workspace-cta-dismiss';\n","import { useToast } from '@decipad/toast';\nimport { OperationResult } from 'urql';\n\ntype Fn<TArgs, TResult extends OperationResult> = (\n  arg: TArgs\n) => Promise<TResult>;\n\nexport const useMutationResultHandler = <\n  TArgs,\n  TResult extends OperationResult\n>(\n  fn: Fn<TArgs, TResult>,\n  errorMessage = 'Server error, please contact support'\n): ((args: TArgs) => Promise<TResult['data'] | void>) => {\n  const toast = useToast();\n\n  return async (args: TArgs) => {\n    try {\n      const resp = await fn(args);\n      if (resp == null) {\n        console.error('No response');\n        toast(\n          'No response to mutation request. Please contact support',\n          'error'\n        );\n        return;\n      }\n      const { data, error } = resp;\n      if (error != null) {\n        console.error(error);\n        toast(errorMessage, 'error');\n        return;\n      }\n      if (data == null) {\n        console.error('No data on response');\n        toast('No data on mutation response. Please contact support', 'error');\n        return;\n      }\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast(errorMessage, 'error');\n    }\n  };\n};\n","import { notebooks, useRouteParams, workspaces } from '@decipad/routing';\nimport { useToast } from '@decipad/toast';\nimport {\n  Dashboard,\n  DashboardSidebarPlaceholder,\n  NotebookListItem,\n  NotebookListPlaceholder,\n  TColorKeys,\n  TColorStatus,\n  TopbarPlaceholder,\n} from '@decipad/ui';\nimport { sortBy } from 'lodash';\nimport { signOut, useSession } from 'next-auth/react';\nimport {\n  ComponentProps,\n  FC,\n  lazy,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  matchPath,\n  Outlet,\n  Route,\n  Routes,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { useIntercom } from 'react-use-intercom';\nimport {\n  useCreateNotebookMutation,\n  useCreateSectionMutation,\n  useCreateWorkspaceMutation,\n  useDeleteNotebookMutation,\n  useDeleteSectionMutation,\n  useDeleteWorkspaceMutation,\n  useDuplicateNotebookMutation,\n  useGetWorkspacesQuery,\n  useImportNotebookMutation,\n  useMoveNotebookMutation,\n  useRenameWorkspaceMutation,\n  useSetUsernameMutation,\n  useUnarchiveNotebookMutation,\n  useUpdateNotebookArchiveMutation,\n  useUpdateNotebookStatusMutation,\n  useUpdateSectionAddNotebookMutation,\n  useUpdateSectionMutation,\n  useUpdateUserMutation,\n  useUserQuery,\n} from '../../graphql';\nimport { ErrorPage, Frame, LazyRoute } from '../../meta';\nimport { filterPads, makeIcons, workspaceCtaDismissKey } from '../../utils';\nimport { useMutationResultHandler } from '../../utils/useMutationResultHandler';\n\nconst loadTopbar = () =>\n  import(/* webpackChunkName: \"workspace-topbar\" */ './Topbar');\nconst Topbar = lazy(loadTopbar);\nconst loadSidebar = () => import(/* webpackChunkName: \"sidebar\" */ './Sidebar');\nconst Sidebar = lazy(loadSidebar);\nconst loadNotebookList = () =>\n  import(/* webpackChunkName: \"notebook-list\" */ './NotebookList');\nconst NotebookList = lazy(loadNotebookList);\nconst loadCreateWorkspaceModal = () =>\n  import(\n    /* webpackChunkName: \"create-workspace-modal\" */ './CreateWorkspaceModal'\n  );\nconst CreateWorkspaceModal = lazy(loadCreateWorkspaceModal);\nconst loadEditWorkspaceModal = () =>\n  import(/* webpackChunkName: \"edit-workspace-modal\" */ './EditWorkspaceModal');\nconst EditWorkspaceModal = lazy(loadEditWorkspaceModal);\nconst loadEditUserModal = () =>\n  import(/* webpackChunkName: \"edit-user-modal\" */ './EditUserModal');\nconst EditUserModal = lazy(loadEditUserModal);\n\nexport const loadNotebooks = () =>\n  import(/* webpackChunkName: \"notebooks\" */ '../../notebooks/Notebooks');\n\n// prefetch\nloadTopbar().then(loadNotebookList).then(loadSidebar);\n\nconst Workspace: FC = () => {\n  const { show, showNewMessage } = useIntercom();\n\n  const showFeedback = useCallback(() => {\n    show();\n    showNewMessage();\n  }, [show, showNewMessage]);\n\n  const { workspaceId } = useRouteParams(workspaces({}).workspace);\n  const currentWorkspaceRoute = workspaces({}).workspace({\n    workspaceId,\n  });\n  const navigate = useNavigate();\n  const { '*': maybeWorkspaceFolder } = useParams();\n  const { params } = (maybeWorkspaceFolder &&\n    matchPath(\n      currentWorkspaceRoute.section.templateWithQuery,\n      `/${maybeWorkspaceFolder}`\n    )) || { params: { sectionId: null } };\n  const sectionId = params?.sectionId;\n  const isArchivePage = maybeWorkspaceFolder === 'archived';\n  const isSharedPage = maybeWorkspaceFolder === 'shared';\n\n  const { data: session } = useSession();\n  const { data: user } = useUserQuery()[0];\n\n  const toast = useToast();\n\n  const [userSettings, setUserSettings] = useState(false);\n\n  const [name, setName] = useState(user?.self?.name || '');\n  const [username, setUsername] = useState(user?.self?.username || '');\n  const [description, setDescription] = useState(user?.self?.description || '');\n  const [result, refetch] = useGetWorkspacesQuery({\n    requestPolicy: 'network-only',\n  });\n\n  const createNotebook = useMutationResultHandler(\n    useCreateNotebookMutation()[1],\n    'Failed to create notebook'\n  );\n  const deleteNotebook = useMutationResultHandler(\n    useUpdateNotebookArchiveMutation()[1],\n    'Failed to remove notebook'\n  ); // soft delete\n  const finalDeleteNotebook = useMutationResultHandler(\n    useDeleteNotebookMutation()[1],\n    'Failed to remove notebook'\n  );\n  const duplicateNotebook = useMutationResultHandler(\n    useDuplicateNotebookMutation()[1],\n    'Failed to duplicate notebook'\n  );\n  const moveNotebook = useMutationResultHandler(\n    useMoveNotebookMutation()[1],\n    'Failed to move notebook to workspace.'\n  );\n  const importNotebook = useMutationResultHandler(\n    useImportNotebookMutation()[1],\n    'Failed to import notebook.'\n  );\n  const createWorkspace = useMutationResultHandler(\n    useCreateWorkspaceMutation()[1],\n    'Failed to create workspace'\n  );\n  const renameWorkspace = useMutationResultHandler(\n    useRenameWorkspaceMutation()[1],\n    'Failed to rename workspace'\n  );\n  const deleteWorkspace = useMutationResultHandler(\n    useDeleteWorkspaceMutation()[1],\n    'Failed to remove workspace'\n  );\n  const changeNotebookStatus = useMutationResultHandler(\n    useUpdateNotebookStatusMutation()[1]\n  );\n  const updateUser = useMutationResultHandler(\n    useUpdateUserMutation()[1],\n    'Failed to save user'\n  );\n  const setUsernameMutation = useMutationResultHandler(\n    useSetUsernameMutation()[1],\n    'Could not change your username'\n  );\n  const unarchiveNotebook = useMutationResultHandler(\n    useUnarchiveNotebookMutation()[1]\n  );\n  const createSection = useMutationResultHandler(\n    useCreateSectionMutation()[1],\n    'Failed to create section'\n  );\n  const deleteSection = useMutationResultHandler(\n    useDeleteSectionMutation()[1],\n    'Failed to remove section'\n  );\n  const editSection = useMutationResultHandler(\n    useUpdateSectionMutation()[1],\n    'Failed to save section'\n  );\n  const movePadToSection = useMutationResultHandler(\n    useUpdateSectionAddNotebookMutation()[1],\n    'Failed to move notebook to section'\n  );\n\n  const signoutCallback = useCallback(() => {\n    // Checklist show is stored in db, no longer needed on logout.\n    // Because after any refresh it persists.\n\n    signOut({ redirect: false }).then(() => {\n      window.location.pathname = '/';\n    });\n  }, []);\n\n  const [ctaDismissed, setCtaDismissed] = useState(\n    () => global.localStorage.getItem(workspaceCtaDismissKey) === '1'\n  );\n  const onCTADismiss = useCallback(() => {\n    global.localStorage.setItem(workspaceCtaDismissKey, '1');\n    setCtaDismissed(true);\n  }, []);\n\n  const { data: workspaceData } = result;\n\n  const currentWorkspace = useMemo(\n    () => workspaceData?.workspaces.find((w) => w.id === workspaceId),\n    [workspaceData?.workspaces, workspaceId]\n  );\n\n  const pageInfo: ComponentProps<typeof NotebookListItem>['page'] =\n    useMemo(() => {\n      const sections = currentWorkspace?.sections || [];\n\n      if (isArchivePage) return { type: 'archived', sections };\n      if (isSharedPage) return { type: 'shared', sections };\n\n      return {\n        type: sectionId ? 'section' : 'workspace',\n        sections,\n      };\n    }, [isArchivePage, isSharedPage, sectionId, currentWorkspace]);\n\n  const filterNotebooks = useMemo(() => {\n    return filterPads({ page: pageInfo.type });\n  }, [pageInfo]);\n\n  useEffect(() => {\n    if (!isSharedPage) return;\n\n    refetch();\n  }, [refetch, isSharedPage]);\n\n  const allSectionNotebooks = useMemo(\n    () =>\n      currentWorkspace?.sections\n        .find((sct) => sct.id === sectionId)\n        ?.pads?.filter(filterNotebooks)\n        .map(makeIcons),\n    [currentWorkspace?.sections, filterNotebooks, sectionId]\n  );\n\n  const allNotebooks = useMemo(\n    () =>\n      sortBy(\n        currentWorkspace?.pads?.items,\n        (item) => -Date.parse(item.createdAt)\n      )\n        .filter(filterNotebooks)\n        .map(makeIcons),\n    [currentWorkspace?.pads?.items, filterNotebooks]\n  );\n\n  const sharedNotebooks = useMemo(\n    () =>\n      sortBy(\n        workspaceData?.padsSharedWithMe?.items,\n        (item) => -Date.parse(item.createdAt)\n      ).map(makeIcons),\n    [workspaceData?.padsSharedWithMe?.items]\n  );\n\n  const showNotebooks = useMemo(\n    () =>\n      isSharedPage\n        ? sharedNotebooks\n        : sectionId\n        ? allSectionNotebooks && allSectionNotebooks.length > 0\n          ? allSectionNotebooks\n          : []\n        : allNotebooks,\n    [\n      allNotebooks,\n      allSectionNotebooks,\n      sharedNotebooks,\n      isSharedPage,\n      sectionId,\n    ]\n  );\n\n  if (!currentWorkspace || !session) {\n    return <ErrorPage Heading=\"h1\" wellKnown=\"404\" />;\n  }\n\n  const handleCreateNotebook = async () => {\n    const args = {\n      workspaceId,\n      sectionId,\n      name: 'My notebook title',\n    };\n\n    const createdNotebookData = await createNotebook(args);\n    if (createdNotebookData != null) {\n      navigate(\n        notebooks({}).notebook({\n          notebook: createdNotebookData.createPad,\n        }).$\n      );\n    }\n  };\n\n  const allWorkspaces =\n    workspaceData?.workspaces?.map((workspace) => ({\n      ...workspace,\n      href: workspaces({}).workspace({\n        workspaceId: workspace.id,\n      }).$,\n      numberOfMembers: 1,\n    })) ?? [];\n\n  const sidebarWrapper = (\n    <Frame\n      Heading=\"h1\"\n      title={null}\n      suspenseFallback={<DashboardSidebarPlaceholder />}\n    >\n      <Sidebar\n        showFeedback={showFeedback}\n        Heading=\"h1\"\n        name={user?.self?.name || 'Me'}\n        email={session.user.email || 'me@example.com'}\n        onLogout={signoutCallback}\n        activeWorkspace={{\n          ...currentWorkspace,\n          numberOfMembers: 1,\n        }}\n        allWorkspaces={allWorkspaces}\n        onCreateWorkspace={() =>\n          navigate(currentWorkspaceRoute.createNew({}).$)\n        }\n        onEditWorkspace={(id) => {\n          navigate(workspaces({}).workspace({ workspaceId: id }).edit({}).$);\n        }}\n        onClickWorkspace={(id) => {\n          navigate(workspaces({}).workspace({ workspaceId: id }).$);\n        }}\n        onCreateSection={createSection}\n        onUpdateSection={editSection}\n        onDeleteSection={(sId: string) => {\n          deleteSection({\n            workspaceId,\n            sectionId: sId,\n          })\n            .then((res) => {\n              if (res) {\n                toast('Section removed', 'success');\n              }\n            })\n            .catch((err) => {\n              console.error('Failed to remove section. Error:', err);\n              toast('Failed to remove section.', 'error');\n            });\n        }}\n        onPointerEnter={() =>\n          loadEditWorkspaceModal().then(loadCreateWorkspaceModal)\n        }\n        onOpenSettings={setUserSettings}\n      />\n    </Frame>\n  );\n\n  const topBarWrapper = (\n    <Frame Heading=\"h1\" title={null} suspenseFallback={<TopbarPlaceholder />}>\n      <Topbar\n        onCreateNotebook={handleCreateNotebook}\n        onPointerEnter={loadNotebooks}\n      />\n    </Frame>\n  );\n\n  const notebookListWrapper = (\n    <Frame\n      Heading=\"h1\"\n      title={null}\n      suspenseFallback={<NotebookListPlaceholder />}\n    >\n      <NotebookList\n        Heading=\"h1\"\n        notebooks={showNotebooks}\n        page={pageInfo}\n        mainWorkspaceRoute={!maybeWorkspaceFolder}\n        onCreateNotebook={handleCreateNotebook}\n        otherWorkspaces={allWorkspaces.filter(\n          (workspace) => workspace.id !== currentWorkspace.id\n        )}\n        onMoveToSection={(pId, sId) => {\n          return movePadToSection({ sectionId: sId, notebookId: pId }).catch(\n            (err) => {\n              console.error(`Failed to add notebook to section. Error:`, err);\n              toast('Failed to add notebook to section', 'error');\n            }\n          );\n        }}\n        onDelete={(id) => {\n          const fn =\n            pageInfo.type === 'archived' ? finalDeleteNotebook : deleteNotebook;\n          return fn({ id }).catch((err) => {\n            console.error(\n              `Failed to ${\n                pageInfo.type === 'archived' ? 'delete' : 'archive'\n              } notebook. Error:`,\n              err\n            );\n            toast(\n              `Failed to ${\n                pageInfo.type === 'archived' ? 'delete' : 'archive'\n              } notebook`,\n              'error'\n            );\n          });\n        }}\n        onDuplicate={(id) =>\n          duplicateNotebook({\n            id,\n            targetWorkspace: workspaceId,\n          }).catch((err) => {\n            console.error('Failed to duplicate notebook. Error:', err);\n            toast('Failed to duplicate notebook.', 'error');\n          })\n        }\n        onMoveToWorkspace={async (id, targetWorkspaceId) => {\n          await moveNotebook({ id, workspaceId: targetWorkspaceId });\n        }}\n        onChangeStatus={(id, st: TColorStatus) => {\n          if (TColorKeys.includes(st)) {\n            changeNotebookStatus({\n              id,\n              status: st,\n            }).catch((err) => {\n              console.error('Failed to change status. Error:', err);\n              toast('Failed to change notebook status', 'error');\n            });\n          } else {\n            console.error(\n              `Bad status. Error: ${st} is not valid ${JSON.stringify(\n                TColorKeys,\n                null,\n                2\n              )}`\n            );\n            toast('Failed to change notebook status', 'error');\n          }\n        }}\n        onImport={(source) =>\n          importNotebook({ workspaceId, source }).catch((err) => {\n            console.error('Failed to import notebook. Error:', err);\n            toast('Failed to import notebook.', 'error');\n          })\n        }\n        onUnarchive={(id: string) =>\n          unarchiveNotebook({\n            id,\n          }).catch((err) => {\n            console.error('Failed to un-archive notebook. Error:', err);\n            toast('Failed to move notebook to all notebooks.', 'error');\n          })\n        }\n        onCTADismiss={onCTADismiss}\n        showCTA={!ctaDismissed}\n        onPointerEnter={loadNotebooks}\n      />\n    </Frame>\n  );\n\n  return (\n    <>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <LazyRoute title={currentWorkspace.name}>\n              <Dashboard\n                sidebar={sidebarWrapper}\n                topbar={topBarWrapper}\n                notebookList={notebookListWrapper}\n              />\n              <Outlet />\n            </LazyRoute>\n          }\n        >\n          <Route\n            path={currentWorkspaceRoute.section.templateWithQuery}\n            element={<></>}\n          />\n          <Route\n            path={currentWorkspaceRoute.archived.template}\n            element={<></>}\n          />\n          <Route path={currentWorkspaceRoute.shared.template} element={<></>} />\n          <Route\n            path={currentWorkspaceRoute.createNew.template}\n            element={\n              <CreateWorkspaceModal\n                Heading=\"h2\"\n                closeHref={currentWorkspaceRoute.$}\n                onCreate={async (workspaceName) => {\n                  const data = await createWorkspace({ name: workspaceName });\n                  if (data) {\n                    navigate(\n                      workspaces({}).workspace({\n                        workspaceId: data.createWorkspace.id,\n                      }).$\n                    );\n                  }\n                }}\n              />\n            }\n          />\n          <Route\n            path={currentWorkspaceRoute.edit.template}\n            element={\n              <EditWorkspaceModal\n                Heading=\"h1\"\n                name={currentWorkspace.name}\n                allowDelete={\n                  workspaceData?.workspaces &&\n                  workspaceData?.workspaces?.length > 1\n                }\n                closeHref={currentWorkspaceRoute.$}\n                onRename={async (newName) => {\n                  const success = await renameWorkspace({\n                    id: currentWorkspace.id,\n                    name: newName,\n                  });\n                  if (success) {\n                    navigate(currentWorkspaceRoute.$);\n                  }\n                }}\n                onDelete={async () => {\n                  navigate(workspaces({}).$);\n                  const success = await deleteWorkspace({\n                    id: currentWorkspace.id,\n                  });\n                  if (success) {\n                    toast('Workspace deleted.', 'success');\n                    navigate('/');\n                  }\n                }}\n              />\n            }\n          />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage Heading=\"h1\" wellKnown=\"404\" />} />\n      </Routes>\n      <div style={{ display: userSettings ? 'block' : 'none' }}>\n        <EditUserModal\n          name={name}\n          username={username}\n          description={description}\n          // closeHref={currentWorkspaceRoute.$}\n          onClose={() => setUserSettings(false)}\n          onChangeName={(newName) => {\n            setName(newName);\n            updateUser({\n              props: {\n                name: newName,\n              },\n            }).catch((err) => {\n              console.error('Failed to update user. Error:', err);\n              toast('Could not change your name', 'error');\n            });\n          }}\n          onChangeUsername={async (newUsername) => {\n            const data = await setUsernameMutation({\n              props: {\n                username: newUsername,\n              },\n            });\n            if (data) {\n              const { setUsername: usenameChangeSuccessful } = data;\n              if (usenameChangeSuccessful) {\n                toast(`You are now ${newUsername}`, 'success');\n                setUsername(newUsername);\n              } else {\n                toast(`Username ${newUsername} is already taken`, 'error');\n              }\n            }\n          }}\n          onChangeDescription={async (newDescription) => {\n            const data = await updateUser({\n              props: {\n                description: newDescription,\n              },\n            });\n            if (data) {\n              setDescription(newDescription);\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n};\nexport default Workspace;\n","import { css } from '@emotion/react';\nimport { cssVar } from '../../primitives';\n\nconst styles = css({\n  display: 'flex',\n  minHeight: '8px',\n\n  backgroundColor: cssVar('highlightColor'),\n  borderRadius: '4px',\n});\nconst lessRoundStyles = css({\n  borderRadius: '2px',\n});\n\ninterface PlaceholderProps {\n  lessRound?: boolean;\n}\n\nexport const Placeholder = ({\n  lessRound = false,\n}: PlaceholderProps): ReturnType<React.FC> => {\n  return (\n    <div role=\"presentation\" css={[styles, lessRound && lessRoundStyles]} />\n  );\n};\n","import React from 'react';\nimport { css } from '@emotion/react';\nimport { cssVar } from '../../../primitives';\n\nconst containerStyle = css({\n  width: '100%',\n  display: 'flex',\n  padding: '16px 0',\n  borderBottom: '1px solid',\n  borderColor: `${cssVar('highlightColor')}`,\n  justifyContent: 'space-between',\n});\n\nconst backButtonStyles = css({\n  height: '32px',\n  width: '32px',\n  borderRadius: '32px',\n  backgroundColor: `${cssVar('highlightColor')}`,\n});\n\nconst rightPanel = css({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: '16px',\n  marginRight: '-1rem',\n});\n\nconst avatarPlaceholderStyles = css({\n  height: '24px',\n  width: '24px',\n  borderRadius: '24px',\n  backgroundColor: `${cssVar('highlightColor')}`,\n});\n\nconst shareButtonPlaceholderStyles = css({\n  height: '33.68px',\n  width: '64px',\n  borderRadius: '6px',\n  backgroundColor: `${cssVar('highlightColor')}`,\n});\n\nexport const TopbarPlaceholder: React.FC = () => (\n  <div css={containerStyle}>\n    <div css={backButtonStyles} />\n    <div css={rightPanel}>\n      <div css={avatarPlaceholderStyles} />\n      <div css={shareButtonPlaceholderStyles} />\n    </div>\n  </div>\n);\n","import { CSSObject } from '@emotion/react';\nimport { smallestDesktop, smallestMobile } from '../primitives';\nimport { viewportCalc } from '../utils';\n\nexport const horizontalPadding = viewportCalc(\n  smallestMobile,\n  20,\n  smallestDesktop,\n  28,\n  'px',\n  'vw'\n);\nexport const verticalPadding = '26px';\n\nexport const gridStyles: CSSObject = {\n  width: '100%',\n  display: 'grid',\n  gridTemplateColumns:\n    '[icon] 42px [title] min-content [tags] 1fr [actions] 28px',\n  alignItems: 'center',\n};\n","import { baseSwatches } from './swatches';\n\nexport const ColorStatusNames = {\n  draft: 'Draft',\n  review: 'Review',\n  approval: 'Approval',\n  done: 'Done',\n} as const;\nexport type TColorStatus = keyof typeof ColorStatusNames;\nexport const TColorKeys = Object.keys(ColorStatusNames);\n\nexport const statusColors = {\n  draft: baseSwatches.Malibu,\n  review: baseSwatches.Perfume,\n  approval: baseSwatches.Grapefruit,\n  done: baseSwatches.Sulu,\n};\n\nexport const AvailableColorStatus: TColorStatus[] = Object.keys(\n  statusColors\n) as TColorStatus[];\n"],"names":["parseIconColorFromIdentifier","iconIdentifier","parsedIcon","replace","split","length","console","error","ok","icon","iconColor","userIconKeys","swatchNames","containerStyle","avatarPlaceholderStyles","css","height","width","borderRadius","marginTop","marginBottom","backgroundColor","cssVar","buttonPlaceholderStyles","DashboardSidebarPlaceholder","gridStyles","notebookList","styles","alignItems","padding","iconStyles","margin","display","titleStyles","maxWidth","descriptionStyles","middleAndRightStyles","NotebookListItemPlaceholder","role","Placeholder","overflow","gridTemplateRows","rowGap","headerStyles","bodyStyles","NotebookListPlaceholder","lessRound","Array","fill","map","_","i","crossBarsQuery","smallestDesktop","minHeight","position","gridTemplate","sidebarStyles","borderRight","Dashboard","sidebar","topbar","forceDownload","fileName","file","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","exportNotebook","notebookId","async","updates","getLocalNotebookUpdates","fetch","encodeURIComponent","method","blob","remoteExportNotebookWithUpdates","exportNotebookBackups","remoteExportNotebookBackups","makeIcons","notebook","status","onExport","id","onExportBackups","creationDate","Date","createdAt","workspaceCtaDismissKey","useMutationResultHandler","fn","errorMessage","toast","useToast","resp","args","data","err","loadTopbar","Topbar","lazy","loadSidebar","Sidebar","loadNotebookList","NotebookList","loadCreateWorkspaceModal","CreateWorkspaceModal","loadEditWorkspaceModal","EditWorkspaceModal","loadEditUserModal","EditUserModal","loadNotebooks","then","show","showNewMessage","useIntercom","showFeedback","useCallback","workspaceId","useRouteParams","workspaces","workspace","currentWorkspaceRoute","navigate","useNavigate","maybeWorkspaceFolder","useParams","params","matchPath","section","templateWithQuery","sectionId","isArchivePage","isSharedPage","session","useSession","user","useUserQuery","userSettings","setUserSettings","useState","name","setName","self","username","setUsername","description","setDescription","result","refetch","useGetWorkspacesQuery","requestPolicy","createNotebook","useCreateNotebookMutation","deleteNotebook","useUpdateNotebookArchiveMutation","finalDeleteNotebook","useDeleteNotebookMutation","duplicateNotebook","useDuplicateNotebookMutation","moveNotebook","useMoveNotebookMutation","importNotebook","useImportNotebookMutation","createWorkspace","useCreateWorkspaceMutation","renameWorkspace","useRenameWorkspaceMutation","deleteWorkspace","useDeleteWorkspaceMutation","changeNotebookStatus","useUpdateNotebookStatusMutation","updateUser","useUpdateUserMutation","setUsernameMutation","useSetUsernameMutation","unarchiveNotebook","useUnarchiveNotebookMutation","createSection","useCreateSectionMutation","deleteSection","useDeleteSectionMutation","editSection","useUpdateSectionMutation","movePadToSection","useUpdateSectionAddNotebookMutation","signoutCallback","signOut","redirect","location","pathname","ctaDismissed","setCtaDismissed","global","localStorage","getItem","onCTADismiss","setItem","workspaceData","currentWorkspace","useMemo","find","w","pageInfo","sections","type","filterNotebooks","page","archived","filterPads","useEffect","allSectionNotebooks","sct","pads","filter","allNotebooks","sortBy","items","item","parse","sharedNotebooks","padsSharedWithMe","showNotebooks","Heading","wellKnown","handleCreateNotebook","createdNotebookData","notebooks","createPad","$","allWorkspaces","numberOfMembers","sidebarWrapper","title","suspenseFallback","email","onLogout","activeWorkspace","onCreateWorkspace","createNew","onEditWorkspace","edit","onClickWorkspace","onCreateSection","onUpdateSection","onDeleteSection","sId","res","catch","onPointerEnter","onOpenSettings","topBarWrapper","TopbarPlaceholder","onCreateNotebook","notebookListWrapper","mainWorkspaceRoute","otherWorkspaces","onMoveToSection","pId","onDelete","onDuplicate","targetWorkspace","onMoveToWorkspace","targetWorkspaceId","onChangeStatus","st","TColorKeys","JSON","stringify","onImport","source","onUnarchive","showCTA","path","element","template","shared","closeHref","onCreate","workspaceName","allowDelete","onRename","newName","style","onClose","onChangeName","props","onChangeUsername","newUsername","usenameChangeSuccessful","onChangeDescription","newDescription","lessRoundStyles","borderBottom","borderColor","justifyContent","backButtonStyles","rightPanel","shareButtonPlaceholderStyles","horizontalPadding","viewportCalc","smallestMobile","verticalPadding","gridTemplateColumns","ColorStatusNames","draft","review","approval","done","Object","keys","statusColors","baseSwatches","AvailableColorStatus"],"sourceRoot":""}