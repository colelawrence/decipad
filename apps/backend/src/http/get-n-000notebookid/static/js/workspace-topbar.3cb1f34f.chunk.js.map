{"version":3,"file":"static/js/workspace-topbar.3cb1f34f.chunk.js","mappings":"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","sources":["../../ui/src/molecules/SearchBar/SearchBar.tsx","../../ui/src/templates/DashboardTopbar/DashboardTopbar.tsx","../../../apps/frontend/src/workspaces/workspace/Topbar.tsx","../../ui/src/atoms/ColorStatus/ColorStatusCircle.tsx","../../ui/src/molecules/FilterBubbles/FilterBubbles.tsx","../../ui/src/styles/dashboard.ts"],"sourcesContent":["import { isFlagEnabled } from '@decipad/feature-flags';\nimport { css } from '@emotion/react';\nimport { capitalize } from 'lodash';\nimport { FC, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  ArrayParam,\n  StringParam,\n  useQueryParam,\n  withDefault,\n} from 'use-query-params';\nimport { ColorStatusCircle, InputField, MenuItem } from '../../atoms';\nimport * as icons from '../../icons';\nimport { smallestDesktop } from '../../primitives';\nimport { AvailableColorStatus, ColorStatusNames } from '../../utils';\nimport { FilterBubbles } from '../FilterBubbles/FilterBubbles';\nimport { MenuList } from '../MenuList/MenuList';\n\nexport const SearchBar = (): ReturnType<FC> => {\n  const [search, setSearch] = useQueryParam(\n    'search',\n    withDefault(StringParam, '')\n  );\n  const [status, setStatus] = useQueryParam(\n    'status',\n    withDefault(ArrayParam, [])\n  );\n  const [visibility, setVisibility] = useQueryParam(\n    'visibility',\n    withDefault(StringParam, '')\n  );\n  const [statusOpen, setStatusOpen] = useState(false);\n  const [visibilityOpen, setVisibilityOpen] = useState(false);\n\n  const { '*': maybeWorkspaceFolder } = useParams();\n  const displaySearchBox =\n    isFlagEnabled('DASHBOARD_SEARCH') && maybeWorkspaceFolder === '';\n  const noNulls = useMemo(\n    () => status.filter((x) => x !== null) as string[],\n    [status]\n  );\n\n  if (!displaySearchBox) {\n    return <div />;\n  }\n  return (\n    <div css={searchBarStyles}>\n      <div css={css({ display: 'flex', gap: 12, width: 'calc(100% - 300px)' })}>\n        <span css={{ height: '18px', width: '18px' }}>\n          <icons.Search />\n        </span>\n        <span css={css({ width: '100%' })}>\n          <InputField\n            type=\"search\"\n            placeholder=\"Search for notebooks, e.g. sales -qbr\"\n            value={search}\n            onChange={setSearch}\n          />\n        </span>\n      </div>\n      <div css={css({ display: 'inline-flex', gap: 8 })}>\n        <MenuList\n          root\n          dropdown\n          align=\"start\"\n          side=\"bottom\"\n          sideOffset={10}\n          open={visibilityOpen}\n          onChangeOpen={setVisibilityOpen}\n          trigger={\n            <div>\n              <FilterBubbles\n                description={\n                  visibility === ''\n                    ? 'Filter by visibility'\n                    : capitalize(visibility)\n                }\n                icon={<icons.Caret variant=\"down\" />}\n              />\n            </div>\n          }\n        >\n          {visibility === '' ? null : (\n            <MenuItem\n              key={'clear-status'}\n              icon={<icons.Close />}\n              onSelect={() => {\n                setVisibility('');\n                setVisibilityOpen(!visibilityOpen);\n              }}\n            >\n              <span>Clear</span>\n            </MenuItem>\n          )}\n\n          <MenuItem\n            icon={<icons.Globe />}\n            onSelect={() => {\n              setVisibility('public');\n              setVisibilityOpen(!visibilityOpen);\n            }}\n            selected={visibility === 'public'}\n          >\n            <span>Public</span>\n          </MenuItem>\n          <MenuItem\n            icon={<icons.Hide />}\n            onSelect={() => {\n              setVisibility('private');\n              setVisibilityOpen(!visibilityOpen);\n            }}\n            selected={visibility === 'private'}\n          >\n            <span>Private</span>\n          </MenuItem>\n        </MenuList>\n        <MenuList\n          root\n          dropdown\n          align=\"start\"\n          side=\"bottom\"\n          sideOffset={10}\n          open={statusOpen}\n          onChangeOpen={setStatusOpen}\n          trigger={\n            <div>\n              <FilterBubbles\n                description={\n                  noNulls.length > 0\n                    ? noNulls.map((s) => capitalize(s)).join(', ')\n                    : 'Filter by status'\n                }\n                icon={<icons.Caret variant=\"down\" />}\n              />\n            </div>\n          }\n        >\n          {noNulls.length > 0 ? (\n            <MenuItem\n              key={'clear-status'}\n              icon={<icons.Close />}\n              onSelect={() => {\n                setStatus([]);\n                setStatusOpen(!statusOpen);\n              }}\n            >\n              <span>Clear</span>\n            </MenuItem>\n          ) : null}\n          {AvailableColorStatus.map((label) => (\n            <MenuItem\n              key={label}\n              icon={<ColorStatusCircle name={label} />}\n              onSelect={() => {\n                const statusCopy = status.slice();\n                const i = statusCopy.indexOf(label);\n                if (i > -1) {\n                  statusCopy.splice(i, 1);\n                } else {\n                  statusCopy.push(label);\n                }\n\n                setStatus(statusCopy);\n                setStatusOpen(!statusOpen);\n              }}\n              selected={noNulls.includes(label)}\n            >\n              <span>{ColorStatusNames[label]}</span>\n            </MenuItem>\n          ))}\n        </MenuList>\n      </div>\n    </div>\n  );\n};\n\nconst searchBarStyles = css({\n  display: 'inline-flex',\n  gap: 8,\n  flexDirection: 'row',\n  flexWrap: 'nowrap',\n  alignItems: 'center',\n  alignContent: 'center',\n  justifyContent: 'space-between',\n  height: '100%',\n  [`@media (max-width: ${smallestDesktop.landscape.width}px)`]: {\n    display: 'none',\n  },\n});\n","import { isFlagEnabled } from '@decipad/feature-flags';\nimport { noop } from '@decipad/utils';\nimport { css } from '@emotion/react';\nimport { useParams } from 'react-router-dom';\nimport { Button } from '../../atoms';\nimport { Plus } from '../../icons';\nimport { SearchBar } from '../../molecules';\nimport { cssVar, smallScreenQuery } from '../../primitives';\nimport { dashboard, notebookList } from '../../styles';\n\ntype DashboardTopbarProps = {\n  readonly onCreateNotebook?: () => void;\n\n  readonly onPointerEnter?: () => void;\n};\n\nexport const DashboardTopbar = ({\n  onCreateNotebook = noop,\n\n  onPointerEnter,\n}: DashboardTopbarProps): ReturnType<React.FC> => {\n  const { '*': maybeWorkspaceFolder } = useParams();\n  const displaySearchBoxBorder =\n    isFlagEnabled('DASHBOARD_SEARCH') && maybeWorkspaceFolder === '';\n  return (\n    <div\n      css={css({\n        [smallScreenQuery]: {\n          backgroundColor: cssVar('highlightColor'),\n        },\n      })}\n    >\n      <div\n        css={[\n          dashboardTopbarWrapperStyles,\n          displaySearchBoxBorder && {\n            borderBottom: `1px solid ${cssVar('borderColor')}`,\n            [smallScreenQuery]: {\n              borderBottom: 0,\n            },\n          },\n        ]}\n        onPointerEnter={onPointerEnter}\n      >\n        <div css={leftStyles}>\n          <SearchBar />\n        </div>\n        <div css={rightStyles}>\n          <Button\n            type=\"primaryBrand\"\n            size=\"extraSlim\"\n            onClick={onCreateNotebook}\n          >\n            <div\n              css={{\n                display: 'inline-flex',\n                gap: 8,\n                flexDirection: 'row',\n                flexWrap: 'nowrap',\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <span css={{ height: '18px', width: '18px' }}>\n                <Plus />\n              </span>\n              <span>New Notebook</span>\n            </div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst dashboardTopbarWrapperStyles = css({\n  padding: `\n    ${dashboard.topPadding}\n    ${notebookList.horizontalPadding}\n  `,\n\n  display: 'flex',\n  justifyContent: 'space-between',\n  columnGap: '32px',\n\n  flexWrap: 'wrap-reverse',\n  rowGap: '32px',\n  [smallScreenQuery]: {\n    borderTop: `1px solid ${cssVar('borderColor')}`,\n    borderTopLeftRadius: '20px',\n    borderTopRightRadius: '20px',\n    backgroundColor: cssVar('backgroundColor'),\n  },\n});\nconst leftStyles = css({\n  display: 'grid',\n  width: 'calc(100% - 180px)',\n  alignItems: 'baseline',\n  [smallScreenQuery]: {\n    padding: '16px 16.5px',\n    borderRadius: '6px',\n  },\n});\nconst rightStyles = css({\n  display: 'grid',\n  gridAutoFlow: 'column',\n  alignItems: 'center',\n  columnGap: '16px',\n  [smallScreenQuery]: {\n    display: 'none',\n  },\n});\n","import { DashboardTopbar } from '@decipad/ui';\n\nexport default DashboardTopbar;\n","import type { FC } from 'react';\nimport { Dot } from '..';\nimport { statusColors } from '../../utils';\nimport { ColorStatusProps } from './ColorStatusProps';\n\nexport const ColorStatusCircle: FC<ColorStatusProps> = ({\n  name = 'draft',\n}: ColorStatusProps) => {\n  return <Dot color={statusColors[name]} variant />;\n};\n","import { css, SerializedStyles } from '@emotion/react';\nimport { FC, ReactNode } from 'react';\nimport { cssVar, p12Medium } from '../../primitives';\n\ninterface FilterBubblesProps {\n  icon: ReactNode;\n  description: string;\n  iconStyles?: SerializedStyles;\n}\n\nexport const FilterBubbles = ({\n  icon,\n  iconStyles,\n  description,\n}: FilterBubblesProps): ReturnType<FC> => {\n  return (\n    <span css={tagStyle}>\n      <span css={[tagInlineStyles, iconStyles]}>{icon}</span>\n      <span css={[tagInlineStyles, tagInlineTextAdjustmentForFont]}>\n        {description}\n      </span>\n    </span>\n  );\n};\n\nconst tagStyle = css(p12Medium, {\n  border: `1px solid ${cssVar('strongerHighlightColor')}`,\n  padding: '2px 6px',\n  borderRadius: '4px',\n  display: 'flex',\n  gap: '4px',\n  maxWidth: 125,\n  alignItems: 'center',\n});\n\nconst tagInlineStyles = css({\n  minHeight: '12px',\n  minWidth: '12px',\n});\n\nconst tagInlineTextAdjustmentForFont = css({\n  transform: 'translateY(1px)',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n});\n","import { smallestDesktop, smallestMobile } from '../primitives';\nimport { viewportCalc } from '../utils';\n\nexport const topPadding = viewportCalc(\n  smallestMobile,\n  12,\n  smallestDesktop,\n  16,\n  'px',\n  'vmax'\n);\n\nexport const CTAHeight = 210;\n"],"names":["SearchBar","search","setSearch","useQueryParam","withDefault","StringParam","status","setStatus","ArrayParam","visibility","setVisibility","statusOpen","setStatusOpen","useState","visibilityOpen","setVisibilityOpen","maybeWorkspaceFolder","useParams","displaySearchBox","isFlagEnabled","noNulls","useMemo","filter","x","css","searchBarStyles","InputField","type","placeholder","value","onChange","MenuList","root","dropdown","align","side","sideOffset","open","onChangeOpen","trigger","FilterBubbles","description","capitalize","icon","variant","MenuItem","onSelect","selected","length","map","s","join","AvailableColorStatus","label","ColorStatusCircle","name","statusCopy","slice","i","indexOf","splice","push","includes","ColorStatusNames","display","gap","flexDirection","flexWrap","alignItems","alignContent","justifyContent","height","smallestDesktop","dashboardTopbarWrapperStyles","padding","dashboard","notebookList","columnGap","rowGap","smallScreenQuery","borderTop","cssVar","borderTopLeftRadius","borderTopRightRadius","backgroundColor","leftStyles","width","borderRadius","rightStyles","gridAutoFlow","onCreateNotebook","noop","onPointerEnter","displaySearchBoxBorder","borderBottom","Button","size","onClick","Plus","color","statusColors","iconStyles","tagStyle","tagInlineStyles","tagInlineTextAdjustmentForFont","p12Medium","border","maxWidth","topPadding","viewportCalc","smallestMobile","CTAHeight"],"sourceRoot":""}