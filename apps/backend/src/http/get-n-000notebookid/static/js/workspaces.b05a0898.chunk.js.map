{"version":3,"file":"static/js/workspaces.b05a0898.chunk.js","mappings":"yMAOA,MAkCA,EAlCuC,KAAO,IAAD,IAC3C,MAAMA,GAAkBC,EAAAA,EAAAA,KAA6B,IAC9CC,IAAUC,EAAAA,EAAAA,IAAS,CACxBC,MAAM,gGASR,IAAIC,EAoBJ,OAlBoC,OAArB,QAAX,EAAAH,EAAOI,YAAI,OAAY,QAAZ,EAAX,EAAaC,kBAAU,WAAZ,EAAX,EAA0B,IAC5BP,EAAgB,CAAEQ,KAAM,aACrBC,MAAMC,IACL,IAAIA,EAAIJ,KAON,MAJAK,QAAQC,MACN,uDACAF,GAEI,IAAIG,MAAM,+CANhBR,EAAcK,EAAIJ,KAAKN,gBAAgBc,MAS1CC,MAAMC,EAAAA,IAETX,EAAcH,EAAOI,KAAKC,WAAW,GAAGO,IAGnC,QAAC,KAAQ,CAACG,SAAO,EAACC,IAAIX,EAAAA,EAAAA,IAAW,IAAIY,UAAU,CAAEd,gBAAee,KCjCnEC,EAAgB,IACpB,uFACIC,GAAYC,EAAAA,EAAAA,MAAKF,GAGvBA,IAEA,MAuBA,EAvB6B,KAEzB,QAAC,KAAM,YACL,QAAC,KAAK,CACJG,KAAK,IACLC,SACE,QAAC,KAAS,WACR,QAAC,EAA0B,SAIjC,QAAC,KAAK,CACJD,KAAI,WAAKjB,EAAAA,EAAAA,IAAW,IAAIY,UAAUO,SAAQ,MAC1CD,SACE,QAAC,KAAS,WACR,QAACH,EAAS,SAIhB,QAAC,KAAK,CAACE,KAAK,IAAIC,SAAS,QAAC,KAAS,CAACE,QAAQ,KAAKC,UAAU","sources":["../../../apps/frontend/src/workspaces/RedirectToDefaultWorkspace.tsx","../../../apps/frontend/src/workspaces/Workspaces.tsx"],"sourcesContent":["import { workspaces } from '@decipad/routing';\nimport { captureException } from '@sentry/browser';\nimport { FC } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useQuery } from 'urql';\nimport { useCreateWorkspaceMutation } from '../graphql';\n\nconst RedirectToDefaultWorkspace: FC = () => {\n  const createWorkspace = useCreateWorkspaceMutation()[1];\n  const [result] = useQuery({\n    query: `\n      query GetWorkspaces {\n        workspaces {\n          id\n        }\n      }\n    `,\n  });\n\n  let workspaceId;\n\n  if (result.data?.workspaces?.[0] == null) {\n    createWorkspace({ name: 'Personal' })\n      .then((res) => {\n        if (res.data) {\n          workspaceId = res.data.createWorkspace.id;\n        } else {\n          console.error(\n            'Failed to create workspace. Received empty response.',\n            res\n          );\n          throw new Error('No workspaces found. Please contact support');\n        }\n      })\n      .catch(captureException);\n  } else {\n    workspaceId = result.data.workspaces[0].id;\n  }\n\n  return <Navigate replace to={workspaces({}).workspace({ workspaceId }).$} />;\n};\nexport default RedirectToDefaultWorkspace;\n","import { workspaces } from '@decipad/routing';\nimport { lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { ErrorPage, LazyRoute } from '../meta';\nimport RedirectToDefaultWorkspace from './RedirectToDefaultWorkspace';\n\nconst loadWorkspace = () =>\n  import(/* webpackChunkName: \"workspace\" */ './workspace/Workspace');\nconst Workspace = lazy(loadWorkspace);\n\n// prefetch\nloadWorkspace();\n\nconst Workspaces: React.FC = () => {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <LazyRoute>\n            <RedirectToDefaultWorkspace />\n          </LazyRoute>\n        }\n      />\n      <Route\n        path={`${workspaces({}).workspace.template}/*`}\n        element={\n          <LazyRoute>\n            <Workspace />\n          </LazyRoute>\n        }\n      />\n      <Route path=\"*\" element={<ErrorPage Heading=\"h1\" wellKnown=\"404\" />} />\n    </Routes>\n  );\n};\nexport default Workspaces;\n"],"names":["createWorkspace","useCreateWorkspaceMutation","result","useQuery","query","workspaceId","data","workspaces","name","then","res","console","error","Error","id","catch","captureException","replace","to","workspace","$","loadWorkspace","Workspace","lazy","path","element","template","Heading","wellKnown"],"sourceRoot":""}