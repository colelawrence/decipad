{"version":3,"file":"static/js/notebook-editor.f1ca1e4f.chunk.js","mappings":"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","sources":["../../notebook-state/src/notebookState.tsx","../../ui/src/molecules/Progress/Progress.tsx","../../ui/src/organisms/UploadProgressModal/UploadProgressModal.tsx","../../editor-attachments/src/validateItemAndGetFile.ts","../../editor-attachments/src/EditorAttachmentsContext.tsx","../../editor-attachments/src/DropZoneDetector.tsx","../../editor-attachments/src/EditorAttachmentsHandler.tsx","../../editor-utils/src/getPointSafe.ts","../../notebook/src/useInitialSelection.ts","../../notebook/src/InitialSelection.tsx","../../notebook/src/NotebookLoader.tsx","../../notebook/src/useSuspenseWhileNotLoaded.ts","../../notebook/src/useNotebookWarning.ts","../../../apps/frontend/src/notebooks/notebook/Editor.tsx","../../notebook/src/Notebook.tsx","../../ui/src/atoms/Overlay/Overlay.tsx","../../ui/src/molecules/Modal/Modal.tsx"],"sourcesContent":["import { createDocSyncEditor, OnLoadedCallback } from '@decipad/docsync';\nimport { FC, ReactNode } from 'react';\nimport { create } from 'zustand';\nimport createContext from 'zustand/context';\nimport { captureException } from '@sentry/browser';\nimport { take } from 'rxjs';\nimport { Computer } from '@decipad/computer';\nimport { createTPlateEditor } from '@decipad/editor-types';\nimport type { NotebookState } from './state';\n\ninterface NotebookStateProviderProps {\n  children?: ReactNode;\n}\n\nconst { Provider, useStore } = createContext();\nconst LOAD_TIMEOUT_MS = 5000;\n\nconst initialState = (): Omit<\n  NotebookState,\n  'initEditor' | 'destroy' | 'setInitialFocusDone'\n> => {\n  let resolveNotebookLoadedPromise: () => void;\n  const notebookLoadedPromise = new Promise<void>((r) => {\n    resolveNotebookLoadedPromise = r;\n  });\n  return {\n    syncClientState: 'idle',\n    editor: undefined,\n    computer: new Computer(),\n    loadedFromLocal: false,\n    loadedFromRemote: false,\n    timedOutLoadingFromRemote: false,\n    hasLocalChanges: false,\n    initialFocusDone: false,\n    notebookLoadedPromise,\n    resolveNotebookLoadedPromise: () => {\n      return resolveNotebookLoadedPromise;\n    },\n  };\n};\n\nconst createStore = () =>\n  create<NotebookState>((set, get) => ({\n    ...initialState(),\n    initEditor: (notebookId, { plugins, docsync }, getSession) => {\n      if (docsync.initialState == null) {\n        // do not accept initializations without initial state\n        return;\n      }\n\n      // verify that if we have a matching connected docsync instance\n      const { editor: oldEditor, syncClientState } = get();\n      if (oldEditor) {\n        if (\n          syncClientState === 'created' &&\n          oldEditor.id === notebookId &&\n          oldEditor.isReadOnly === docsync.readOnly &&\n          !oldEditor.destroyed\n        ) {\n          // the one we have is just fine\n          return;\n        }\n        try {\n          oldEditor.disconnect();\n          oldEditor.destroy();\n        } catch (err) {\n          console.error('error destroying old docsync instance', err);\n        }\n      }\n\n      const editor = createTPlateEditor({\n        id: notebookId,\n        plugins,\n        disableCorePlugins: { history: true },\n      });\n\n      const loadTimeout = setTimeout(() => {\n        set({ timedOutLoadingFromRemote: true });\n        const { resolveNotebookLoadedPromise } = get();\n        resolveNotebookLoadedPromise()();\n      }, LOAD_TIMEOUT_MS);\n      const docSyncEditor = createDocSyncEditor(\n        notebookId,\n        {\n          ...docsync,\n          editor,\n          onError: captureException,\n        },\n        getSession\n      );\n\n      const onDocSyncEditorLoaded: OnLoadedCallback = (source) => {\n        if (source === 'local') {\n          set({ loadedFromLocal: true });\n        } else if (source === 'remote') {\n          clearTimeout(loadTimeout);\n          set({ loadedFromRemote: true });\n          docSyncEditor.offLoaded(onDocSyncEditorLoaded);\n          const { resolveNotebookLoadedPromise } = get();\n          setTimeout(() => {\n            resolveNotebookLoadedPromise()();\n          }, 0);\n        }\n      };\n\n      docSyncEditor.onLoaded(onDocSyncEditorLoaded);\n      docSyncEditor\n        .hasLocalChanges()\n        .pipe(take(1))\n        .subscribe(() => {\n          set({ hasLocalChanges: true });\n        });\n      set({\n        editor: docSyncEditor,\n        notebookHref: window.location.pathname,\n        syncClientState: 'created',\n        loadedFromLocal: false,\n        loadedFromRemote: false,\n        timedOutLoadingFromRemote: false,\n        hasLocalChanges: false,\n      });\n    },\n    setInitialFocusDone: () => {\n      set({ initialFocusDone: true });\n    },\n    destroy: () => {\n      const { syncClientState, editor } = get();\n      if (syncClientState === 'created') {\n        editor?.disconnect();\n        editor?.destroy();\n        set(initialState());\n      }\n    },\n  }));\n\nexport const NotebookStateProvider: FC<NotebookStateProviderProps> = ({\n  children,\n}) => <Provider createStore={createStore}>{children}</Provider>;\n\nexport const useNotebookState = (): NotebookState => {\n  return useStore() as NotebookState;\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { brand500, grey300, p12Medium } from '../../primitives';\n\nconst wrapper = css({\n  width: '100%',\n  backgroundColor: grey300.rgb,\n  borderRadius: 16,\n});\n\nconst progressStyles = css({\n  minWidth: 30,\n  height: 20,\n  borderRadius: 16,\n  backgroundColor: brand500.rgb,\n  display: 'flex',\n  justifyContent: 'end',\n  alignItems: 'center',\n  padding: '2px 6px 2px 0px',\n  marginTop: 8,\n  transition: 'width 0.5s',\n});\n\nexport interface ProgressProps {\n  readonly progress: number;\n  readonly label?: string;\n}\n\nexport const Progress: FC<ProgressProps> = ({ progress, label }) => {\n  return (\n    <div css={wrapper}>\n      <div\n        css={[\n          {\n            width: `${progress}%`,\n          },\n          progressStyles,\n        ]}\n      >\n        <span css={p12Medium}>{label}</span>\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Modal } from '../../molecules';\nimport { Progress } from '../../molecules/Progress/Progress';\n\ninterface UploadProgressModalProps {\n  files: Array<{\n    name: string;\n    progress: number;\n  }>;\n}\n\nexport const UploadProgressModal: FC<UploadProgressModalProps> = ({\n  files,\n}) => {\n  return (\n    <Modal>\n      <p>Uploading</p>\n      {files.map((file, index) => (\n        <div key={index}>\n          <Progress label={file.name} progress={file.progress} />\n        </div>\n      ))}\n    </Modal>\n  );\n};\n","const acceptableFileTypes = ['text/csv', 'application/json', 'image/'];\nconst validFileType = (type: string) =>\n  acceptableFileTypes.some((prefix) => type.startsWith(prefix));\n\nconst maxFileSizeBytes = 1_000_000;\n\nexport const validateItemAndGetFile = (item: DataTransferItem): File | true => {\n  const file = item.getAsFile();\n  if (!file) {\n    if (!validFileType(item.type)) {\n      throw new Error(`Cannot import file of type ${item.type}`);\n    }\n    return true;\n  }\n\n  if (!validFileType(file.type)) {\n    console.warn(\n      'Expected one of types',\n      acceptableFileTypes,\n      'but received file',\n      file,\n      'with type',\n      file.type\n    );\n    throw new Error(`Cannot import file of type ${file.type}`);\n  }\n\n  if (file.size > maxFileSizeBytes) {\n    console.warn(\n      'Expected only files smaller than',\n      maxFileSizeBytes,\n      'bytes but received file',\n      file,\n      'with size',\n      file.size\n    );\n    throw new Error(\n      `File too big (${file.size} bytes). Will only accept files smaller than ${maxFileSizeBytes} bytes.`\n    );\n  }\n\n  return file;\n};\n","interface UploadingAttachment {\n  file: File;\n  progress: number;\n}\n\ninterface EditorAttachmentsContextValue {\n  uploading: Array<UploadingAttachment>;\n}\n\nexport const defaultEditorAttachmentsContextValue =\n  (): EditorAttachmentsContextValue => ({\n    uploading: [],\n  });\n","import { useDelayedTrue } from '@decipad/react-utils';\nimport {\n  black,\n  cssVar,\n  mediumShadow,\n  p14Medium,\n  p16Medium,\n  strongOpacity,\n  transparency,\n} from '@decipad/ui';\nimport { css } from '@emotion/react';\nimport { FC, useEffect, useState } from 'react';\nimport { ConnectDropTarget } from 'react-dnd';\n\nconst dropZoneBorderDetectorThickness = '10px';\n\ninterface DropZoneProps {\n  connectDropTarget: ConnectDropTarget;\n  isOver: boolean;\n}\n\nexport const DropZoneDetector: FC<DropZoneProps> = ({\n  connectDropTarget,\n  isOver,\n}) => {\n  const isNotOver = useDelayedTrue(!isOver);\n  const [initializing, setInitializing] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setInitializing(false);\n    }, 2_000);\n\n    return () => clearTimeout(timeout);\n  }, [isNotOver]);\n\n  return (\n    <div\n      css={[\n        dropZoneWrapperStyles,\n        !initializing && !isNotOver && isOverDropZoneStyles,\n      ]}\n      ref={connectDropTarget}\n    >\n      {!initializing && !isNotOver && (\n        <div css={warningForDNDStyles}>\n          <h1 css={css(p16Medium, { color: cssVar('backgroundColor') })}>\n            Upload images or data\n          </h1>\n          <span css={css(p14Medium, { color: cssVar('weakerSlashIconColor') })}>\n            .csv, .json, .gif, .jpg, 1MB max\n          </span>\n        </div>\n      )}\n      <div css={dropZoneTopBorderDetectorTop} ref={connectDropTarget}></div>\n      <div css={dropZoneTopBorderDetectorBottom} ref={connectDropTarget}></div>\n      <div css={dropZoneTopBorderDetectorLeft} ref={connectDropTarget}></div>\n      <div css={dropZoneTopBorderDetectorRight} ref={connectDropTarget}></div>\n    </div>\n  );\n};\n\nconst dropZoneWrapperStyles = css({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  height: '100vh',\n  width: '100%',\n});\n\nconst warningForDNDStyles = css({\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '300px',\n  backgroundColor: cssVar('strongSlashIconColor'),\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: '40px 50px',\n  gap: 4,\n  borderRadius: 16,\n  isolation: 'isolate',\n});\n\nconst isOverDropZoneStyles = css({\n  zIndex: 3,\n  backgroundColor: transparency(black, strongOpacity).rgba,\n  boxShadow: `0px 3px 24px -4px ${mediumShadow.rgba}`,\n});\n\nconst dropZoneBorderDetector = css({\n  position: 'absolute',\n  zIndex: 3,\n});\n\nconst dropZoneTopBorderDetectorTop = css(dropZoneBorderDetector, {\n  top: 0,\n  width: '100%',\n  height: dropZoneBorderDetectorThickness,\n});\n\nconst dropZoneTopBorderDetectorBottom = css(dropZoneBorderDetector, {\n  bottom: 0,\n  width: '100%',\n  height: dropZoneBorderDetectorThickness,\n});\n\nconst dropZoneTopBorderDetectorLeft = css(dropZoneBorderDetector, {\n  left: 0,\n  height: '100vh',\n  width: dropZoneBorderDetectorThickness,\n});\n\nconst dropZoneTopBorderDetectorRight = css(dropZoneBorderDetector, {\n  right: 0,\n  height: '100vh',\n  width: dropZoneBorderDetectorThickness,\n});\n","import { FC, PropsWithChildren, useCallback, useState } from 'react';\nimport { DropTargetMonitor, useDrop } from 'react-dnd';\nimport { NativeTypes } from 'react-dnd-html5-backend';\nimport { produce } from 'immer';\nimport axios, { AxiosProgressEvent } from 'axios';\nimport { dndStore } from '@udecode/plate-ui-dnd';\nimport { useToast } from '@decipad/toast';\nimport { UploadProgressModal } from '@decipad/ui';\nimport { insertLiveConnection } from '@decipad/editor-components';\nimport { useComputer } from '@decipad/react-contexts';\nimport { useNotebookState } from '@decipad/notebook-state';\nimport {\n  focusEditor,\n  getStartPoint,\n  isCollapsed,\n  withoutNormalizing,\n} from '@udecode/plate';\nimport { css } from '@emotion/react';\nimport { useDelayedTrue } from '@decipad/react-utils';\nimport { insertImageBelow } from '@decipad/editor-utils';\nimport { Path } from 'slate';\nimport { validateItemAndGetFile } from './validateItemAndGetFile';\nimport { defaultEditorAttachmentsContextValue } from './EditorAttachmentsContext';\nimport { DropZoneDetector } from './DropZoneDetector';\n\nconst uploadProgressWrapperStyles = css({\n  zIndex: 3,\n});\n\ntype EditorAttachmentsHandlerProps = PropsWithChildren<{\n  getAttachmentForm: (\n    file: File\n  ) => Promise<undefined | [URL, FormData, string]>;\n  onAttached: (handle: string) => Promise<undefined | { url: URL }>;\n}>;\n\nexport const EditorAttachmentsHandler: FC<EditorAttachmentsHandlerProps> = ({\n  getAttachmentForm,\n  onAttached,\n  children,\n}) => {\n  const toast = useToast();\n  const computer = useComputer();\n  const { editor } = useNotebookState();\n\n  const [attachments, setAttachments] = useState(\n    defaultEditorAttachmentsContextValue\n  );\n\n  const onUploadProgress = useCallback(\n    (file: File) => (progressEvent: AxiosProgressEvent) => {\n      setAttachments(\n        produce(attachments, (att) => {\n          const desc = att.uploading.find((f) => f.file === file);\n          if (desc) {\n            desc.progress =\n              (progressEvent.loaded / (progressEvent.total ?? file.size)) * 100;\n          }\n        })\n      );\n    },\n    [attachments]\n  );\n\n  const attachGeneric = useCallback(\n    async (file: File): Promise<undefined | { url: string }> => {\n      const attForm = await getAttachmentForm(file);\n      if (!attForm) {\n        return;\n      }\n      const [target, form, handle] = attForm;\n      form.append('file', file);\n      await axios.post(target.toString(), form, {\n        onUploadProgress: onUploadProgress(file),\n      });\n      const onAttachedResponse = await onAttached(handle);\n      if (!onAttachedResponse) {\n        return;\n      }\n      return {\n        url: onAttachedResponse.url.toString(),\n      };\n    },\n    [getAttachmentForm, onAttached, onUploadProgress]\n  );\n\n  const attachImage = useCallback(\n    async (file: File): Promise<{ url: string }> => {\n      const targetURL = `/api/pads/${editor?.id}/images`;\n      const response = await axios.post(targetURL, file, {\n        onUploadProgress: onUploadProgress(file),\n      });\n      const url = response.data;\n      return { url };\n    },\n    [editor?.id, onUploadProgress]\n  );\n\n  const insertAttachment = useCallback(\n    (file: File, url: string) => {\n      if (!editor) {\n        return;\n      }\n      withoutNormalizing(editor, () => {\n        let insertAt: Path;\n        if (!editor.selection || !isCollapsed(editor.selection)) {\n          const point = getStartPoint(editor, [editor.children.length - 1]);\n          focusEditor(editor, point);\n          insertAt = point.path;\n        } else {\n          insertAt = editor.selection.anchor.path;\n        }\n\n        if (file.type.startsWith('image/')) {\n          insertImageBelow(editor, insertAt, url, file.name);\n        } else {\n          insertLiveConnection({ computer, editor, url });\n        }\n      });\n    },\n    [computer, editor]\n  );\n\n  const onAttach = useCallback(\n    async (file: File) => {\n      if (!editor?.id) {\n        return;\n      }\n      setAttachments(\n        produce(attachments, (att) => {\n          att.uploading.push({\n            file,\n            progress: 0,\n          });\n        })\n      );\n      try {\n        const attachResult = await (file.type.startsWith('image/')\n          ? attachImage(file)\n          : attachGeneric(file));\n        if (attachResult == null) {\n          return;\n        }\n        const { url } = attachResult;\n\n        setAttachments(\n          produce(attachments, (att) => {\n            const index = att.uploading.findIndex((f) => f.file === file);\n            if (index >= 0) {\n              att.uploading.splice(index, 1);\n            }\n          })\n        );\n        insertAttachment(file, url);\n      } catch (err) {\n        console.error(err);\n        toast('Error uploading file', 'error');\n        setAttachments(\n          produce(attachments, (att) => {\n            const index = att.uploading.findIndex((f) => f.file === file);\n            if (index >= 0) {\n              att.uploading.splice(index, 1);\n            }\n          })\n        );\n      }\n    },\n    [\n      attachGeneric,\n      attachImage,\n      attachments,\n      editor?.id,\n      insertAttachment,\n      toast,\n    ]\n  );\n\n  const [{ isOver }, connectDropTarget] = useDrop({\n    accept: [NativeTypes.FILE],\n    drop: (data: DataTransfer) => {\n      dndStore.set.isDragging(false);\n      const items = data?.items || [];\n      Array.from(items).forEach(async (item) => {\n        // Async fire and forget\n        try {\n          const file = validateItemAndGetFile(item);\n          if (file instanceof File) {\n            onAttach(file);\n          }\n        } catch (err) {\n          console.warn('Did not import invalid item', item);\n        }\n      });\n    },\n    canDrop: (data: DataTransfer) => {\n      const items = data?.items || [];\n      return Array.from(items).some((item) => {\n        try {\n          if (validateItemAndGetFile(item)) {\n            return true;\n          }\n        } catch {\n          // do nothing\n        }\n        return false;\n      });\n    },\n    collect: (monitor: DropTargetMonitor) => {\n      return {\n        isOver: monitor.isOver(),\n      };\n    },\n  });\n\n  const showUploading = useDelayedTrue(attachments.uploading.length > 0);\n\n  if (!editor || editor.isReadOnly || process.env.REACT_APP_E2E) {\n    return <>{children}</>;\n  }\n\n  return (\n    <>\n      <DropZoneDetector connectDropTarget={connectDropTarget} isOver={isOver} />\n      {children}\n      {showUploading ? (\n        <div css={uploadProgressWrapperStyles}>\n          <UploadProgressModal\n            files={attachments.uploading.map((f) => ({\n              name: f.file.name,\n              progress: f.progress,\n            }))}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n};\n","import { MyEditor } from '@decipad/editor-types';\nimport { getPoint } from '@udecode/plate';\nimport { EditorPointOptions, Location } from 'slate';\n\nexport const getPointSafe = (\n  editor: MyEditor,\n  at: Location,\n  options?: EditorPointOptions | undefined\n) => {\n  try {\n    return getPoint(editor, at, options);\n  } catch (err) {\n    return undefined;\n  }\n};\n","import {\n  useEditorSelector,\n  useIsEditorReadOnly,\n} from '@decipad/react-contexts';\nimport {\n  focusEditor,\n  getNode,\n  getStartPoint,\n  hasNode,\n  isText,\n  isElement,\n  toDOMNode,\n  isVoid,\n} from '@udecode/plate';\nimport { useEffect } from 'react';\nimport { BaseSelection, Path, Selection } from 'slate';\nimport { MyEditor } from '@decipad/editor-types';\nimport { getPersistedSelection } from '@decipad/editor-plugins';\nimport { getPointSafe } from '@decipad/editor-utils';\nimport { useNotebookState } from '@decipad/notebook-state';\n\nconst defaultSelection = [1] as Path;\n\nconst getDefaultSelection = (editor: MyEditor): Selection | undefined => {\n  try {\n    const initialPoint = getStartPoint(editor, defaultSelection);\n    return { focus: initialPoint, anchor: initialPoint };\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst getSelection = (editor: MyEditor): BaseSelection => {\n  const { selection } = editor;\n  return {\n    ...selection,\n    ...getDefaultSelection(editor),\n    ...getPersistedSelection(editor),\n  } as BaseSelection;\n};\n\nexport const useInitialSelection = (loaded: boolean, editor?: MyEditor) => {\n  const selection = useEditorSelector((ed) => ed.selection);\n  const { initialFocusDone, setInitialFocusDone } = useNotebookState();\n  const readOnly = useIsEditorReadOnly();\n\n  useEffect(() => {\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    if (!initialFocusDone && editor && loaded) {\n      const initialSel = getSelection(editor);\n      if (\n        initialSel &&\n        initialSel?.anchor &&\n        initialSel?.focus &&\n        hasNode(editor, initialSel?.anchor.path) &&\n        hasNode(editor, initialSel?.focus.path) &&\n        !selection &&\n        !readOnly\n      ) {\n        setInitialFocusDone();\n\n        timeout = setTimeout(() => {\n          try {\n            const focusSel = initialSel.focus;\n            if (!focusSel) {\n              return;\n            }\n            const at = focusSel?.path;\n            if (!at) {\n              return;\n            }\n            const node = getNode(editor, at);\n            if (!node) {\n              return;\n            }\n            const path = at.slice(0, -1);\n            const editorBlock = isText(node) ? getNode(editor, path) : node;\n            if (!editorBlock || !isElement(editorBlock)) {\n              return;\n            }\n            if (isVoid(editor, editorBlock)) {\n              return;\n            }\n\n            const block = toDOMNode(editor, editorBlock);\n            if (!block) {\n              return;\n            }\n            const point = getPointSafe(editor, initialSel.focus);\n            if (!point) {\n              return;\n            }\n            const bounding = block.getBoundingClientRect();\n            if (bounding.top > window.innerHeight) {\n              block.scrollIntoView();\n            }\n            focusEditor(editor, { path: point.path, offset: 0 });\n          } catch (err) {\n            console.warn('error setting the initial selection', err);\n          }\n        }, 500);\n      }\n    }\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [\n    editor,\n    initialFocusDone,\n    loaded,\n    readOnly,\n    selection,\n    setInitialFocusDone,\n  ]);\n};\n","import { MyEditor } from '@decipad/editor-types';\nimport { FC } from 'react';\nimport { useInitialSelection } from './useInitialSelection';\n\ninterface InitialSelectionProps {\n  loaded: boolean;\n  editor?: MyEditor;\n}\n\nexport const InitialSelection: FC<InitialSelectionProps> = ({\n  editor,\n  loaded,\n}) => {\n  useInitialSelection(loaded, editor);\n\n  return <></>;\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  ComputerContextProvider,\n  useEditorUserInteractionsContext,\n} from '@decipad/react-contexts';\nimport { useEditorPlugins } from '@decipad/editor-config';\nimport { useNotebookState } from '@decipad/notebook-state';\nimport { useToast } from '@decipad/toast';\nimport { Editor } from '@decipad/editor';\nimport { isServerSideRendering } from '@decipad/support';\nimport { useNotebookWarning } from './useNotebookWarning';\nimport type { NotebookProps } from './NotebokProps';\nimport { InitialSelection } from './InitialSelection';\nimport { useSuspenseWhileNotLoaded } from './useSuspenseWhileNotLoaded';\n\ntype NotebookLoaderProps = Omit<\n  NotebookProps,\n  'getAttachmentForm' | 'onAttached'\n>;\n\nexport const NotebookLoader: FC<NotebookLoaderProps> = ({\n  notebookId,\n  notebookMetaLoaded,\n  notebookTitle,\n  onNotebookTitleChange,\n  readOnly,\n  secret,\n  connectionParams,\n  initialState,\n  onEditor,\n  onDocsync,\n}) => {\n  const toast = useToast();\n  const { data: session } = useSession();\n\n  const {\n    notebookLoadedPromise,\n    initEditor,\n    editor,\n    computer,\n    loadedFromRemote,\n    timedOutLoadingFromRemote,\n    hasLocalChanges,\n    destroy,\n  } = useNotebookState();\n\n  const loaded = loadedFromRemote || timedOutLoadingFromRemote;\n\n  const interactions = useEditorUserInteractionsContext();\n\n  const plugins = useEditorPlugins({\n    notebookId,\n    computer,\n    readOnly,\n    notebookTitle,\n    onNotebookTitleChange,\n    interactions,\n  });\n\n  useEffect(() => {\n    if (editor) {\n      onEditor(editor);\n    }\n  }, [editor, onEditor]);\n\n  // notebook initialization: SSR\n  if (notebookMetaLoaded && plugins && isServerSideRendering()) {\n    // we need this for SSR\n    initEditor(\n      notebookId,\n      {\n        plugins,\n        docsync: {\n          readOnly,\n          authSecret: secret,\n          connectionParams,\n          initialState,\n          protocolVersion: 2,\n        },\n      },\n      () => session ?? undefined\n    );\n  }\n\n  // notebook initialization: client-side rendering\n  useEffect(() => {\n    if (notebookMetaLoaded && plugins) {\n      initEditor(\n        notebookId,\n        {\n          plugins,\n          docsync: {\n            readOnly,\n            authSecret: secret,\n            connectionParams,\n            initialState,\n            protocolVersion: 2,\n          },\n        },\n        () => session ?? undefined\n      );\n    }\n  }, [\n    connectionParams,\n    initEditor,\n    initialState,\n    notebookId,\n    notebookMetaLoaded,\n    plugins,\n    readOnly,\n    secret,\n    session,\n  ]);\n\n  useSuspenseWhileNotLoaded({ loaded, loadedPromise: notebookLoadedPromise });\n\n  const location = useLocation();\n\n  useEffect(() => {\n    return destroy; // always destroy the editor on unmount\n  }, [destroy, location]);\n\n  // docSync\n\n  useEffect(() => {\n    if (editor) {\n      onDocsync(editor);\n    }\n  }, [editor, onDocsync]);\n\n  const warning: string | false =\n    readOnly &&\n    `Changes to this notebook are not saved${\n      (session?.user &&\n        '. Please duplicate to customize and make it your own.') ||\n      ''\n    }`;\n  const [toastedWarning, setToastedWarning] = useState(false);\n\n  useEffect(() => {\n    if (warning && hasLocalChanges && !toastedWarning) {\n      setToastedWarning(true);\n      toast(warning as string, 'warning', { autoDismiss: false });\n    }\n  }, [editor, hasLocalChanges, toast, toastedWarning, warning]);\n\n  useNotebookWarning();\n\n  return (\n    <ComputerContextProvider computer={computer}>\n      <Editor\n        notebookId={notebookId}\n        isSavedRemotely={editor?.isSavedRemotely()}\n        editor={editor}\n        readOnly={readOnly}\n      >\n        <InitialSelection loaded={loaded} editor={editor} />\n      </Editor>\n    </ComputerContextProvider>\n  );\n};\n","import { useRef } from 'react';\nimport { isServerSideRendering } from '@decipad/support';\n\ninterface UseSuspenseWhileNotLoadedProps {\n  loaded: boolean;\n  loadedPromise: Promise<void>;\n}\n\nexport const useSuspenseWhileNotLoaded = ({\n  loaded,\n  loadedPromise,\n}: UseSuspenseWhileNotLoadedProps) => {\n  const loadedResolved = useRef(loaded);\n  if (isServerSideRendering()) {\n    if (!loadedResolved.current) {\n      // suspend while loading notebook\n      loadedPromise.then(() => {\n        loadedResolved.current = true;\n      });\n      throw loadedPromise;\n    }\n  } else if (!loadedResolved.current) {\n    loadedResolved.current = true;\n  }\n};\n","import { useToast } from '@decipad/toast';\nimport { useEffect, useState } from 'react';\nimport { useNotebookState } from '@decipad/notebook-state';\nimport { useSession } from 'next-auth/react';\n\nexport const useNotebookWarning = () => {\n  const toast = useToast();\n  const { data: session } = useSession();\n\n  const { editor, hasLocalChanges } = useNotebookState();\n\n  const warning: string | false =\n    editor != null &&\n    (editor.isReadOnly || false) &&\n    `Changes to this notebook are not saved${\n      (session?.user &&\n        '. Please duplicate to customize and make it your own.') ||\n      ''\n    }`;\n  const [toastedWarning, setToastedWarning] = useState(false);\n\n  useEffect(() => {\n    if (warning && hasLocalChanges && !toastedWarning) {\n      setToastedWarning(true);\n      toast(warning as string, 'warning', { autoDismiss: false });\n    }\n  }, [editor, hasLocalChanges, toast, toastedWarning, warning]);\n};\n","import { Notebook as NotebookEditor } from '@decipad/notebook';\n\nexport default NotebookEditor;\n","import { FC, Suspense } from 'react';\nimport { NotebookStateProvider } from '@decipad/notebook-state';\nimport { EditorUserInteractionsProvider } from '@decipad/react-contexts';\nimport { EditorAttachmentsHandler } from '@decipad/editor-attachments';\nimport { EditorPlaceholder } from '@decipad/ui';\nimport type { NotebookProps } from './NotebokProps';\nimport { NotebookLoader } from './NotebookLoader';\n\nexport const Notebook: FC<NotebookProps> = ({\n  getAttachmentForm,\n  onAttached,\n  ...rest\n}) => {\n  return (\n    <NotebookStateProvider key={rest.notebookId}>\n      <EditorUserInteractionsProvider>\n        <EditorAttachmentsHandler\n          getAttachmentForm={getAttachmentForm}\n          onAttached={onAttached}\n        />\n        <Suspense fallback={<EditorPlaceholder />}>\n          <NotebookLoader {...rest}></NotebookLoader>\n        </Suspense>\n      </EditorUserInteractionsProvider>\n    </NotebookStateProvider>\n  );\n};\n","import { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { offBlack, transparency } from '../../primitives';\nimport { Anchor } from '../../utils';\n\nconst styles = css({\n  cursor: 'unset',\n  backgroundColor: transparency(offBlack, 0.16).rgba,\n});\n\ninterface OverlayProps {\n  readonly closeAction?: string | (() => void);\n}\n\nexport const Overlay = ({ closeAction }: OverlayProps): ReturnType<FC> => {\n  return typeof closeAction === 'string' ? (\n    <Anchor css={styles} aria-label=\"Close\" href={closeAction}>\n      {\n        null // Yes, we really want this link to be empty, it has an aria-label instead\n      }\n    </Anchor>\n  ) : (\n    <button\n      css={styles}\n      aria-label=\"Close\"\n      disabled={!closeAction}\n      onClick={closeAction}\n    />\n  );\n};\n","import { css } from '@emotion/react';\nimport { ComponentProps, ReactNode } from 'react';\nimport { Overlay } from '../../atoms';\nimport { cssVar, grey700, offBlack, transparency } from '../../primitives';\n\nconst pageCoverStyles = css({\n  position: 'fixed',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n\n  display: 'grid',\n  gridTemplate: '100% / 100%',\n  overflow: 'hidden',\n});\n\nconst overlayStyles = css({\n  gridArea: '1 / 1',\n  display: 'grid',\n});\n\nconst dialogStyles = css({\n  gridArea: '1 / 1',\n  justifySelf: 'center',\n  alignSelf: 'center',\n  maxWidth: 'min(100% - 24px, 480px)',\n  maxHeight: '75%',\n  overflowY: 'auto',\n\n  padding: '24px',\n  backgroundColor: cssVar('backgroundColor'),\n  border: `1px solid ${cssVar('borderColor')}`,\n  borderRadius: '10px',\n  width: '480px',\n  boxShadow: `\n    0px 2px 20px ${transparency(grey700, 0.04).rgba},\n    0px 2px 8px ${transparency(offBlack, 0.02).rgba}\n  `,\n});\n\ntype ModalProps = {\n  readonly children: ReactNode;\n} & ComponentProps<typeof Overlay>;\n\nexport const Modal = ({\n  children,\n  ...props\n}: ModalProps): ReturnType<React.FC> => {\n  return (\n    <div css={pageCoverStyles}>\n      <div css={overlayStyles}>\n        <Overlay {...props} />\n      </div>\n      <div role=\"dialog\" css={dialogStyles}>\n        {children}\n      </div>\n    </div>\n  );\n};\n"],"names":["Provider","useStore","createContext","initialState","resolveNotebookLoadedPromise","notebookLoadedPromise","Promise","r","syncClientState","editor","undefined","computer","Computer","loadedFromLocal","loadedFromRemote","timedOutLoadingFromRemote","hasLocalChanges","initialFocusDone","createStore","create","set","get","initEditor","notebookId","getSession","plugins","docsync","oldEditor","id","isReadOnly","readOnly","destroyed","disconnect","destroy","err","console","error","createTPlateEditor","disableCorePlugins","history","loadTimeout","setTimeout","docSyncEditor","createDocSyncEditor","onError","captureException","onDocSyncEditorLoaded","source","clearTimeout","offLoaded","onLoaded","pipe","take","subscribe","notebookHref","window","location","pathname","setInitialFocusDone","NotebookStateProvider","children","useNotebookState","wrapper","css","width","backgroundColor","grey300","borderRadius","progressStyles","minWidth","height","brand500","display","justifyContent","alignItems","padding","marginTop","transition","Progress","progress","label","p12Medium","UploadProgressModal","files","Modal","map","file","index","name","acceptableFileTypes","validFileType","type","some","prefix","startsWith","maxFileSizeBytes","validateItemAndGetFile","item","getAsFile","Error","warn","size","defaultEditorAttachmentsContextValue","uploading","dropZoneBorderDetectorThickness","DropZoneDetector","connectDropTarget","isOver","isNotOver","useDelayedTrue","initializing","setInitializing","useState","useEffect","timeout","dropZoneWrapperStyles","isOverDropZoneStyles","ref","warningForDNDStyles","p16Medium","color","cssVar","p14Medium","dropZoneTopBorderDetectorTop","dropZoneTopBorderDetectorBottom","dropZoneTopBorderDetectorLeft","dropZoneTopBorderDetectorRight","position","top","left","transform","flexDirection","gap","isolation","zIndex","transparency","black","strongOpacity","rgba","boxShadow","mediumShadow","dropZoneBorderDetector","bottom","right","uploadProgressWrapperStyles","EditorAttachmentsHandler","getAttachmentForm","onAttached","toast","useToast","useComputer","attachments","setAttachments","onUploadProgress","useCallback","progressEvent","produce","att","desc","find","f","loaded","total","attachGeneric","async","attForm","target","form","handle","append","axios","toString","onAttachedResponse","url","attachImage","targetURL","data","insertAttachment","withoutNormalizing","insertAt","selection","isCollapsed","anchor","path","point","getStartPoint","length","focusEditor","insertImageBelow","insertLiveConnection","onAttach","push","attachResult","findIndex","splice","useDrop","accept","NativeTypes","FILE","drop","dndStore","items","Array","from","forEach","File","canDrop","collect","monitor","showUploading","process","REACT_APP_E2E","defaultSelection","getDefaultSelection","initialPoint","focus","useInitialSelection","useEditorSelector","ed","useIsEditorReadOnly","initialSel","getPersistedSelection","getSelection","hasNode","focusSel","at","node","getNode","slice","editorBlock","isText","isElement","isVoid","block","toDOMNode","options","getPoint","getPointSafe","getBoundingClientRect","innerHeight","scrollIntoView","offset","InitialSelection","NotebookLoader","notebookMetaLoaded","notebookTitle","onNotebookTitleChange","secret","connectionParams","onEditor","onDocsync","session","useSession","interactions","useEditorUserInteractionsContext","useEditorPlugins","isServerSideRendering","authSecret","protocolVersion","loadedPromise","loadedResolved","useRef","current","then","useSuspenseWhileNotLoaded","useLocation","warning","user","toastedWarning","setToastedWarning","autoDismiss","useNotebookWarning","isSavedRemotely","rest","Suspense","fallback","EditorPlaceholder","styles","cursor","offBlack","Overlay","closeAction","href","disabled","onClick","pageCoverStyles","overlayStyles","dialogStyles","gridArea","justifySelf","alignSelf","maxWidth","maxHeight","overflowY","border","grey700","props","role"],"sourceRoot":""}