{"version":3,"file":"static/js/playground.3491fbf8.chunk.js","mappings":"6LASA,MAAMA,EAAa,IACjB,yJACIC,GAASC,EAAAA,EAAAA,MAAKF,GACdG,EAAiB,IACrB,6EACIC,GAAaF,EAAAA,EAAAA,MAAKC,GAGxBA,IAAiBE,KAAKL,GAEtB,MAoCA,EApC6B,KAC3B,MAAOM,EAAMC,IACXC,EAAAA,EAAAA,UAAoD,WAC/CC,EAAWC,IAChBF,EAAAA,EAAAA,UAAqD,YAIvD,OAFAG,EAAAA,EAAAA,MAGE,QAAC,IAAY,CACXC,UACE,QAAC,KAAK,CACJC,QAAQ,KACRC,MAAO,KACPC,kBAAkB,QAAC,IAAiB,IAAI,UAExC,QAACd,EAAM,MAGXe,cACE,QAAC,KAAK,CACJH,QAAQ,KACRC,MAAO,KACPC,kBAAkB,QAAC,IAAuB,IAAI,UAE9C,QAACX,EAAU,CACTE,KAAMA,EACNW,aAAcV,EACdW,MAAOT,EACPU,cAAeT","sources":["../../../apps/frontend/src/playground/Playground.tsx"],"sourcesContent":["import {\n  EditorPlaceholder,\n  NotebookIconPlaceholder,\n  NotebookPage,\n} from '@decipad/ui';\nimport { ComponentProps, lazy, useState } from 'react';\nimport { Frame } from '../meta';\nimport { useAnimateMutations } from '../notebooks/notebook/hooks/useAnimateMutations';\n\nconst loadEditor = () =>\n  import(/* webpackChunkName: \"playground-editor\" */ './Editor');\nconst Editor = lazy(loadEditor);\nconst loadEditorIcon = () =>\n  import(/* webpackChunkName: \"playground-editor-icon\" */ './EditorIcon');\nconst EditorIcon = lazy(loadEditorIcon);\n\n// prefetch\nloadEditorIcon().then(loadEditor);\n\nconst Playground: React.FC = () => {\n  const [icon, setIcon] =\n    useState<ComponentProps<typeof EditorIcon>['icon']>('Rocket');\n  const [iconColor, setIconColor] =\n    useState<ComponentProps<typeof EditorIcon>['color']>('Catskill');\n\n  useAnimateMutations();\n\n  return (\n    <NotebookPage\n      notebook={\n        <Frame\n          Heading=\"h1\"\n          title={null}\n          suspenseFallback={<EditorPlaceholder />}\n        >\n          <Editor />\n        </Frame>\n      }\n      notebookIcon={\n        <Frame\n          Heading=\"h1\"\n          title={null}\n          suspenseFallback={<NotebookIconPlaceholder />}\n        >\n          <EditorIcon\n            icon={icon}\n            onChangeIcon={setIcon}\n            color={iconColor}\n            onChangeColor={setIconColor}\n          />\n        </Frame>\n      }\n    />\n  );\n};\nexport default Playground;\n"],"names":["loadEditor","Editor","lazy","loadEditorIcon","EditorIcon","then","icon","setIcon","useState","iconColor","setIconColor","useAnimateMutations","notebook","Heading","title","suspenseFallback","notebookIcon","onChangeIcon","color","onChangeColor"],"sourceRoot":""}