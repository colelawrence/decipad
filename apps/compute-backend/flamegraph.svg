<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="4864"><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="0.0206%" y="277" width="0.0206%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2706%" y="287.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="0.0206%" y="261" width="0.0206%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2706%" y="271.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="0.0206%" y="245" width="0.0206%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2706%" y="255.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (2 samples, 0.04%)</title><rect x="0.0411%" y="277" width="0.0411%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.2911%" y="287.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.02%)</title><rect x="0.0822%" y="277" width="0.0206%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.3322%" y="287.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`serde_json::de::Deserializer&lt;R&gt;::parse_ident (1 samples, 0.02%)</title><rect x="0.1028%" y="277" width="0.0206%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="1"/><text x="0.3528%" y="287.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`serde_json::de::Deserializer&lt;R&gt;::next_char (1 samples, 0.02%)</title><rect x="0.1028%" y="261" width="0.0206%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.3528%" y="271.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (1 samples, 0.02%)</title><rect x="0.1028%" y="245" width="0.0206%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="0.3528%" y="255.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`serde_json::de::from_slice (8 samples, 0.16%)</title><rect x="0.0000%" y="453" width="0.1645%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="8"/><text x="0.2500%" y="463.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`serde_json::de::from_trait (8 samples, 0.16%)</title><rect x="0.0000%" y="437" width="0.1645%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="8"/><text x="0.2500%" y="447.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::cargo_target_directory::_::_&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize (8 samples, 0.16%)</title><rect x="0.0000%" y="421" width="0.1645%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="8"/><text x="0.2500%" y="431.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (8 samples, 0.16%)</title><rect x="0.0000%" y="405" width="0.1645%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="8"/><text x="0.2500%" y="415.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.16%)</title><rect x="0.0000%" y="389" width="0.1645%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="8"/><text x="0.2500%" y="399.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`serde::de::MapAccess::next_value (8 samples, 0.16%)</title><rect x="0.0000%" y="373" width="0.1645%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="8"/><text x="0.2500%" y="383.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.16%)</title><rect x="0.0000%" y="357" width="0.1645%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="8"/><text x="0.2500%" y="367.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.16%)</title><rect x="0.0000%" y="341" width="0.1645%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="8"/><text x="0.2500%" y="351.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (8 samples, 0.16%)</title><rect x="0.0000%" y="325" width="0.1645%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="8"/><text x="0.2500%" y="335.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (8 samples, 0.16%)</title><rect x="0.0000%" y="309" width="0.1645%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="8"/><text x="0.2500%" y="319.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`serde_json::de::Deserializer&lt;R&gt;::ignore_value (8 samples, 0.16%)</title><rect x="0.0000%" y="293" width="0.1645%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="303.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2 samples, 0.04%)</title><rect x="0.1234%" y="277" width="0.0411%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="2"/><text x="0.3734%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 0.02%)</title><rect x="0.1645%" y="437" width="0.0206%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="0.4145%" y="447.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::DEFAULT_OUTPUT_DIRECTORY::_{{closure}} (10 samples, 0.21%)</title><rect x="0.0000%" y="517" width="0.2056%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="10"/><text x="0.2500%" y="527.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::cargo_target_directory (10 samples, 0.21%)</title><rect x="0.0000%" y="501" width="0.2056%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="10"/><text x="0.2500%" y="511.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::option::Option&lt;T&gt;::or_else (10 samples, 0.21%)</title><rect x="0.0000%" y="485" width="0.2056%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="10"/><text x="0.2500%" y="495.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::cargo_target_directory::_{{closure}} (10 samples, 0.21%)</title><rect x="0.0000%" y="469" width="0.2056%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="10"/><text x="0.2500%" y="479.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`std::process::Command::output (2 samples, 0.04%)</title><rect x="0.1645%" y="453" width="0.0411%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="2"/><text x="0.4145%" y="463.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (1 samples, 0.02%)</title><rect x="0.1850%" y="437" width="0.0206%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="1"/><text x="0.4350%" y="447.50"></text></g><g><title>libsystem_c.dylib`posix_spawnp (1 samples, 0.02%)</title><rect x="0.1850%" y="421" width="0.0206%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="1"/><text x="0.4350%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (1 samples, 0.02%)</title><rect x="0.1850%" y="405" width="0.0206%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="0.4350%" y="415.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.23%)</title><rect x="0.0000%" y="709" width="0.2262%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="11"/><text x="0.2500%" y="719.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::Lazy&lt;T,F&gt;::force (11 samples, 0.23%)</title><rect x="0.0000%" y="693" width="0.2262%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="11"/><text x="0.2500%" y="703.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (11 samples, 0.23%)</title><rect x="0.0000%" y="677" width="0.2262%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="11"/><text x="0.2500%" y="687.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (11 samples, 0.23%)</title><rect x="0.0000%" y="661" width="0.2262%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="11"/><text x="0.2500%" y="671.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::imp::OnceCell&lt;T&gt;::initialize (11 samples, 0.23%)</title><rect x="0.0000%" y="645" width="0.2262%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="11"/><text x="0.2500%" y="655.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::imp::initialize_or_wait (11 samples, 0.23%)</title><rect x="0.0000%" y="629" width="0.2262%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="11"/><text x="0.2500%" y="639.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.23%)</title><rect x="0.0000%" y="613" width="0.2262%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="11"/><text x="0.2500%" y="623.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (11 samples, 0.23%)</title><rect x="0.0000%" y="597" width="0.2262%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="11"/><text x="0.2500%" y="607.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (11 samples, 0.23%)</title><rect x="0.0000%" y="581" width="0.2262%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="11"/><text x="0.2500%" y="591.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (11 samples, 0.23%)</title><rect x="0.0000%" y="565" width="0.2262%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="11"/><text x="0.2500%" y="575.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::ops::function::FnOnce::call_once (11 samples, 0.23%)</title><rect x="0.0000%" y="549" width="0.2262%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="11"/><text x="0.2500%" y="559.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::ops::function::FnOnce::call_once (11 samples, 0.23%)</title><rect x="0.0000%" y="533" width="0.2262%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="11"/><text x="0.2500%" y="543.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::DEFAULT_PLOTTING_BACKEND::_{{closure}} (1 samples, 0.02%)</title><rect x="0.2056%" y="517" width="0.0206%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="1"/><text x="0.4556%" y="527.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="0.2056%" y="501" width="0.0206%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="1"/><text x="0.4556%" y="511.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.02%)</title><rect x="0.2056%" y="485" width="0.0206%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="0.4556%" y="495.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="0.2056%" y="469" width="0.0206%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="1"/><text x="0.4556%" y="479.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="0.2056%" y="453" width="0.0206%" height="15" fill="rgb(206,96,30)" fg:x="10" fg:w="1"/><text x="0.4556%" y="463.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.2056%" y="437" width="0.0206%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="0.4556%" y="447.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.2056%" y="421" width="0.0206%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="1"/><text x="0.4556%" y="431.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="0.2056%" y="405" width="0.0206%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="1"/><text x="0.4556%" y="415.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.2056%" y="389" width="0.0206%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="1"/><text x="0.4556%" y="399.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (1 samples, 0.02%)</title><rect x="0.2056%" y="373" width="0.0206%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="1"/><text x="0.4556%" y="383.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (1 samples, 0.02%)</title><rect x="0.2056%" y="357" width="0.0206%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="1"/><text x="0.4556%" y="367.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="0.2056%" y="341" width="0.0206%" height="15" fill="rgb(247,123,22)" fg:x="10" fg:w="1"/><text x="0.4556%" y="351.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion_plot::version (1 samples, 0.02%)</title><rect x="0.2056%" y="325" width="0.0206%" height="15" fill="rgb(231,138,38)" fg:x="10" fg:w="1"/><text x="0.4556%" y="335.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`std::process::Command::output (1 samples, 0.02%)</title><rect x="0.2056%" y="309" width="0.0206%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="1"/><text x="0.4556%" y="319.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (1 samples, 0.02%)</title><rect x="0.2056%" y="293" width="0.0206%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="1"/><text x="0.4556%" y="303.50"></text></g><g><title>libsystem_c.dylib`posix_spawnp (1 samples, 0.02%)</title><rect x="0.2056%" y="277" width="0.0206%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="0.4556%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (1 samples, 0.02%)</title><rect x="0.2056%" y="261" width="0.0206%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="0.4556%" y="271.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::Criterion as core::default::Default&gt;::default (12 samples, 0.25%)</title><rect x="0.0000%" y="725" width="0.2467%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="12"/><text x="0.2500%" y="735.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::PlottingBackend::create_plotter (1 samples, 0.02%)</title><rect x="0.2262%" y="709" width="0.0206%" height="15" fill="rgb(227,1,9)" fg:x="11" fg:w="1"/><text x="0.4762%" y="719.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="0.2262%" y="693" width="0.0206%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="1"/><text x="0.4762%" y="703.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="0.2262%" y="677" width="0.0206%" height="15" fill="rgb(221,10,30)" fg:x="11" fg:w="1"/><text x="0.4762%" y="687.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::alloc::layout::Layout::dangling (1 samples, 0.02%)</title><rect x="0.2262%" y="661" width="0.0206%" height="15" fill="rgb(210,229,1)" fg:x="11" fg:w="1"/><text x="0.4762%" y="671.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect x="0.2467%" y="725" width="0.0206%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="0.4967%" y="735.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::get_matches (1 samples, 0.02%)</title><rect x="0.2467%" y="709" width="0.0206%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="0.4967%" y="719.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::get_matches_from (1 samples, 0.02%)</title><rect x="0.2467%" y="693" width="0.0206%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="0.4967%" y="703.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.02%)</title><rect x="0.2467%" y="677" width="0.0206%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="0.4967%" y="687.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::_do_parse (1 samples, 0.02%)</title><rect x="0.2467%" y="661" width="0.0206%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="0.4967%" y="671.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::_build_self (1 samples, 0.02%)</title><rect x="0.2467%" y="645" width="0.0206%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="0.4967%" y="655.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::_check_help_and_version (1 samples, 0.02%)</title><rect x="0.2467%" y="629" width="0.0206%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="0.4967%" y="639.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::long_help_exists_ (1 samples, 0.02%)</title><rect x="0.2467%" y="613" width="0.0206%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="0.4967%" y="623.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.02%)</title><rect x="0.2467%" y="597" width="0.0206%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="0.4967%" y="607.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`clap_builder::builder::command::Command::long_help_exists_::_{{closure}} (1 samples, 0.02%)</title><rect x="0.2467%" y="581" width="0.0206%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="0.4967%" y="591.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;clap_builder::builder::possible_value::PossibleValue&gt;&gt; (1 samples, 0.02%)</title><rect x="0.2467%" y="565" width="0.0206%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="0.4967%" y="575.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 2.82%)</title><rect x="0.2673%" y="373" width="2.8166%" height="15" fill="rgb(233,84,52)" fg:x="13" fg:w="137"/><text x="0.5173%" y="383.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;compute_backend::types::DeciResult as core::clone::Clone&gt;::clone (93 samples, 1.91%)</title><rect x="13.5280%" y="357" width="1.9120%" height="15" fill="rgb(207,117,47)" fg:x="658" fg:w="93"/><text x="13.7780%" y="367.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::types_impl::_&lt;impl core::ops::arith::Add for compute_backend::types::DeciResult&gt;::add (482 samples, 9.91%)</title><rect x="15.4400%" y="357" width="9.9095%" height="15" fill="rgb(249,43,39)" fg:x="751" fg:w="482"/><text x="15.6900%" y="367.50">sum_runtime-e1..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (117 samples, 2.41%)</title><rect x="22.9441%" y="341" width="2.4054%" height="15" fill="rgb(209,38,44)" fg:x="1116" fg:w="117"/><text x="23.1941%" y="351.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::types_impl::_&lt;impl compute_backend::types::DeciResult&gt;::sum_frac (1,147 samples, 23.58%)</title><rect x="3.0839%" y="373" width="23.5814%" height="15" fill="rgb(236,212,23)" fg:x="150" fg:w="1147"/><text x="3.3339%" y="383.50">sum_runtime-e188d8f74471bf23`compute_..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::num::_&lt;impl i64&gt;::checked_add (64 samples, 1.32%)</title><rect x="25.3495%" y="357" width="1.3158%" height="15" fill="rgb(242,79,21)" fg:x="1233" fg:w="64"/><text x="25.5995%" y="367.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::types_impl::_&lt;impl core::ops::arith::Add for compute_backend::types::DeciResult&gt;::add (44 samples, 0.90%)</title><rect x="26.6653%" y="373" width="0.9046%" height="15" fill="rgb(211,96,35)" fg:x="1297" fg:w="44"/><text x="26.9153%" y="383.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_1d::_{{closure}} (28 samples, 0.58%)</title><rect x="28.6595%" y="229" width="0.5757%" height="15" fill="rgb(253,215,40)" fg:x="1394" fg:w="28"/><text x="28.9095%" y="239.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (238 samples, 4.89%)</title><rect x="31.6406%" y="213" width="4.8931%" height="15" fill="rgb(211,81,21)" fg:x="1539" fg:w="238"/><text x="31.8906%" y="223.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{closure}} (398 samples, 8.18%)</title><rect x="29.2352%" y="229" width="8.1826%" height="15" fill="rgb(208,190,38)" fg:x="1422" fg:w="398"/><text x="29.4852%" y="239.50">sum_runtime..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (43 samples, 0.88%)</title><rect x="36.5337%" y="213" width="0.8840%" height="15" fill="rgb(235,213,38)" fg:x="1777" fg:w="43"/><text x="36.7837%" y="223.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (100 samples, 2.06%)</title><rect x="38.1168%" y="213" width="2.0559%" height="15" fill="rgb(237,122,38)" fg:x="1854" fg:w="100"/><text x="38.3668%" y="223.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (168 samples, 3.45%)</title><rect x="37.4178%" y="229" width="3.4539%" height="15" fill="rgb(244,218,35)" fg:x="1820" fg:w="168"/><text x="37.6678%" y="239.50">sum..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (34 samples, 0.70%)</title><rect x="40.1727%" y="213" width="0.6990%" height="15" fill="rgb(240,68,47)" fg:x="1954" fg:w="34"/><text x="40.4227%" y="223.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::collect (657 samples, 13.51%)</title><rect x="27.5699%" y="373" width="13.5074%" height="15" fill="rgb(210,16,53)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="383.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (657 samples, 13.51%)</title><rect x="27.5699%" y="357" width="13.5074%" height="15" fill="rgb(235,124,12)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="367.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (657 samples, 13.51%)</title><rect x="27.5699%" y="341" width="13.5074%" height="15" fill="rgb(224,169,11)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="351.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (657 samples, 13.51%)</title><rect x="27.5699%" y="325" width="13.5074%" height="15" fill="rgb(250,166,2)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="335.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (657 samples, 13.51%)</title><rect x="27.5699%" y="309" width="13.5074%" height="15" fill="rgb(242,216,29)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="319.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (657 samples, 13.51%)</title><rect x="27.5699%" y="293" width="13.5074%" height="15" fill="rgb(230,116,27)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="303.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each (657 samples, 13.51%)</title><rect x="27.5699%" y="277" width="13.5074%" height="15" fill="rgb(228,99,48)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="287.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (657 samples, 13.51%)</title><rect x="27.5699%" y="261" width="13.5074%" height="15" fill="rgb(253,11,6)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="271.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::fold (657 samples, 13.51%)</title><rect x="27.5699%" y="245" width="13.5074%" height="15" fill="rgb(247,143,39)" fg:x="1341" fg:w="657"/><text x="27.8199%" y="255.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (10 samples, 0.21%)</title><rect x="40.8717%" y="229" width="0.2056%" height="15" fill="rgb(236,97,10)" fg:x="1988" fg:w="10"/><text x="41.1217%" y="239.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (118 samples, 2.43%)</title><rect x="41.0773%" y="341" width="2.4260%" height="15" fill="rgb(233,208,19)" fg:x="1998" fg:w="118"/><text x="41.3273%" y="351.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;[compute_backend::types::DeciResult]&gt; (118 samples, 2.43%)</title><rect x="41.0773%" y="325" width="2.4260%" height="15" fill="rgb(216,164,2)" fg:x="1998" fg:w="118"/><text x="41.3273%" y="335.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (78 samples, 1.60%)</title><rect x="41.8997%" y="309" width="1.6036%" height="15" fill="rgb(220,129,5)" fg:x="2038" fg:w="78"/><text x="42.1497%" y="319.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_1d (2,119 samples, 43.56%)</title><rect x="0.2673%" y="725" width="43.5650%" height="15" fill="rgb(242,17,10)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="735.50">sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_1d</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::Criterion&lt;M&gt;::bench_function (2,119 samples, 43.56%)</title><rect x="0.2673%" y="709" width="43.5650%" height="15" fill="rgb(242,107,0)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="719.50">sum_runtime-e188d8f74471bf23`criterion::Criterion&lt;M&gt;::bench_function</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (2,119 samples, 43.56%)</title><rect x="0.2673%" y="693" width="43.5650%" height="15" fill="rgb(251,28,31)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="703.50">sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (2,119 samples, 43.56%)</title><rect x="0.2673%" y="677" width="43.5650%" height="15" fill="rgb(233,223,10)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="687.50">sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::routine::Routine::test (2,119 samples, 43.56%)</title><rect x="0.2673%" y="661" width="43.5650%" height="15" fill="rgb(215,21,27)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="671.50">sum_runtime-e188d8f74471bf23`criterion::routine::Routine::test</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (2,119 samples, 43.56%)</title><rect x="0.2673%" y="645" width="43.5650%" height="15" fill="rgb(232,23,21)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="655.50">sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as cr..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::collect (2,119 samples, 43.56%)</title><rect x="0.2673%" y="629" width="43.5650%" height="15" fill="rgb(244,5,23)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="639.50">sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::co..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,119 samples, 43.56%)</title><rect x="0.2673%" y="613" width="43.5650%" height="15" fill="rgb(226,81,46)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="623.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits:..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,119 samples, 43.56%)</title><rect x="0.2673%" y="597" width="43.5650%" height="15" fill="rgb(247,70,30)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="607.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fr..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,119 samples, 43.56%)</title><rect x="0.2673%" y="581" width="43.5650%" height="15" fill="rgb(212,68,19)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="591.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fr..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,119 samples, 43.56%)</title><rect x="0.2673%" y="565" width="43.5650%" height="15" fill="rgb(240,187,13)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="575.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,119 samples, 43.56%)</title><rect x="0.2673%" y="549" width="43.5650%" height="15" fill="rgb(223,113,26)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="559.50">sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each (2,119 samples, 43.56%)</title><rect x="0.2673%" y="533" width="43.5650%" height="15" fill="rgb(206,192,2)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="543.50">sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::fo..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,119 samples, 43.56%)</title><rect x="0.2673%" y="517" width="43.5650%" height="15" fill="rgb(241,108,4)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="527.50">sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as co..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,119 samples, 43.56%)</title><rect x="0.2673%" y="501" width="43.5650%" height="15" fill="rgb(247,173,49)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="511.50">sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter:..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{closure}} (2,119 samples, 43.56%)</title><rect x="0.2673%" y="485" width="43.5650%" height="15" fill="rgb(224,114,35)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="495.50">sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{cl..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (2,119 samples, 43.56%)</title><rect x="0.2673%" y="469" width="43.5650%" height="15" fill="rgb(245,159,27)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="479.50">sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as cr..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (2,119 samples, 43.56%)</title><rect x="0.2673%" y="453" width="43.5650%" height="15" fill="rgb(245,172,44)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="463.50">sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup..</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_1d::_{{closure}} (2,119 samples, 43.56%)</title><rect x="0.2673%" y="437" width="43.5650%" height="15" fill="rgb(236,23,11)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="447.50">sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_1d::_{{closure}}</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::bencher::Bencher&lt;M&gt;::iter (2,119 samples, 43.56%)</title><rect x="0.2673%" y="421" width="43.5650%" height="15" fill="rgb(205,117,38)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="431.50">sum_runtime-e188d8f74471bf23`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_1d::_{{closure}}::_{{closure}} (2,119 samples, 43.56%)</title><rect x="0.2673%" y="405" width="43.5650%" height="15" fill="rgb(237,72,25)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="415.50">sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_1d::_{{closure}}::_..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_1d (2,119 samples, 43.56%)</title><rect x="0.2673%" y="389" width="43.5650%" height="15" fill="rgb(244,70,9)" fg:x="13" fg:w="2119"/><text x="0.5173%" y="399.50">sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_1d</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (134 samples, 2.75%)</title><rect x="41.0773%" y="373" width="2.7549%" height="15" fill="rgb(217,125,39)" fg:x="1998" fg:w="134"/><text x="41.3273%" y="383.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;compute_backend::types::DeciResult&gt;&gt; (134 samples, 2.75%)</title><rect x="41.0773%" y="357" width="2.7549%" height="15" fill="rgb(235,36,10)" fg:x="1998" fg:w="134"/><text x="41.3273%" y="367.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;compute_backend::types::DeciResult&gt;&gt; (16 samples, 0.33%)</title><rect x="43.5033%" y="341" width="0.3289%" height="15" fill="rgb(251,123,47)" fg:x="2116" fg:w="16"/><text x="43.7533%" y="351.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.33%)</title><rect x="43.5033%" y="325" width="0.3289%" height="15" fill="rgb(221,13,13)" fg:x="2116" fg:w="16"/><text x="43.7533%" y="335.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.33%)</title><rect x="43.5033%" y="309" width="0.3289%" height="15" fill="rgb(238,131,9)" fg:x="2116" fg:w="16"/><text x="43.7533%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (16 samples, 0.33%)</title><rect x="43.5033%" y="293" width="0.3289%" height="15" fill="rgb(211,50,8)" fg:x="2116" fg:w="16"/><text x="43.7533%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_large (16 samples, 0.33%)</title><rect x="43.5033%" y="277" width="0.3289%" height="15" fill="rgb(245,182,24)" fg:x="2116" fg:w="16"/><text x="43.7533%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (16 samples, 0.33%)</title><rect x="43.5033%" y="261" width="0.3289%" height="15" fill="rgb(242,14,37)" fg:x="2116" fg:w="16"/><text x="43.7533%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (16 samples, 0.33%)</title><rect x="43.5033%" y="245" width="0.3289%" height="15" fill="rgb(246,228,12)" fg:x="2116" fg:w="16"/><text x="43.7533%" y="255.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::report::Reports as criterion::report::Report&gt;::test_pass (1 samples, 0.02%)</title><rect x="43.8322%" y="661" width="0.0206%" height="15" fill="rgb(213,55,15)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="671.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::report::CliReport as criterion::report::Report&gt;::test_pass (1 samples, 0.02%)</title><rect x="43.8322%" y="645" width="0.0206%" height="15" fill="rgb(209,9,3)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="655.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`std::io::stdio::_print (1 samples, 0.02%)</title><rect x="43.8322%" y="629" width="0.0206%" height="15" fill="rgb(230,59,30)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="639.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="43.8322%" y="613" width="0.0206%" height="15" fill="rgb(209,121,21)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="623.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::fmt::write (1 samples, 0.02%)</title><rect x="43.8322%" y="597" width="0.0206%" height="15" fill="rgb(220,109,13)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="607.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="43.8322%" y="581" width="0.0206%" height="15" fill="rgb(232,18,1)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="591.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="43.8322%" y="565" width="0.0206%" height="15" fill="rgb(215,41,42)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.02%)</title><rect x="43.8322%" y="549" width="0.0206%" height="15" fill="rgb(224,123,36)" fg:x="2132" fg:w="1"/><text x="44.0822%" y="559.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (161 samples, 3.31%)</title><rect x="43.8528%" y="357" width="3.3100%" height="15" fill="rgb(240,125,3)" fg:x="2133" fg:w="161"/><text x="44.1028%" y="367.50">sum..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;compute_backend::types::DeciResult as core::clone::Clone&gt;::clone (89 samples, 1.83%)</title><rect x="51.1719%" y="341" width="1.8298%" height="15" fill="rgb(205,98,50)" fg:x="2489" fg:w="89"/><text x="51.4219%" y="351.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::types_impl::_&lt;impl core::ops::arith::Add for compute_backend::types::DeciResult&gt;::add (493 samples, 10.14%)</title><rect x="53.0016%" y="341" width="10.1357%" height="15" fill="rgb(205,185,37)" fg:x="2578" fg:w="493"/><text x="53.2516%" y="351.50">sum_runtime-e18..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (123 samples, 2.53%)</title><rect x="60.6086%" y="325" width="2.5288%" height="15" fill="rgb(238,207,15)" fg:x="2948" fg:w="123"/><text x="60.8586%" y="335.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::num::_&lt;impl i64&gt;::checked_add (60 samples, 1.23%)</title><rect x="63.1373%" y="341" width="1.2336%" height="15" fill="rgb(213,199,42)" fg:x="3071" fg:w="60"/><text x="63.3873%" y="351.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::types_impl::_&lt;impl compute_backend::types::DeciResult&gt;::sum_frac (838 samples, 17.23%)</title><rect x="47.1628%" y="357" width="17.2286%" height="15" fill="rgb(235,201,11)" fg:x="2294" fg:w="838"/><text x="47.4128%" y="367.50">sum_runtime-e188d8f74471bf2..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (1 samples, 0.02%)</title><rect x="64.3709%" y="341" width="0.0206%" height="15" fill="rgb(207,46,11)" fg:x="3131" fg:w="1"/><text x="64.6209%" y="351.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::types_impl::_&lt;impl compute_backend::types::DeciResult&gt;::sum_frac (1,037 samples, 21.32%)</title><rect x="43.8528%" y="373" width="21.3199%" height="15" fill="rgb(241,35,35)" fg:x="2133" fg:w="1037"/><text x="44.1028%" y="383.50">sum_runtime-e188d8f74471bf23`compu..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::types_impl::_&lt;impl core::ops::arith::Add for compute_backend::types::DeciResult&gt;::add (38 samples, 0.78%)</title><rect x="64.3914%" y="357" width="0.7812%" height="15" fill="rgb(243,32,47)" fg:x="3132" fg:w="38"/><text x="64.6414%" y="367.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_2d::_{{closure}}::_{{closure}} (27 samples, 0.56%)</title><rect x="66.4268%" y="53" width="0.5551%" height="15" fill="rgb(247,202,23)" fg:x="3231" fg:w="27"/><text x="66.6768%" y="63.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (234 samples, 4.81%)</title><rect x="69.1201%" y="37" width="4.8109%" height="15" fill="rgb(219,102,11)" fg:x="3362" fg:w="234"/><text x="69.3701%" y="47.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{closure}} (374 samples, 7.69%)</title><rect x="66.9819%" y="53" width="7.6891%" height="15" fill="rgb(243,110,44)" fg:x="3258" fg:w="374"/><text x="67.2319%" y="63.50">sum_runtime..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (36 samples, 0.74%)</title><rect x="73.9309%" y="37" width="0.7401%" height="15" fill="rgb(222,74,54)" fg:x="3596" fg:w="36"/><text x="74.1809%" y="47.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (96 samples, 1.97%)</title><rect x="75.3495%" y="37" width="1.9737%" height="15" fill="rgb(216,99,12)" fg:x="3665" fg:w="96"/><text x="75.5995%" y="47.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (170 samples, 3.50%)</title><rect x="74.6711%" y="53" width="3.4951%" height="15" fill="rgb(226,22,26)" fg:x="3632" fg:w="170"/><text x="74.9211%" y="63.50">sum..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (41 samples, 0.84%)</title><rect x="77.3232%" y="37" width="0.8429%" height="15" fill="rgb(217,163,10)" fg:x="3761" fg:w="41"/><text x="77.5732%" y="47.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (641 samples, 13.18%)</title><rect x="65.1727%" y="133" width="13.1785%" height="15" fill="rgb(213,25,53)" fg:x="3170" fg:w="641"/><text x="65.4227%" y="143.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (641 samples, 13.18%)</title><rect x="65.1727%" y="117" width="13.1785%" height="15" fill="rgb(252,105,26)" fg:x="3170" fg:w="641"/><text x="65.4227%" y="127.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each (641 samples, 13.18%)</title><rect x="65.1727%" y="101" width="13.1785%" height="15" fill="rgb(220,39,43)" fg:x="3170" fg:w="641"/><text x="65.4227%" y="111.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (641 samples, 13.18%)</title><rect x="65.1727%" y="85" width="13.1785%" height="15" fill="rgb(229,68,48)" fg:x="3170" fg:w="641"/><text x="65.4227%" y="95.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::fold (641 samples, 13.18%)</title><rect x="65.1727%" y="69" width="13.1785%" height="15" fill="rgb(252,8,32)" fg:x="3170" fg:w="641"/><text x="65.4227%" y="79.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (9 samples, 0.19%)</title><rect x="78.1661%" y="53" width="0.1850%" height="15" fill="rgb(223,20,43)" fg:x="3802" fg:w="9"/><text x="78.4161%" y="63.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::collect (642 samples, 13.20%)</title><rect x="65.1727%" y="373" width="13.1990%" height="15" fill="rgb(229,81,49)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="383.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (642 samples, 13.20%)</title><rect x="65.1727%" y="357" width="13.1990%" height="15" fill="rgb(236,28,36)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="367.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (642 samples, 13.20%)</title><rect x="65.1727%" y="341" width="13.1990%" height="15" fill="rgb(249,185,26)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="351.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (642 samples, 13.20%)</title><rect x="65.1727%" y="325" width="13.1990%" height="15" fill="rgb(249,174,33)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="335.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (642 samples, 13.20%)</title><rect x="65.1727%" y="309" width="13.1990%" height="15" fill="rgb(233,201,37)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="319.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (642 samples, 13.20%)</title><rect x="65.1727%" y="293" width="13.1990%" height="15" fill="rgb(221,78,26)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="303.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each (642 samples, 13.20%)</title><rect x="65.1727%" y="277" width="13.1990%" height="15" fill="rgb(250,127,30)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="287.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (642 samples, 13.20%)</title><rect x="65.1727%" y="261" width="13.1990%" height="15" fill="rgb(230,49,44)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="271.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::fold (642 samples, 13.20%)</title><rect x="65.1727%" y="245" width="13.1990%" height="15" fill="rgb(229,67,23)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="255.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{closure}} (642 samples, 13.20%)</title><rect x="65.1727%" y="229" width="13.1990%" height="15" fill="rgb(249,83,47)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="239.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_2d::_{{closure}} (642 samples, 13.20%)</title><rect x="65.1727%" y="213" width="13.1990%" height="15" fill="rgb(215,43,3)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="223.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::collect (642 samples, 13.20%)</title><rect x="65.1727%" y="197" width="13.1990%" height="15" fill="rgb(238,154,13)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="207.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (642 samples, 13.20%)</title><rect x="65.1727%" y="181" width="13.1990%" height="15" fill="rgb(219,56,2)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="191.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (642 samples, 13.20%)</title><rect x="65.1727%" y="165" width="13.1990%" height="15" fill="rgb(233,0,4)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="175.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (642 samples, 13.20%)</title><rect x="65.1727%" y="149" width="13.1990%" height="15" fill="rgb(235,30,7)" fg:x="3170" fg:w="642"/><text x="65.4227%" y="159.50">sum_runtime-e188d8f7..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="78.3512%" y="133" width="0.0206%" height="15" fill="rgb(250,79,13)" fg:x="3811" fg:w="1"/><text x="78.6012%" y="143.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="78.3512%" y="117" width="0.0206%" height="15" fill="rgb(211,146,34)" fg:x="3811" fg:w="1"/><text x="78.6012%" y="127.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="78.3512%" y="101" width="0.0206%" height="15" fill="rgb(228,22,38)" fg:x="3811" fg:w="1"/><text x="78.6012%" y="111.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 2.49%)</title><rect x="78.3717%" y="277" width="2.4877%" height="15" fill="rgb(235,168,5)" fg:x="3812" fg:w="121"/><text x="78.6217%" y="287.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;[compute_backend::types::DeciResult]&gt; (121 samples, 2.49%)</title><rect x="78.3717%" y="261" width="2.4877%" height="15" fill="rgb(221,155,16)" fg:x="3812" fg:w="121"/><text x="78.6217%" y="271.50">su..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (86 samples, 1.77%)</title><rect x="79.0913%" y="245" width="1.7681%" height="15" fill="rgb(215,215,53)" fg:x="3847" fg:w="86"/><text x="79.3413%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (91 samples, 1.87%)</title><rect x="80.8594%" y="213" width="1.8709%" height="15" fill="rgb(223,4,10)" fg:x="3933" fg:w="91"/><text x="81.1094%" y="223.50">l..</text></g><g><title>libsystem_malloc.dylib`medium_free_scan_madvise_free (11 samples, 0.23%)</title><rect x="82.7303%" y="213" width="0.2262%" height="15" fill="rgb(234,103,6)" fg:x="4024" fg:w="11"/><text x="82.9803%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.23%)</title><rect x="82.7303%" y="197" width="0.2262%" height="15" fill="rgb(227,97,0)" fg:x="4024" fg:w="11"/><text x="82.9803%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (108 samples, 2.22%)</title><rect x="80.8594%" y="229" width="2.2204%" height="15" fill="rgb(234,150,53)" fg:x="3933" fg:w="108"/><text x="81.1094%" y="239.50">l..</text></g><g><title>libsystem_malloc.dylib`medium_madvise_free_range_no_lock (6 samples, 0.12%)</title><rect x="82.9564%" y="213" width="0.1234%" height="15" fill="rgb(228,201,54)" fg:x="4035" fg:w="6"/><text x="83.2064%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.12%)</title><rect x="82.9564%" y="197" width="0.1234%" height="15" fill="rgb(222,22,37)" fg:x="4035" fg:w="6"/><text x="83.2064%" y="207.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (233 samples, 4.79%)</title><rect x="78.3717%" y="341" width="4.7903%" height="15" fill="rgb(237,53,32)" fg:x="3812" fg:w="233"/><text x="78.6217%" y="351.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;[compute_backend::types::DeciResult]&gt; (233 samples, 4.79%)</title><rect x="78.3717%" y="325" width="4.7903%" height="15" fill="rgb(233,25,53)" fg:x="3812" fg:w="233"/><text x="78.6217%" y="335.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (233 samples, 4.79%)</title><rect x="78.3717%" y="309" width="4.7903%" height="15" fill="rgb(210,40,34)" fg:x="3812" fg:w="233"/><text x="78.6217%" y="319.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;compute_backend::types::DeciResult&gt;&gt; (233 samples, 4.79%)</title><rect x="78.3717%" y="293" width="4.7903%" height="15" fill="rgb(241,220,44)" fg:x="3812" fg:w="233"/><text x="78.6217%" y="303.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;compute_backend::types::DeciResult&gt;&gt; (112 samples, 2.30%)</title><rect x="80.8594%" y="277" width="2.3026%" height="15" fill="rgb(235,28,35)" fg:x="3933" fg:w="112"/><text x="81.1094%" y="287.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 2.30%)</title><rect x="80.8594%" y="261" width="2.3026%" height="15" fill="rgb(210,56,17)" fg:x="3933" fg:w="112"/><text x="81.1094%" y="271.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 2.30%)</title><rect x="80.8594%" y="245" width="2.3026%" height="15" fill="rgb(224,130,29)" fg:x="3933" fg:w="112"/><text x="81.1094%" y="255.50">s..</text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (4 samples, 0.08%)</title><rect x="83.0798%" y="229" width="0.0822%" height="15" fill="rgb(235,212,8)" fg:x="4041" fg:w="4"/><text x="83.3298%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.08%)</title><rect x="83.0798%" y="213" width="0.0822%" height="15" fill="rgb(223,33,50)" fg:x="4041" fg:w="4"/><text x="83.3298%" y="223.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_2d (1,914 samples, 39.35%)</title><rect x="43.8322%" y="725" width="39.3503%" height="15" fill="rgb(219,149,13)" fg:x="2132" fg:w="1914"/><text x="44.0822%" y="735.50">sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_2d</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::Criterion&lt;M&gt;::bench_function (1,914 samples, 39.35%)</title><rect x="43.8322%" y="709" width="39.3503%" height="15" fill="rgb(250,156,29)" fg:x="2132" fg:w="1914"/><text x="44.0822%" y="719.50">sum_runtime-e188d8f74471bf23`criterion::Criterion&lt;M&gt;::bench_func..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,914 samples, 39.35%)</title><rect x="43.8322%" y="693" width="39.3503%" height="15" fill="rgb(216,193,19)" fg:x="2132" fg:w="1914"/><text x="44.0822%" y="703.50">sum_runtime-e188d8f74471bf23`criterion::benchmark_group::Benchma..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (1,914 samples, 39.35%)</title><rect x="43.8322%" y="677" width="39.3503%" height="15" fill="rgb(216,135,14)" fg:x="2132" fg:w="1914"/><text x="44.0822%" y="687.50">sum_runtime-e188d8f74471bf23`criterion::benchmark_group::Benchma..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::routine::Routine::test (1,913 samples, 39.33%)</title><rect x="43.8528%" y="661" width="39.3298%" height="15" fill="rgb(241,47,5)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="671.50">sum_runtime-e188d8f74471bf23`criterion::routine::Routine::test</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (1,913 samples, 39.33%)</title><rect x="43.8528%" y="645" width="39.3298%" height="15" fill="rgb(233,42,35)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="655.50">sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::collect (1,913 samples, 39.33%)</title><rect x="43.8528%" y="629" width="39.3298%" height="15" fill="rgb(231,13,6)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="639.50">sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Itera..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,913 samples, 39.33%)</title><rect x="43.8528%" y="613" width="39.3298%" height="15" fill="rgb(207,181,40)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="623.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,913 samples, 39.33%)</title><rect x="43.8528%" y="597" width="39.3298%" height="15" fill="rgb(254,173,49)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="607.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,913 samples, 39.33%)</title><rect x="43.8528%" y="581" width="39.3298%" height="15" fill="rgb(221,1,38)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="591.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,913 samples, 39.33%)</title><rect x="43.8528%" y="565" width="39.3298%" height="15" fill="rgb(206,124,46)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="575.50">sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,913 samples, 39.33%)</title><rect x="43.8528%" y="549" width="39.3298%" height="15" fill="rgb(249,21,11)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="559.50">sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each (1,913 samples, 39.33%)</title><rect x="43.8528%" y="533" width="39.3298%" height="15" fill="rgb(222,201,40)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="543.50">sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Itera..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,913 samples, 39.33%)</title><rect x="43.8528%" y="517" width="39.3298%" height="15" fill="rgb(235,61,29)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="527.50">sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,913 samples, 39.33%)</title><rect x="43.8528%" y="501" width="39.3298%" height="15" fill="rgb(219,207,3)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="511.50">sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{closure}} (1,913 samples, 39.33%)</title><rect x="43.8528%" y="485" width="39.3298%" height="15" fill="rgb(222,56,46)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="495.50">sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (1,913 samples, 39.33%)</title><rect x="43.8528%" y="469" width="39.3298%" height="15" fill="rgb(239,76,54)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="479.50">sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (1,913 samples, 39.33%)</title><rect x="43.8528%" y="453" width="39.3298%" height="15" fill="rgb(231,124,27)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="463.50">sum_runtime-e188d8f74471bf23`criterion::benchmark_group::Benchma..</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_2d::_{{closure}} (1,913 samples, 39.33%)</title><rect x="43.8528%" y="437" width="39.3298%" height="15" fill="rgb(249,195,6)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="447.50">sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_2d::_{{closu..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::bencher::Bencher&lt;M&gt;::iter (1,913 samples, 39.33%)</title><rect x="43.8528%" y="421" width="39.3298%" height="15" fill="rgb(237,174,47)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="431.50">sum_runtime-e188d8f74471bf23`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_2d::_{{closure}}::_{{closure}} (1,913 samples, 39.33%)</title><rect x="43.8528%" y="405" width="39.3298%" height="15" fill="rgb(206,201,31)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="415.50">sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_2d::_{{closu..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_2d (1,913 samples, 39.33%)</title><rect x="43.8528%" y="389" width="39.3298%" height="15" fill="rgb(231,57,52)" fg:x="2133" fg:w="1913"/><text x="44.1028%" y="399.50">sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_2d</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (234 samples, 4.81%)</title><rect x="78.3717%" y="373" width="4.8109%" height="15" fill="rgb(248,177,22)" fg:x="3812" fg:w="234"/><text x="78.6217%" y="383.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;compute_backend::types::DeciResult&gt;&gt; (234 samples, 4.81%)</title><rect x="78.3717%" y="357" width="4.8109%" height="15" fill="rgb(215,211,37)" fg:x="3812" fg:w="234"/><text x="78.6217%" y="367.50">sum_ru..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;compute_backend::types::DeciResult&gt;&gt; (1 samples, 0.02%)</title><rect x="83.1620%" y="341" width="0.0206%" height="15" fill="rgb(241,128,51)" fg:x="4045" fg:w="1"/><text x="83.4120%" y="351.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="83.1620%" y="325" width="0.0206%" height="15" fill="rgb(227,165,31)" fg:x="4045" fg:w="1"/><text x="83.4120%" y="335.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="83.1620%" y="309" width="0.0206%" height="15" fill="rgb(228,167,24)" fg:x="4045" fg:w="1"/><text x="83.4120%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="83.1620%" y="293" width="0.0206%" height="15" fill="rgb(228,143,12)" fg:x="4045" fg:w="1"/><text x="83.4120%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="83.1620%" y="277" width="0.0206%" height="15" fill="rgb(249,149,8)" fg:x="4045" fg:w="1"/><text x="83.4120%" y="287.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="84.3956%" y="229" width="0.0206%" height="15" fill="rgb(243,35,44)" fg:x="4105" fg:w="1"/><text x="84.6456%" y="239.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_reciprocals::_{{closure}} (22 samples, 0.45%)</title><rect x="84.4161%" y="229" width="0.4523%" height="15" fill="rgb(246,89,9)" fg:x="4106" fg:w="22"/><text x="84.6661%" y="239.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (222 samples, 4.56%)</title><rect x="87.4589%" y="213" width="4.5641%" height="15" fill="rgb(233,213,13)" fg:x="4254" fg:w="222"/><text x="87.7089%" y="223.50">sum_r..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{closure}} (384 samples, 7.89%)</title><rect x="84.8684%" y="229" width="7.8947%" height="15" fill="rgb(233,141,41)" fg:x="4128" fg:w="384"/><text x="85.1184%" y="239.50">sum_runtime..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (36 samples, 0.74%)</title><rect x="92.0230%" y="213" width="0.7401%" height="15" fill="rgb(239,167,4)" fg:x="4476" fg:w="36"/><text x="92.2730%" y="223.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (93 samples, 1.91%)</title><rect x="93.4211%" y="213" width="1.9120%" height="15" fill="rgb(209,217,16)" fg:x="4544" fg:w="93"/><text x="93.6711%" y="223.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (160 samples, 3.29%)</title><rect x="92.7632%" y="229" width="3.2895%" height="15" fill="rgb(219,88,35)" fg:x="4512" fg:w="160"/><text x="93.0132%" y="239.50">sum..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (35 samples, 0.72%)</title><rect x="95.3331%" y="213" width="0.7196%" height="15" fill="rgb(220,193,23)" fg:x="4637" fg:w="35"/><text x="95.5831%" y="223.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::collect (629 samples, 12.93%)</title><rect x="83.1826%" y="373" width="12.9317%" height="15" fill="rgb(230,90,52)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="383.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (629 samples, 12.93%)</title><rect x="83.1826%" y="357" width="12.9317%" height="15" fill="rgb(252,106,19)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="367.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (629 samples, 12.93%)</title><rect x="83.1826%" y="341" width="12.9317%" height="15" fill="rgb(206,74,20)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="351.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (629 samples, 12.93%)</title><rect x="83.1826%" y="325" width="12.9317%" height="15" fill="rgb(230,138,44)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="335.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (629 samples, 12.93%)</title><rect x="83.1826%" y="309" width="12.9317%" height="15" fill="rgb(235,182,43)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="319.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (629 samples, 12.93%)</title><rect x="83.1826%" y="293" width="12.9317%" height="15" fill="rgb(242,16,51)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="303.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each (629 samples, 12.93%)</title><rect x="83.1826%" y="277" width="12.9317%" height="15" fill="rgb(248,9,4)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="287.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (629 samples, 12.93%)</title><rect x="83.1826%" y="261" width="12.9317%" height="15" fill="rgb(210,31,22)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="271.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::fold (629 samples, 12.93%)</title><rect x="83.1826%" y="245" width="12.9317%" height="15" fill="rgb(239,54,39)" fg:x="4046" fg:w="629"/><text x="83.4326%" y="255.50">sum_runtime-e188d8f..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.06%)</title><rect x="96.0526%" y="229" width="0.0617%" height="15" fill="rgb(230,99,41)" fg:x="4672" fg:w="3"/><text x="96.3026%" y="239.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;[compute_backend::types::DeciResult]&gt; (166 samples, 3.41%)</title><rect x="96.1143%" y="325" width="3.4128%" height="15" fill="rgb(253,106,12)" fg:x="4675" fg:w="166"/><text x="96.3643%" y="335.50">sum..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (114 samples, 2.34%)</title><rect x="97.1834%" y="309" width="2.3438%" height="15" fill="rgb(213,46,41)" fg:x="4727" fg:w="114"/><text x="97.4334%" y="319.50">s..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168 samples, 3.45%)</title><rect x="96.1143%" y="341" width="3.4539%" height="15" fill="rgb(215,133,35)" fg:x="4675" fg:w="168"/><text x="96.3643%" y="351.50">sum..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (2 samples, 0.04%)</title><rect x="99.5271%" y="325" width="0.0411%" height="15" fill="rgb(213,28,5)" fg:x="4841" fg:w="2"/><text x="99.7771%" y="335.50"></text></g><g><title>dyld`start (4,860 samples, 99.92%)</title><rect x="0.0000%" y="869" width="99.9178%" height="15" fill="rgb(215,77,49)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="879.50">dyld`start</text></g><g><title>sum_runtime-e188d8f74471bf23`main (4,860 samples, 99.92%)</title><rect x="0.0000%" y="853" width="99.9178%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="863.50">sum_runtime-e188d8f74471bf23`main</text></g><g><title>sum_runtime-e188d8f74471bf23`std::rt::lang_start (4,860 samples, 99.92%)</title><rect x="0.0000%" y="837" width="99.9178%" height="15" fill="rgb(208,67,9)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="847.50">sum_runtime-e188d8f74471bf23`std::rt::lang_start</text></g><g><title>sum_runtime-e188d8f74471bf23`std::rt::lang_start_internal (4,860 samples, 99.92%)</title><rect x="0.0000%" y="821" width="99.9178%" height="15" fill="rgb(219,133,21)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="831.50">sum_runtime-e188d8f74471bf23`std::rt::lang_start_internal</text></g><g><title>sum_runtime-e188d8f74471bf23`std::rt::lang_start::_{{closure}} (4,860 samples, 99.92%)</title><rect x="0.0000%" y="805" width="99.9178%" height="15" fill="rgb(246,46,29)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="815.50">sum_runtime-e188d8f74471bf23`std::rt::lang_start::_{{closure}}</text></g><g><title>sum_runtime-e188d8f74471bf23`std::sys_common::backtrace::__rust_begin_short_backtrace (4,860 samples, 99.92%)</title><rect x="0.0000%" y="789" width="99.9178%" height="15" fill="rgb(246,185,52)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="799.50">sum_runtime-e188d8f74471bf23`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ops::function::FnOnce::call_once (4,860 samples, 99.92%)</title><rect x="0.0000%" y="773" width="99.9178%" height="15" fill="rgb(252,136,11)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="783.50">sum_runtime-e188d8f74471bf23`core::ops::function::FnOnce::call_once</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::main (4,860 samples, 99.92%)</title><rect x="0.0000%" y="757" width="99.9178%" height="15" fill="rgb(219,138,53)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="767.50">sum_runtime-e188d8f74471bf23`sum_runtime::main</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::benches (4,860 samples, 99.92%)</title><rect x="0.0000%" y="741" width="99.9178%" height="15" fill="rgb(211,51,23)" fg:x="0" fg:w="4860"/><text x="0.2500%" y="751.50">sum_runtime-e188d8f74471bf23`sum_runtime::benches</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_recips (814 samples, 16.74%)</title><rect x="83.1826%" y="725" width="16.7352%" height="15" fill="rgb(247,221,28)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="735.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::Criterion&lt;M&gt;::bench_function (814 samples, 16.74%)</title><rect x="83.1826%" y="709" width="16.7352%" height="15" fill="rgb(251,222,45)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="719.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (814 samples, 16.74%)</title><rect x="83.1826%" y="693" width="16.7352%" height="15" fill="rgb(217,162,53)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="703.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (814 samples, 16.74%)</title><rect x="83.1826%" y="677" width="16.7352%" height="15" fill="rgb(229,93,14)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="687.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::routine::Routine::test (814 samples, 16.74%)</title><rect x="83.1826%" y="661" width="16.7352%" height="15" fill="rgb(209,67,49)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="671.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (814 samples, 16.74%)</title><rect x="83.1826%" y="645" width="16.7352%" height="15" fill="rgb(213,87,29)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="655.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::collect (814 samples, 16.74%)</title><rect x="83.1826%" y="629" width="16.7352%" height="15" fill="rgb(205,151,52)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="639.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (814 samples, 16.74%)</title><rect x="83.1826%" y="613" width="16.7352%" height="15" fill="rgb(253,215,39)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="623.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (814 samples, 16.74%)</title><rect x="83.1826%" y="597" width="16.7352%" height="15" fill="rgb(221,220,41)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="607.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (814 samples, 16.74%)</title><rect x="83.1826%" y="581" width="16.7352%" height="15" fill="rgb(218,133,21)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="591.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (814 samples, 16.74%)</title><rect x="83.1826%" y="565" width="16.7352%" height="15" fill="rgb(221,193,43)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="575.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (814 samples, 16.74%)</title><rect x="83.1826%" y="549" width="16.7352%" height="15" fill="rgb(240,128,52)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="559.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::traits::iterator::Iterator::for_each (814 samples, 16.74%)</title><rect x="83.1826%" y="533" width="16.7352%" height="15" fill="rgb(253,114,12)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="543.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (814 samples, 16.74%)</title><rect x="83.1826%" y="517" width="16.7352%" height="15" fill="rgb(215,223,47)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="527.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (814 samples, 16.74%)</title><rect x="83.1826%" y="501" width="16.7352%" height="15" fill="rgb(248,225,23)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="511.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::iter::adapters::map::map_fold::_{{closure}} (814 samples, 16.74%)</title><rect x="83.1826%" y="485" width="16.7352%" height="15" fill="rgb(250,108,0)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="495.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (814 samples, 16.74%)</title><rect x="83.1826%" y="469" width="16.7352%" height="15" fill="rgb(228,208,7)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="479.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (814 samples, 16.74%)</title><rect x="83.1826%" y="453" width="16.7352%" height="15" fill="rgb(244,45,10)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="463.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_recips::_{{closure}} (814 samples, 16.74%)</title><rect x="83.1826%" y="437" width="16.7352%" height="15" fill="rgb(207,125,25)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="447.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`criterion::bencher::Bencher&lt;M&gt;::iter (814 samples, 16.74%)</title><rect x="83.1826%" y="421" width="16.7352%" height="15" fill="rgb(210,195,18)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="431.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`sum_runtime::bench_sum_recips::_{{closure}}::_{{closure}} (814 samples, 16.74%)</title><rect x="83.1826%" y="405" width="16.7352%" height="15" fill="rgb(249,80,12)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="415.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`compute_backend::tests::sum_reciprocals (814 samples, 16.74%)</title><rect x="83.1826%" y="389" width="16.7352%" height="15" fill="rgb(221,65,9)" fg:x="4046" fg:w="814"/><text x="83.4326%" y="399.50">sum_runtime-e188d8f74471bf..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;compute_backend::types::DeciResult&gt; (185 samples, 3.80%)</title><rect x="96.1143%" y="373" width="3.8035%" height="15" fill="rgb(235,49,36)" fg:x="4675" fg:w="185"/><text x="96.3643%" y="383.50">sum_..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;compute_backend::types::DeciResult&gt;&gt; (185 samples, 3.80%)</title><rect x="96.1143%" y="357" width="3.8035%" height="15" fill="rgb(225,32,20)" fg:x="4675" fg:w="185"/><text x="96.3643%" y="367.50">sum_..</text></g><g><title>sum_runtime-e188d8f74471bf23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;compute_backend::types::DeciResult&gt;&gt; (17 samples, 0.35%)</title><rect x="99.5683%" y="341" width="0.3495%" height="15" fill="rgb(215,141,46)" fg:x="4843" fg:w="17"/><text x="99.8183%" y="351.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.35%)</title><rect x="99.5683%" y="325" width="0.3495%" height="15" fill="rgb(250,160,47)" fg:x="4843" fg:w="17"/><text x="99.8183%" y="335.50"></text></g><g><title>sum_runtime-e188d8f74471bf23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.35%)</title><rect x="99.5683%" y="309" width="0.3495%" height="15" fill="rgb(216,222,40)" fg:x="4843" fg:w="17"/><text x="99.8183%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (17 samples, 0.35%)</title><rect x="99.5683%" y="293" width="0.3495%" height="15" fill="rgb(234,217,39)" fg:x="4843" fg:w="17"/><text x="99.8183%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_large (17 samples, 0.35%)</title><rect x="99.5683%" y="277" width="0.3495%" height="15" fill="rgb(207,178,40)" fg:x="4843" fg:w="17"/><text x="99.8183%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (17 samples, 0.35%)</title><rect x="99.5683%" y="261" width="0.3495%" height="15" fill="rgb(221,136,13)" fg:x="4843" fg:w="17"/><text x="99.8183%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (17 samples, 0.35%)</title><rect x="99.5683%" y="245" width="0.3495%" height="15" fill="rgb(249,199,10)" fg:x="4843" fg:w="17"/><text x="99.8183%" y="255.50"></text></g><g><title>all (4,864 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(249,222,13)" fg:x="0" fg:w="4864"/><text x="0.2500%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.08%)</title><rect x="99.9178%" y="869" width="0.0822%" height="15" fill="rgb(244,185,38)" fg:x="4860" fg:w="4"/><text x="100.1678%" y="879.50"></text></g></svg></svg>