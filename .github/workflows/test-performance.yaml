name: ðŸ”¬ Run Staging Performance Tests

on:
  workflow_run:
    workflows: ['Deploy PR']
    types:
      - completed

jobs:
  build:
    name: ðŸ”¬ Run Performance Tests
    timeout-minutes: 25
    runs-on: buildjet-4vcpu-ubuntu-2204
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - name: Cache Yarn dependencies and Node modules
        uses: buildjet/cache@v4
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: buildjet/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check if node_modules is cached
        id: cache-check
        run: |
          if [ -d "node_modules" ]; then
            echo "restored=true" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies
        run: yarn install --ignore-engines --ignore=apps/docs

      - name: Get installed Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(node -p "require('@playwright/test/package.json').version")
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: buildjet/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - run: npx playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run e2e & Visual Regression Tests
        env:
          NODE_OPTIONS: '--enable-source-maps --max_old_space_size=16384'
          DEPLOY_NAME: '${{ github.event.pull_request.number }}'
          TESTMAIL_APIKEY: '${{secrets.TESTMAIL_APIKEY}}'
          TESTMAIL_NAMESPACE: '${{secrets.TESTMAIL_NAMESPACE}}'
          USER_AGENT_KEY: '${{secrets.USER_AGENT_KEY}}'
          STRIPE_EXTRA_CREDITS_PRODUCT_ID: '${{secrets.DEV_STRIPE_EXTRA_CREDITS_PRODUCT_ID}}'
          STRIPE_SUBSCRIPTIONS_PRODUCT_ID: '${{secrets.DEV_STRIPE_SUBSCRIPTIONS_PRODUCT_ID}}'
          VITE_STRIPE_CUSTOMER_PORTAL_LINK: '${{vars.DEV_STRIPE_CUSTOMER_PORTAL_LINK}}'
          VITE_STRIPE_API_KEY: '${{secrets.DEV_STRIPE_API_KEY}}'
          DECI_VERBOSE: false
        run: ./scripts/e2e-performance.sh

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: /home/runner/actions-runner/_work/decipad/decipad/playwright-report
          retention-days: 3

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
    if: ${{ failure() && github.ref == 'refs/heads/main' }}

    steps:
      - name: Notify
        uses: decipad/discord-webhook@v5
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
