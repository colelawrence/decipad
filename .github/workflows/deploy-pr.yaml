name: Deploy PR

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '.husky/**'
      - '.vscode/**'
      - '.yarn/**'

jobs:
  deploy:
    # DISABLED: Product discontinued, open-sourcing codebase
    if: false
    name: üöß Deploy PR
    timeout-minutes: 90
    runs-on: buildjet-4vcpu-ubuntu-2204
    concurrency:
      group: 'deploy-pr-${{ github.event.pull_request.number }}'
      cancel-in-progress: false

    steps:
      #### Prepare
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - uses: actions-rust-lang/setup-rust-toolchain@02be93da58aa71fb456aa9c43b301149248829d8 # v1
      - uses: nrwl/nx-set-shas@826660b82addbef3abff5fa871492ebad618c9e1 # v4

      - name: Cache Yarn dependencies and Node modules
        uses: buildjet/cache@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4 # v4
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: buildjet/setup-node@6131e76b005f1e3f5c721e0ca2d8279eb577c3a8 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Uses wasm-pack
        uses: jetli/wasm-pack-action@0d096b08b4e5a7de8c28de67e11e945404e9eefa # v0.4.0
        with:
          version: 'latest'

      - name: Check if node_modules is cached
        id: cache-check
        run: |
          if [ -d "node_modules" ]; then
            echo "restored=true" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 'true'
          DECI_IMAGE_LAMBDA_LAYER: 'arn:aws:lambda:eu-west-2:861969788890:layer:sharp:2'
        run: yarn install --ignore-engines

      - name: Cache NX things
        id: node-modules-nx-cache
        uses: buildjet/cache@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4 # v4
        with:
          path: |
            node_modules/.cache
            dist
          key: nx-node-modules-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nx-node-modules-cache-

      #### Deploy
      - name: Deploy
        env:
          NODE_ENV: 'production'
          DEPLOY_NAME: '${{ github.event.pull_request.number }}'
          DECI_CUSTOM_DOMAIN: '${{ github.event.pull_request.number }}.decipadstaging.com'
          DECI_ZONE_ID: '${{secrets.DECI_DEV_ZONE_ID}}'
          DECI_CERTIFICATE_ARN: '${{secrets.DECI_DEV_CERTIFICATE_ARN}}'
          VITE_ANALYTICS_WRITE_KEY: '${{secrets.DEV_ANALYTICS_WRITE_KEY}}'
          VITE_POSTHOG_API_KEY: '${{secrets.DEV_POSTHOG_API_KEY}}'
          VITE_GOOGLE_ANALYTICS_ID: '${{secrets.DEV_GOOGLE_ANALYTICS_ID}}'
          NEXTAUTH_URL: 'https://${{ github.event.pull_request.number }}.decipadstaging.com/api/auth'
          JWT_SECRET: '${{secrets.JWT_SECRET}}'
          OPENAI_API_KEY: '${{secrets.OPENAI_API_KEY}}'
          GOOGLE_VERTEX_API_KEY: '${{secrets.GOOGLE_VERTEX_API_KEY}}'
          DEEPINFRA_API_KEY: '${{secrets.DEEPINFRA_API_KEY}}'
          GIPHY_API_KEY: '${{secrets.GIPHY_API_KEY}}'
          UNSPLASH_API_KEY: '${{secrets.UNSPLASH_API_KEY}}'
          REPLICATE_API_KEY: '${{secrets.REPLICATE_API_KEY}}'
          MAILERSEND_API_KEY: '${{secrets.MAILERSEND_API_KEY}}'
          DECI_INVITE_EXPIRATION_SECONDS: '${{vars.DECI_INVITE_EXPIRATION_SECONDS}}'
          DECI_KEY_VALIDATION_EXPIRATION_SECONDS: '${{vars.DECI_KEY_VALIDATION_EXPIRATION_SECONDS}}'
          DECI_FROM_EMAIL_ADDRESS: '${{secrets.DECI_FROM_EMAIL_ADDRESS}}'
          DECI_APP_URL_BASE: 'https://${{ github.event.pull_request.number }}.decipadstaging.com'
          DECI_S3_ENDPOINT: 's3.eu-west-2.amazonaws.com'
          DECI_S3_ACCESS_KEY_ID: '${{secrets.DECI_S3_ACCESS_KEY_ID}}'
          DECI_S3_SECRET_ACCESS_KEY: '${{secrets.DECI_S3_SECRET_ACCESS_KEY}}'
          DECI_S3_PADS_BUCKET: '${{vars.DECI_S3_PADS_BUCKET}}'
          DECI_S3_PAD_BACKUPS_BUCKET: '${{vars.DEV_DECI_S3_PAD_BACKUPS_BUCKET}}'
          DECI_S3_ATTACHMENTS_BUCKET: '${{vars.DEV_DECI_S3_ATTACHMENTS_BUCKET}}'
          DECI_S3_EXTERNAL_DATA_SNAPSHOT_BUCKET: '${{vars.DEV_DECI_S3_EXTERNAL_DATA_SNAPSHOT_BUCKET}}'
          DECI_GOOGLESHEETS_API_KEY: '${{secrets.DECI_GOOGLESHEETS_API_KEY}}'
          DECI_GOOGLESHEETS_CLIENT_ID: '${{secrets.DECI_GOOGLESHEETS_CLIENT_ID}}'
          DECI_GOOGLESHEETS_CLIENT_SECRET: '${{secrets.DECI_GOOGLESHEETS_CLIENT_SECRET}}'
          DECI_MAX_CREDITS_FREE: '${{vars.DECI_MAX_CREDITS_FREE}}'
          DECI_MAX_CREDITS_PRO: '${{vars.DECI_MAX_CREDITS_PRO}}'
          DECI_MAX_QUERIES_FREE: '${{vars.DECI_MAX_QUERIES_FREE}}'
          DECI_MAX_QUERIES_PRO: '${{vars.DECI_MAX_QUERIES_PRO}}'
          DECI_MAX_COLLAB_READERS_FREE_PLAN: '${{vars.DECI_MAX_COLLAB_READERS_FREE_PLAN}}'
          DECI_TOKENS_TO_CREDITS: '${{vars.DECI_TOKENS_TO_CREDITS}}'
          DISCORD_PUBLIC_KEY: '${{secrets.DEV_DISCORD_PUBLIC_KEY}}'
          DISCORD_APP_ID: '${{secrets.DEV_DISCORD_APP_ID}}'
          NODE_OPTIONS: '--enable-source-maps --max_old_space_size=32768'
          VITE_INTERCOM_APP_ID: '${{secrets.INTERCOM_APP_ID}}'
          VITE_INTERCOM_API_BASE: '${{secrets.INTERCOM_API_BASE}}'
          INTERCOM_SECRET_ID: '${{secrets.DEV_INTERCOM_SECRET_ID}}'
          STRIPE_API_KEY: '${{secrets.DEV_STRIPE_API_KEY}}'
          STRIPE_SECRET_KEY: '${{secrets.DEV_STRIPE_SECRET_KEY}}'
          STRIPE_EXTRA_CREDITS_PRODUCT_ID: '${{secrets.DEV_STRIPE_EXTRA_CREDITS_PRODUCT_ID}}'
          STRIPE_SUBSCRIPTIONS_PRODUCT_ID: '${{secrets.DEV_STRIPE_SUBSCRIPTIONS_PRODUCT_ID}}'
          STRIPE_WEBHOOK_SECRET: '${{secrets.DEV_STRIPE_WEBHOOK_SECRET}}'
          GIT_COMMIT_HASH: '${{github.sha}}'
          VITE_STRIPE_CUSTOMER_PORTAL_LINK: '${{vars.DEV_STRIPE_CUSTOMER_PORTAL_LINK}}'
          VITE_STRIPE_API_KEY: '${{secrets.DEV_STRIPE_API_KEY}}'
          VITE_GOOGLESHEETS_API_KEY: '${{secrets.DECI_GOOGLESHEETS_API_KEY}}'
          NOTION_CLIENT_ID: '${{secrets.NOTION_CLIENT_ID}}'
          NOTION_CLIENT_SECRET: '${{secrets.NOTION_CLIENT_SECRET}}'
          WORKSPACE_PRO_PLAN: '${{vars.WORKSPACE_PRO_PLAN}}'
          WORKSPACE_FREE_PLAN: '${{vars.WORKSPACE_FREE_PLAN}}'
          WORKSPACE_FREE_PLAN_NAME: '${{vars.WORKSPACE_FREE_PLAN_NAME}}'
          DISCORD_FEEDBACK_CHANNEL_TOKEN: '${{vars.DISCORD_FEEDBACK_CHANNEL_TOKEN}}'
          DISCORD_FEEDBACK_CHANNEL_ID: '${{vars.DISCORD_FEEDBACK_CHANNEL_ID}}'
          DECI_MAX_ATTACHMENT_SIZE: '${{vars.DECI_MAX_ATTACHMENT_SIZE}}'
          DATALAKE_GOOGLE_ROOT_SERVICE_CREDENTIALS: '${{secrets.DEV_DATALAKE_GOOGLE_ROOT_SERVICE_CREDENTIALS}}'
          DATALAKE_WEBHOOK_SECRET: '${{secrets.DEV_DATALAKE_WEBHOOK_SECRET}}'
          DATALAKE_AIRBYTE_CLIENT_ID: '${{vars.DEV_DATALAKE_AIRBYTE_CLIENT_ID}}'
          DATALAKE_AIRBYTE_CLIENT_SECRET: '${{secrets.DEV_DATALAKE_AIRBYTE_CLIENT_SECRET}}'
          DATALAKE_AIRBYTE_URL: '${{vars.DEV_DATALAKE_AIRBYTE_URL}}'
          DATALAKE_AIRBYTE_WORKSPACE_ID: '${{vars.DEV_DATALAKE_AIRBYTE_WORKSPACE_ID}}'
          DEBUG: '@decipad/backend-notebook-assistant,@decipad/backend-notebook-assistan/*t,@decipad/backend-code-assistant,@decipad/notebook-open-api,@decipad/backend-notebook,@decipad/backend-search'
        run: |
          export SAM_BUCKET="decipad-dev-backend-sam"
          export SAM_LOCATION="s3://decipad-dev-backend-sam/${{env.DECI_CUSTOM_DOMAIN}}"
          scripts/pull-sam.sh

          cd apps/backend
          export PATH=../../node_modules/.bin:$PATH
          arc env staging NODE_OPTIONS --enable-source-maps --max_old_space_size=32768
          cd ../..

          yarn deploy:pr
          scripts/push-sam.sh

  notify-deploy:
    name: Discord Notification for Deploy
    runs-on: ubuntu-latest
    needs: deploy
    if: false
    steps:
      - name: Notify
        uses: decipad/discord-webhook@4d1e357ee56442b97220c62f5f17a3e05a515291 # v5
        with:
          title: "${{ needs.deploy.result == 'success' && 'üíö' || needs.deploy.result == 'cancelled' &&  'üóëÔ∏è' || 'üî¥'}} Deploy PR #${{ github.event.pull_request.number }} ${{github.event.pull_request.title }}"
          description: 'https://${{  github.event.pull_request.number  }}.decipadstaging.com'
          github-token: ${{ secrets.github_token }}
          avatar-url: "https://singlecolorimage.com/get/${{ needs.deploy.result == 'failure' && 'f6dae1' || 'd2ec7b' }}/100x100"
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          include-details: false

  staging-tests:
    # Disabled
    if: false
    name: üî¨ Run Staging Tests
    runs-on: buildjet-4vcpu-ubuntu-2204
    needs: deploy
    timeout-minutes: 35
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: actions-rust-lang/setup-rust-toolchain@02be93da58aa71fb456aa9c43b301149248829d8 # v1

      - name: Cache Yarn dependencies and Node modules
        uses: buildjet/cache@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4 # v4
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Uses wasm-pack
        uses: jetli/wasm-pack-action@0d096b08b4e5a7de8c28de67e11e945404e9eefa # v0.4.0
        with:
          version: 'latest'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: buildjet/setup-node@6131e76b005f1e3f5c721e0ca2d8279eb577c3a8 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check if node_modules is cached
        id: cache-check
        run: |
          if [ -d "node_modules" ]; then
            echo "restored=true" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies
        run: yarn install --ignore-engines --ignore=apps/docs

      - name: Get installed Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(node -p "require('@playwright/test/package.json').version")
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: buildjet/cache@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4 # v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - run: npx playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run e2e & Visual Regression Tests
        env:
          NODE_OPTIONS: '--enable-source-maps --max_old_space_size=16384'
          DEPLOY_NAME: '${{ github.event.pull_request.number }}'
          TESTMAIL_APIKEY: '${{secrets.TESTMAIL_APIKEY}}'
          TESTMAIL_NAMESPACE: '${{secrets.TESTMAIL_NAMESPACE}}'
          USER_AGENT_KEY: '${{secrets.USER_AGENT_KEY}}'
          STRIPE_EXTRA_CREDITS_PRODUCT_ID: '${{secrets.DEV_STRIPE_EXTRA_CREDITS_PRODUCT_ID}}'
          STRIPE_SUBSCRIPTIONS_PRODUCT_ID: '${{secrets.DEV_STRIPE_SUBSCRIPTIONS_PRODUCT_ID}}'
          VITE_STRIPE_CUSTOMER_PORTAL_LINK: '${{vars.DEV_STRIPE_CUSTOMER_PORTAL_LINK}}'
          VITE_STRIPE_API_KEY: '${{secrets.DEV_STRIPE_API_KEY}}'
          DECI_VERBOSE: false
        run: ./scripts/e2e-staging.sh

      - name: Upload
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: playwright-report
          path: /home/runner/actions-runner/_work/decipad/decipad/playwright-report
          retention-days: 3
  notify-staging:
    name: Discord Notification for Staging Tests
    runs-on: ubuntu-latest
    needs: staging-tests
    if: false

    steps:
      - name: Notify
        uses: decipad/discord-webhook@4d1e357ee56442b97220c62f5f17a3e05a515291 # v5
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
