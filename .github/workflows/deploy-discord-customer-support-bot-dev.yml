name: Deploy Discord Customer Support Bot

on:
  workflow_run:
    workflows: ['Deploy Dev']
    types:
      - completed

jobs:
  deploy-bot:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-discord-customer-support-bot
      cancel-in-progress: true
    steps:
      #### Prepare

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Uses wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Install
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 'true'
        run: yarn install --ignore-engines

      - name: Cache NX things
        id: node-modules-nx-cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.cache
            dist
          key: nx-node-modules-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nx-node-modules-cache-

      #### Deploy

      - name: Deploy Discord Bot
        env:
          DISCORD_APP_ID: '${{secrets.DEV_DISCORD_APP_ID}}'
          DISCORD_BOT_TOKEN: '${{secrets.DEV_DISCORD_BOT_TOKEN}}'
        run: |
          yarn deploy:discord-customer-support-bot
