name: Deploy dev

on:
  push:
    branches: [main]
  # workflow_run:
  #   workflows: ['Run Tests', 'Run E2E Tests']
  #   branches: [main]
  #   types:
  #     - completed

jobs:
  deploy:
    # if: ${{ github.event.workflow_run.conclusion == 'success' && github.event_name != 'pull_request' }}
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-dev
      cancel-in-progress: false

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          architecture: 'x64'
          cache: yarn

      - name: Uses wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Install
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 'true'
          DECI_IMAGE_LAMBDA_LAYER: 'arn:aws:lambda:eu-west-2:974894071214:layer:sharp:1'
        run: yarn install --ignore-engines

      - name: Cache NX things
        id: node-modules-nx-cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.cache
            dist
          key: nx-node-modules-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nx-node-modules-cache-

      - name: Deploy
        env:
          DEPLOY_NAME: 'dev'
          NODE_ENV: 'production'
          NEXTAUTH_URL: 'https://dev.decipad.com/api/auth'
          JWT_SECRET: '${{secrets.JWT_SECRET}}'
          OPENAI_API_KEY: '${{secrets.OPENAI_API_KEY}}'
          GIPHY_API_KEY: '${{secrets.GIPHY_API_KEY}}'
          UNSPLASH_API_KEY: '${{secrets.UNSPLASH_API_KEY}}'
          REPLICATE_API_KEY: '${{secrets.REPLICATE_API_KEY}}'
          OPENAI_DECIPAD_GPT_BEARER_KEY: '${{ secrets.OPENAI_DECIPAD_GPT_BEARER_KEY }}'
          SENTRY_DSN: '${{secrets.SENTRY_DSN}}'
          SENTRY_ORG: '${{secrets.SENTRY_ORG}}'
          SENTRY_PROJECT: '${{secrets.SENTRY_PROJECT}}'
          SENTRY_AUTH_TOKEN: '${{secrets.SENTRY_AUTH_TOKEN}}'
          SENTRY_ENVIRONMENT: 'staging'
          MAILERSEND_API_KEY: '${{secrets.MAILERSEND_API_KEY}}'
          DECI_INVITE_EXPIRATION_SECONDS: '${{vars.DECI_INVITE_EXPIRATION_SECONDS}}'
          DECI_KEY_VALIDATION_EXPIRATION_SECONDS: '${{vars.DECI_KEY_VALIDATION_EXPIRATION_SECONDS}}'
          DECI_FROM_EMAIL_ADDRESS: '${{vars.DECI_FROM_EMAIL_ADDRESS}}'
          DECI_APP_URL_BASE: 'https://dev.decipad.com'
          DECI_S3_ENDPOINT: 's3.eu-west-2.amazonaws.com'
          DECI_S3_ACCESS_KEY_ID: '${{secrets.DECI_S3_ACCESS_KEY_ID}}'
          DECI_S3_SECRET_ACCESS_KEY: '${{secrets.DECI_S3_SECRET_ACCESS_KEY}}'
          DECI_S3_PADS_BUCKET: '${{vars.DECI_S3_PADS_BUCKET}}'
          DECI_S3_PAD_BACKUPS_BUCKET: '${{vars.DEV_DECI_S3_PAD_BACKUPS_BUCKET}}'
          DECI_S3_ATTACHMENTS_BUCKET: '${{vars.DEV_DECI_S3_ATTACHMENTS_BUCKET}}'
          DECI_S3_EXTERNAL_DATA_SNAPSHOT_BUCKET: '${{vars.DEV_DECI_S3_EXTERNAL_DATA_SNAPSHOT_BUCKET}}'
          DECI_GOOGLESHEETS_API_KEY: '${{secrets.DECI_GOOGLESHEETS_API_KEY}}'
          DECI_GOOGLESHEETS_CLIENT_ID: '${{secrets.DECI_GOOGLESHEETS_CLIENT_ID}}'
          DECI_GOOGLESHEETS_CLIENT_SECRET: '${{secrets.DECI_GOOGLESHEETS_CLIENT_SECRET}}'
          DECI_MAX_CREDITS_FREE: '${{vars.DECI_MAX_CREDITS_FREE}}'
          DECI_MAX_CREDITS_PRO: '${{vars.DECI_MAX_CREDITS_PRO}}'
          DECI_MAX_QUERIES_FREE: '${{vars.DECI_MAX_QUERIES_FREE}}'
          DECI_MAX_QUERIES_PRO: '${{vars.DECI_MAX_QUERIES_PRO}}'
          DECI_MAX_COLLAB_READERS_FREE_PLAN: '${{vars.DECI_MAX_COLLAB_READERS_FREE_PLAN}}'
          DECI_TOKENS_TO_CREDITS: '${{vars.DECI_TOKENS_TO_CREDITS}}'
          DISCORD_PUBLIC_KEY: '${{secrets.DEV_DISCORD_PUBLIC_KEY}}'
          DISCORD_APP_ID: '${{secrets.DEV_DISCORD_APP_ID}}'
          NODE_OPTIONS: '--enable-source-maps --max_old_space_size=32768'
          VITE_ANALYTICS_WRITE_KEY: '${{secrets.DEV_ANALYTICS_WRITE_KEY}}'
          VITE_POSTHOG_API_KEY: '${{secrets.DEV_POSTHOG_API_KEY}}'
          VITE_GOOGLE_ANALYTICS_ID: '${{secrets.DEV_GOOGLE_ANALYTICS_ID}}'
          VITE_INTERCOM_APP_ID: '${{secrets.DEV_INTERCOM_APP_ID}}'
          VITE_INTERCOM_API_BASE: '${{secrets.INTERCOM_API_BASE}}'
          INTERCOM_SECRET_ID: '${{secrets.DEV_INTERCOM_SECRET_ID}}'
          STRIPE_API_KEY: '${{secrets.DEV_STRIPE_API_KEY}}'
          STRIPE_SECRET_KEY: '${{secrets.DEV_STRIPE_SECRET_KEY}}'
          STRIPE_EXTRA_CREDITS_PRODUCT_ID: '${{secrets.DEV_STRIPE_EXTRA_CREDITS_PRODUCT_ID}}'
          STRIPE_SUBSCRIPTIONS_PRODUCT_ID: '${{secrets.DEV_STRIPE_SUBSCRIPTIONS_PRODUCT_ID}}'
          STRIPE_WEBHOOK_SECRET: '${{secrets.DEV_STRIPE_WEBHOOK_SECRET}}'
          VITE_STRIPE_CUSTOMER_PORTAL_LINK: '${{vars.DEV_STRIPE_CUSTOMER_PORTAL_LINK}}'
          VITE_STRIPE_API_KEY: '${{secrets.DEV_STRIPE_API_KEY}}'
          VITE_GOOGLESHEETS_API_KEY: '${{secrets.DECI_GOOGLESHEETS_API_KEY}}'
          GIT_COMMIT_HASH: '${{github.sha}}'
          NOTION_CLIENT_ID: '${{secrets.NOTION_CLIENT_ID}}'
          NOTION_CLIENT_SECRET: '${{secrets.NOTION_CLIENT_SECRET}}'
          WORKSPACE_PRO_PLAN: '${{vars.WORKSPACE_PRO_PLAN}}'
          WORKSPACE_FREE_PLAN: '${{vars.WORKSPACE_FREE_PLAN}}'
          WORKSPACE_FREE_PLAN_NAME: '${{vars.WORKSPACE_FREE_PLAN_NAME}}'
          DISCORD_FEEDBACK_CHANNEL_TOKEN: '${{vars.DISCORD_FEEDBACK_CHANNEL_TOKEN}}'
          DISCORD_FEEDBACK_CHANNEL_ID: '${{vars.DISCORD_FEEDBACK_CHANNEL_ID}}'
          DATALAKE_GOOGLE_ROOT_SERVICE_CREDENTIALS: '${{secrets.DEV_DATALAKE_GOOGLE_ROOT_SERVICE_CREDENTIALS}}'
          DATALAKE_WEBHOOK_SECRET: '${{secrets.DEV_DATALAKE_WEBHOOK_SECRET}}'
          DATALAKE_AIRBYTE_CLIENT_ID: '${{vars.DEV_DATALAKE_AIRBYTE_CLIENT_ID}}'
          DATALAKE_AIRBYTE_CLIENT_SECRET: '${{secrets.DEV_DATALAKE_AIRBYTE_CLIENT_SECRET}}'
          DATALAKE_AIRBYTE_URL: '${{vars.DEV_DATALAKE_AIRBYTE_URL}}'
          DATALAKE_AIRBYTE_WORKSPACE_ID: '${{vars.DEV_DATALAKE_AIRBYTE_WORKSPACE_ID}}'
          DEBUG: '@decipad/backend-notebook-assistant,@decipad/backend-notebook-assistant,@decipad/backend-code-assistant'
          DECI_MAX_ATTACHMENT_SIZE: '${{vars.DECI_MAX_ATTACHMENT_SIZE}}'
        run: |
          export SAM_BUCKET=decipad-backend-sam
          export SAM_LOCATION="s3://decipad-backend-sam/dev.decipad.com"
          scripts/pull-sam.sh

          cd apps/backend
          export PATH=../../node_modules/.bin:$PATH
          arc env staging NODE_OPTIONS --enable-source-maps --max_old_space_size=32768
          cd ../..
          scripts/push-sam.sh

          yarn clean
          yarn deploy

      - name: Update AI indexes
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: yarn update_ai_indexes DecipadBackendStaging

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - deploy
    steps:
      - name: Notify
        uses: decipad/discord-webhook@v5
        with:
          title: Deploy Dev ${{ needs.deploy.result == 'success' && '💚' || needs.deploy.result == 'cancelled' &&  '🗑️' || '🔴'}}
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          description: ${{github.event.head_commit.message}}
          include-details: true

  staging-tests:
    name: 🔬 Run Dev Staging Tests
    runs-on: buildjet-4vcpu-ubuntu-2204
    needs: deploy
    timeout-minutes: 35
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Cache Yarn dependencies and Node modules
        uses: buildjet/cache@v4
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Uses wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: buildjet/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check if node_modules is cached
        id: cache-check
        run: |
          if [ -d "node_modules" ]; then
            echo "restored=true" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies
        run: yarn install --ignore-engines --ignore=apps/docs

      - name: Get installed Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(node -p "require('@playwright/test/package.json').version")
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: buildjet/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - run: npx playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run e2e & Visual Regression Tests
        env:
          NODE_OPTIONS: '--enable-source-maps --max_old_space_size=16384'
          DEPLOY_NAME: 'dev'
          TESTMAIL_APIKEY: '${{secrets.TESTMAIL_APIKEY}}'
          TESTMAIL_NAMESPACE: '${{secrets.TESTMAIL_NAMESPACE}}'
          USER_AGENT_KEY: '${{secrets.USER_AGENT_KEY}}'
          STRIPE_EXTRA_CREDITS_PRODUCT_ID: '${{secrets.DEV_STRIPE_EXTRA_CREDITS_PRODUCT_ID}}'
          STRIPE_SUBSCRIPTIONS_PRODUCT_ID: '${{secrets.DEV_STRIPE_SUBSCRIPTIONS_PRODUCT_ID}}'
          VITE_STRIPE_CUSTOMER_PORTAL_LINK: '${{vars.DEV_STRIPE_CUSTOMER_PORTAL_LINK}}'
          VITE_STRIPE_API_KEY: '${{secrets.DEV_STRIPE_API_KEY}}'
          DECI_VERBOSE: false
        run: ./scripts/e2e-staging.sh

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: /home/runner/actions-runner/_work/decipad/decipad/playwright-report
          retention-days: 3

      - name: Upload Summary Results
        if: always()
        env:
          UPLOAD_PERFORMANCE_RESULTS_GSHEETS_MACRO_URL: ${{ secrets.UPLOAD_PERFORMANCE_RESULTS_GSHEETS_MACRO_URL }}
        run: yarn upload-performance-results

  notify-staging:
    name: Discord Notification for Staging Tests
    runs-on: ubuntu-latest
    needs: staging-tests
    if: ${{ failure() && github.ref == 'refs/heads/main' }}

    steps:
      - name: Notify
        uses: decipad/discord-webhook@v5
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
