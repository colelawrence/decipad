name: Lint & Typecheck

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    name: ðŸ“‹ Lint & Typecheck
    timeout-minutes: 60
    runs-on: ubuntu-latest
    concurrency:
      group: lint-typecheck-${{ github.head_ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        node-version: [24.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - uses: actions-rust-lang/setup-rust-toolchain@02be93da58aa71fb456aa9c43b301149248829d8 # v1
      - uses: nrwl/nx-set-shas@826660b82addbef3abff5fa871492ebad618c9e1 # v4

      - name: Cache Yarn dependencies and Node modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Uses wasm-pack
        uses: jetli/wasm-pack-action@0d096b08b4e5a7de8c28de67e11e945404e9eefa # v0.4.0
        with:
          version: 'latest'

      - name: Clean install dependencies for Node.js 24
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 'true'
        run: |
          # Remove node_modules and yarn cache to ensure fresh install
          rm -rf node_modules
          yarn cache clean
          # Install dependencies from scratch
          yarn install --ignore-engines

      - name: Generates wasm files + JS bindings
        id: wasm-generation
        run: yarn build:wasm

      - name: Lint
        env:
          NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
        run: npx nx affected --target=lint --parallel=2

      - name: Typecheck
        run: yarn typecheck
        env:
          NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
          NODE_OPTIONS: '--enable-source-maps --max_old_space_size=16384'

      - name: Depcheck
        env:
          NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
          NODE_OPTIONS: '--max_old_space_size=32768'
        run: npx nx affected --target=depcheck --parallel=2

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
    if: false

    steps:
      - name: Notify
        uses: decipad/discord-webhook@4d1e357ee56442b97220c62f5f17a3e05a515291 # v5
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
