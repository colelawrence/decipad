name: ðŸ”¬ Run E2E Tests

on:
  push:
    # Since Percy will auto-approve main, it'll become the new baseline for
    # future PRs.
    branches: [main]
    paths-ignore:
      - '.github/**'
      - '.husky/**'
      - '.vscode/**'
      - '.yarn/**'
      - 'apps/docs/**'
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '.github/**'
      - '.husky/**'
      - '.vscode/**'
      - '.yarn/**'
      - 'apps/docs/**'
env:
  PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_number }}

jobs:
  build:
    name: ðŸ”¬ Run e2e Tests
    timeout-minutes: 60
    runs-on: buildjet-4vcpu-ubuntu-2204
    concurrency:
      group: e2e-${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }} - ${{ matrix.shard }}
      cancel-in-progress: true

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        shard: [1, 2]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: buildjet/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Install Dependencies
        run: yarn install --ignore-engines --ignore=apps/docs

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Build Back-End
        run: yarn build:backend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Run e2e & Visual Regression Tests (${{ matrix.shard }}/${{ strategy.job-total }})
        env:
          PERCY_TOKEN: '${{ secrets.PERCY_TOKEN }}'
          NODE_OPTIONS: '--enable-source-maps --max_old_space_size=16384'
          REACT_APP_STRIPE_PAYMENT_LINK: '${{secrets.DEV_STRIPE_PAYMENT_LINK}}'
          REACT_APP_STRIPE_CUSTOMER_PORTAL_LINK: '${{secrets.DEV_STRIPE_CUSTOMER_PORTAL_LINK}}'
          DECI_VERBOSE: true
        run: ./scripts/e2e.sh ${{ matrix.shard }} ${{ strategy.job-total }}

      - name: Upload Blob Report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: all-blob-reports
          path: /home/runner/actions-runner/_work/decipad/decipad/blob-report
          retention-days: 1

  merge-reports:
    name: ðŸ“‹ Create Report
    # merge reports after playwright-tests, even if some shards have failed
    if: failure()
    needs: [build]

    runs-on: ubuntu-latest
    concurrency:
      group: report-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Install Dependencies
        run: yarn install --ignore-engines --ignore=apps/docs

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: all-blob-reports
          path: all-blob-reports

      - name: Merge Girhub Report
        run: npx playwright merge-reports --reporter github ./all-blob-reports
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 5

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
    if: ${{ failure() && github.ref == 'refs/heads/main' }}

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
