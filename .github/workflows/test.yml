name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Npm cache
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache
          key: npm-and-cypress-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-and-cypress-

      - run: npm ci

      - name: Cache NX things
        id: node-modules-nx-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules/.cache
            dist
          key: nx-node-modules-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            nx-node-modules-cache-

      - run: npm run lint
      - run: npm run typecheck

      - name: Make sure the frontend can be built
        run: npm run build:frontend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Run tests
        run: npm run test:coverage
        env:
          JWT_SECRET: '23eqhjdskajhaskjcatwndasjkdn0alklrjqwr92309e'
          JWT_SIGNING_PRIVATE_KEY: 'eyJrdHkiOiJvY3QiLCJraWQiOiJaT1pyczN3WjlHMkFOUU1jMkg3NGZ2Wks5ZzUwZEJkRnVDckVDUXdiem5NIiwiYWxnIjoiSFM1MTIiLCJrIjoiSmJkSFlQc1NZaWlIRGFiSlpUbzFWVUpkOEhGNTZlQ01fNExUYm5jdzhXZyJ9'
          DECI_INVITE_EXPIRATION_SECONDS: '604800'
          DECI_KEY_VALIDATION_EXPIRATION_SECONDS: '2592000'
          APP_ROOT_PATH: '/'
          NODE_OPTIONS: --enable-source-maps
          DECI_FROM_EMAIL_ADDRESS: info@decipad.com
          DECI_S3_ENDPOINT: localhost:4568
          DECI_S3_ACCESS_KEY_ID: S3RVER
          DECI_S3_SECRET_ACCESS_KEY: S3RVER
          DECI_S3_PADS_BUCKET: pads
          DECI_S3_ATTACHMENTS_BUCKET: attachments
          DECI_SES_ACCESS_KEY_ID: 'is not really used in backend tests'
          DECI_SES_SECRET_ACCESS_KEY: 'is not really used in backend tests'
          GITHUB_CLIENT_ID: 'is not really used in backend tests'
          GITHUB_CLIENT_SECRET: 'is not really used in backend tests'

      - name: Run end-to-end tests
        run: ./scripts/e2e.sh

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
    if: ${{ failure() && github.ref == 'refs/heads/main' }}

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
