name: Deploy Alpha

on:
  release:
    types: ['published']

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-stack
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Cache yarn
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-cache-

      - name: Install
        run: yarn install

      - name: Cache NX things
        id: node-modules-nx-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules/.cache
            dist
          key: nx-node-modules-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nx-node-modules-cache-

      - name: Deploy
        env:
          DEPLOY_NAME: 'alpha'
          DECI_CUSTOM_DOMAIN: 'alpha.decipad.com'
          DECI_ZONE_ID: '${{secrets.DECI_ZONE_ID}}'
          DECI_CERTIFICATE_ARN: '${{secrets.DECI_ALPHA_CERTIFICATE_ARN}}'
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_ENVIRONMENT: alpha

        run: |
          export SAM_LOCATION="s3://decipad-backend-sam/alpha.decipad.com"
          scripts/pull-sam.sh

          cd apps/backend
          export PATH=./node_modules/.bin:$PATH
          arc env staging JWT_SIGNING_PRIVATE_KEY ${{secrets.ALPHA_JWT_SIGNING_PRIVATE_KEY}}
          arc env staging NEXTAUTH_URL https://alpha.decipad.com/api/auth
          arc env staging GITHUB_CLIENT_ID ${{secrets.DECI_ALPHA_GITHUB_CLIENT_ID}}
          arc env staging GITHUB_CLIENT_SECRET ${{secrets.DECI_ALPHA_GITHUB_CLIENT_SECRET}}
          arc env staging JWT_SECRET ${{secrets.ALPHA_JWT_SECRET}}
          arc env staging SENTRY_DSN ${{secrets.SENTRY_DSN}}
          arc env staging SENTRY_ENVIRONMENT alpha
          arc env staging DECI_SES_ACCESS_KEY_ID '${{secrets.DECI_SES_ACCESS_KEY_ID}}'
          arc env staging DECI_SES_SECRET_ACCESS_KEY '${{secrets.DECI_SES_SECRET_ACCESS_KEY}}'
          arc env staging DECI_INVITE_EXPIRATION_SECONDS '${{secrets.DECI_INVITE_EXPIRATION_SECONDS}}'
          arc env staging DECI_KEY_VALIDATION_EXPIRATION_SECONDS '${{secrets.DECI_KEY_VALIDATION_EXPIRATION_SECONDS}}'
          arc env staging DECI_FROM_EMAIL_ADDRESS '${{secrets.DECI_FROM_EMAIL_ADDRESS}}'
          arc env staging DECI_APP_URL_BASE https://alpha.decipad.com
          arc env staging DECI_S3_ENDPOINT 's3.eu-west-2.amazonaws.com'
          arc env staging DECI_S3_ACCESS_KEY_ID '${{secrets.DECI_S3_ACCESS_KEY_ID}}'
          arc env staging DECI_S3_SECRET_ACCESS_KEY '${{secrets.DECI_S3_SECRET_ACCESS_KEY}}'
          arc env staging DECI_S3_PADS_BUCKET '${{secrets.DECI_S3_PADS_BUCKET}}'
          arc env staging DECI_S3_ATTACHMENTS_BUCKET '${{secrets.ALPHA_DECI_S3_ATTACHMENTS_BUCKET}}'
          arc env staging DECI_GOOGLESHEETS_API_KEY '${{secrets.ALPHA_DECI_GOOGLESHEETS_API_KEY}}'
          arc env staging DECI_GOOGLESHEETS_CLIENT_ID '${{secrets.ALPHA_DECI_GOOGLESHEETS_CLIENT_ID}}'
          arc env staging DECI_GOOGLESHEETS_CLIENT_SECRET '${{secrets.ALPHA_DECI_GOOGLESHEETS_CLIENT_SECRET}}'
          arc env staging DISCORD_PUBLIC_KEY '${{secrets.DISCORD_PUBLIC_KEY}}'
          arc env staging DISCORD_APP_ID '${{secrets.DISCORD_APP_ID}}'
          arc env staging NODE_OPTIONS --enable-source-maps
          cd ../..

          export NEXT_PUBLIC_HOTJAR_SITE_ID=${{secrets.ALPHA_HOTJAR_SITE_ID}}
          export NEXT_PUBLIC_ANALYTICS_WRITE_KEY=${{secrets.ALPHA_ANALYTICS_WRITE_KEY}}
          yarn deploy:alpha
          scripts/push-sam.sh

  # notify:
  #   name: Discord Notification
  #   runs-on: ubuntu-latest
  #   needs: # make sure the notification is sent AFTER the jobs you want included have completed
  #     - deploy
  #   if: ${{ failure() }}
  #   steps:
  #     - name: Notify
  #       uses: nobrayner/discord-webhook@v1
  #       with:
  #         title: "${{ needs.deploy.result == 'failure' && 'ðŸ”´' || 'ðŸ’š'}} alpha deploy"
  #         description: 'https://alpha.dev.decipad.com'
  #         github-token: ${{ secrets.github_token }}
  #         avatar-url: "https://singlecolorimage.com/get/${{ needs.deploy.result == 'failure' && 'f6dae1' || 'd2ec7b' }}/100x100"
  #         discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
  #         include-details: true
