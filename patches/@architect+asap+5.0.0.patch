diff --git a/node_modules/@architect/asap/src/asap.js b/node_modules/@architect/asap/src/asap.js
index 4e4c0a0..0205262 100644
--- a/node_modules/@architect/asap/src/asap.js
+++ b/node_modules/@architect/asap/src/asap.js
@@ -44,14 +44,11 @@ function asap (config = {}) {
       return errors.proxyConfig
     }
 
+
     /**
      * Configure SPA + set up the file to be requested
      */
-    let spa = ARC_STATIC_SPA === 'false'
-      ? false
-      : config && config.spa
-    if (!spa) config.spa = false
-    if (spa) {
+    if (config.spa) {
       // If SPA: force index.html
       Key = isFolder ? 'index.html' : path.substring(1)
     }
diff --git a/node_modules/@architect/asap/src/read/_local.js b/node_modules/@architect/asap/src/read/_local.js
index 4088699..ff1d493 100644
--- a/node_modules/@architect/asap/src/read/_local.js
+++ b/node_modules/@architect/asap/src/read/_local.js
@@ -22,7 +22,6 @@ let pretty = require('./_pretty')
  * @returns {Object} { statusCode, headers, body }
  */
 module.exports = async function readLocal (params) {
-
   let { Key, IfNoneMatch, isFolder, config } = params
   let { ARC_STATIC_BUCKET, ARC_STATIC_PREFIX: staticPrefix } = process.env
   let headers = {}
diff --git a/node_modules/@architect/asap/src/read/_s3.js b/node_modules/@architect/asap/src/read/_s3.js
index 57b01e6..acacb51 100644
--- a/node_modules/@architect/asap/src/read/_s3.js
+++ b/node_modules/@architect/asap/src/read/_s3.js
@@ -75,6 +75,8 @@ module.exports = async function readS3 (params) {
       options.IfNoneMatch = IfNoneMatch
     }
 
+    console.log('s3 get object', options);
+
     let result = await s3.getObject(options).promise().catch(err => {
       // ETag matches (getObject error code of NotModified), so don't transit the whole file
       if (err.code === 'NotModified') {
